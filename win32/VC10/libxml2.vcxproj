<?xml version="1.0" encoding="utf-8"?>
<!--
    ============================================================================
    Name:               /libxml2-2.9.9/win32/VC10/libxml2.vcxproj

    Goal:               Define Microsoft MSBuild and Visual Studio configuration
                        to build libxml2 for the Win32, x64, ARM, and ARM64
                        platforms.

    Remarks:            Although this file has been extensively hand-edited, and
                        some elements, such as the AfterBuild target and the
                        TestSubjectDLL element on which it relies, are hidden
                        from the Microsoft Visual Studio editors, everything
                        works correctly when the project is built within Visual
                        Studio. Should the need arise to use the Visual Studio
                        property sheet forms to edit these settings, the hidden
                        bits are preserved, though redundant white space is
                        removed.

    ============================================================================
    Revision History
    ============================================================================

    Date       By Remark
    ========== == ==============================================================
    2019/03/29 DG Add xzlib.c, which was in the source code directory, but was
                  omitted from the project. As well, add an AfterBuild step to
                  copy the Visual C runtime library for the correct platform
                  into the output directory.
    ============================================================================
-->
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{1D6039F6-5078-416F-A3AF-A36EFC7E6A1C}</ProjectGuid>
    <RootNamespace>libxml2</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.17763.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)'=='Debug'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <!-- The TargetExt property is derived from this value. DynamicLibrary maps to .dll, while Application maps to .exe, where both have a leading dot. -->
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <!-- Setting this adds both UNICODE, for the Win32 API, and _UNICODE, for the CRT API, to the preprocessor symbols list. -->
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)'=='Release'" Label="Configuration">
    <!-- The TargetExt property is derived from the ConfigurationType.
         DynamicLibrary maps to .dll, while Application maps to .exe, and
         StaticLibrary to .lib, where all three have a leading dot.
    -->
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <!-- Setting CharacterSet adds both UNICODE for the Win32 API, and _UNICODE
         for the CRT API, to the preprocessor symbols list.
    -->
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v141</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <OutDir>$(ProjectDir)..\$(Platform)\$(Configuration)\</OutDir>
    <IntDir>$(ProjectDir)$(Platform)\$(ProjectName)_$(Configuration)\</IntDir>
    <TargetName>$(ProjectName)$(PlatformArchitecture)</TargetName>
  </PropertyGroup>
  <!--
    ============================================================================
    2019/03/11 - DAG - If my reading of "ARM Intrinsics" is correct, it may be
                       that the Visual C++ cross compiler for ARM processors
                       emits NEON instructions by default. That being the case,
                       this project configuration file explicitly enables SSE2
                       instructions when the platform is Win32 (x86) or Win64
                       (x64), and is silent in that regard when the target is
                       either ARM (ARM32) or ARM64.

    Reference:  "ARM Intrinsics"
                https://docs.microsoft.com/en-us/cpp/intrinsics/arm-intrinsics?view=vs-2017

    2019/03/22 - DAG - It appears that AdvancedVectorExtensions2 is equivalent
                       to StreamingSIMDExtensions2 for the x64 platform. For all
                       other platforms, both are disabled.

                       After further experimentation, I'm leaving the decision
                       to the compiler, since it appears that the default is to
                       use them if available.
    ============================================================================
  -->
  <!--
    ============================================================================
    2019/03/13 - DAG - This item group feeds the AfterBuild target overrride,
                       which appears last, since the task it overrides must
                       first be imported.

                       $(SolutionDir) & $(ProjectDir) have terminal backslashes.

    IMPORTANT: Using $(SolutionDir) prevents the project being built by invoking
               MSBuild via a command prompt, because the $(SolutionDir) is equal
               to $(ProjectDir), while the two usually differ when the build is
               performed by Visual Studio.
    ============================================================================
  -->
  <ItemGroup>
    <TestSubjectDLL Include="$(ProjectDir)vcruntime140\$(Platform)\vcruntime140.dll" />
  </ItemGroup>
  <!-- This file list goes into the Copy task of targets AfterBuild2 and
       AfterBuild3, both of which run only for release builds.
  -->
  <ItemGroup>
    <LibsBuilt Include="$(OutDir)$(TargetName)$(TargetExt);$(OutDir)$(TargetName).pdb" />
  </ItemGroup>
  <!-- This file list goes into the Copy task of targets AfterBuild4 and
       AfterBuild5, both of which always run.
  -->
  <ItemGroup>
    <LinkLibsAre Include="$(OutDir)$(TargetName).lib" />
  </ItemGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <FloatingPointExceptions>true</FloatingPointExceptions>
      <!-- ZLIB_WINAPI appears in the CPP declarations of both the library and
           unit test build scripts.
      -->
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- The following keys have the same values for all configurations and
           platforms.
      -->
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <!-- The ExceptionHandling key covers C++ exceptions. For pure C code, its
           value is moot. Since they can arise anywhere, FloatingPointExceptions
           are always a possibility. Alas, the ARM platform eats them.
      -->
      <ExceptionHandling>
      </ExceptionHandling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- The following keys have the same values for MOST configurations and
           platforms.
      -->
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>true</ImageHasSafeExceptionHandlers>
      <!-- Ws2_32.lib is the Winsock library. Since it's a system library, it
           must never be distributed, and the correct version should be present
           on any Windows host.

           Though link library names that share their base names with the DLL to
           which they correspond are less confusing, the link library for zlib,
           zlibwapi.lib, justifies an exception, because the same library name
           is used by the static and dynamic libraries. Theoretically, this is
           supposed to simplify substituting the DLL implementation for the
           static one.
      -->
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <!-- The following keys have the same values for all configurations and
           platforms.
      -->
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <!-- The following keys have the same values for all configurations and
           platforms.
      -->
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <!-- The ExceptionHandling key covers C++ exceptions. For pure C code, its
           value is moot. Since they can arise anywhere, FloatingPointExceptions
           are always a possibility. Alas, the ARM platform eats them.
      -->
      <ExceptionHandling>
      </ExceptionHandling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- The following keys have the same values for MOST configurations and
           platforms.
      -->
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <!-- Ws2_32.lib is the Winsock library. Since it's a system library, it
           must never be distributed, and the correct version should be present
           on any Windows host.

           Though link library names that share their base names with the DLL to
           which they correspond are less confusing, the link library for zlib,
           zlibwapi.lib, justifies an exception, because the same library name
           is used by the static and dynamic libraries. Theoretically, this is
           supposed to simplify substituting the DLL implementation for the
           static one.
      -->
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <!-- The following keys have the same values for all configurations and
           platforms.
      -->
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ClCompile>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <FloatingPointExceptions>true</FloatingPointExceptions>
      <!-- The following keys have the same values for MOST configurations and
           platforms.
      -->
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <!-- The ExceptionHandling key covers C++ exceptions. For pure C code, its
           value is moot. Since they can arise anywhere, FloatingPointExceptions
           are always a possibility.
      -->
      <ExceptionHandling>
      </ExceptionHandling>
      <FloatingPointExceptions>true</FloatingPointExceptions>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <OptimizeReferences>true</OptimizeReferences>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
      <SupportJustMyCode>true</SupportJustMyCode>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- The following keys have the same values for MOST configurations and
           platforms.
      -->
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>true</ImageHasSafeExceptionHandlers>
      <!-- Ws2_32.lib is the Winsock library. Since it's a system library, it
           must never be distributed, and the correct version should be present
           on any Windows host.

           Though link library names that share their base names with the DLL to
           which they correspond are less confusing, the link library for zlib,
           zlibwapi.lib, justifies an exception, because the same library name
           is used by the static and dynamic libraries. Theoretically, this is
           supposed to simplify substituting the DLL implementation for the
           static one.
      -->
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <!-- The following keys have the same values for all configurations and
           platforms.
      -->
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <!-- The ExceptionHandling key covers C++ exceptions. For pure C code, its
           value is moot. Since they can arise anywhere, FloatingPointExceptions
           are always a possibility. Alas, the ARM platform eats them.
      -->
      <ExceptionHandling>
      </ExceptionHandling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <!-- The following keys have the same values for MOST configurations and
           platforms.
      -->
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <!-- Ws2_32.lib is the Winsock library. Since it's a system library, it
           must never be distributed, and the correct version should be present
           on any Windows host.

           Though link library names that share their base names with the DLL to
           which they correspond are less confusing, the link library for zlib,
           zlibwapi.lib, justifies an exception, because the same library name
           is used by the static and dynamic libraries. Theoretically, this is
           supposed to simplify substituting the DLL implementation for the
           static one.
      -->
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <!-- The following keys have the same values for all configurations and
           platforms.
      -->
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <AdditionalIncludeDirectories>$(ProjectDir)INCLUDE;$(ProjectDir);$(ProjectDir)..\..\include;$(ProjectDir)..\..\..\iconv-1.14-win32-x86\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);ZLIB_WINAPI;WIN32;_DEBUG;_WINDOWS;_USRDLL;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <FloatingPointExceptions>false</FloatingPointExceptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BrowseInformation>
      </BrowseInformation>
      <BufferSecurityCheck>false</BufferSecurityCheck>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <DisableSpecificWarnings>4996</DisableSpecificWarnings>
      <ExceptionHandling>
      </ExceptionHandling>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <MultiProcessorCompilation>false</MultiProcessorCompilation>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <PrecompiledHeaderOutputFile>$(IntDir)$(TargetName).pch</PrecompiledHeaderOutputFile>
      <ProgramDataBaseFileName>$(OutDir)</ProgramDataBaseFileName>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <SuppressStartupBanner>false</SuppressStartupBanner>
      <WarningLevel>Level3</WarningLevel>
      <ShowIncludes>false</ShowIncludes>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>BUILD_ENV_IS_VISUAL_STUDIO;TARGET_PLATFORM_$(Platform);TARGET_CONFIGURATION_$(Configuration);NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <Culture>0x0409</Culture>
      <NullTerminateStrings>true</NullTerminateStrings>
      <ShowProgress>true</ShowProgress>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </ResourceCompile>
    <Link>
      <ImageHasSafeExceptionHandlers>false</ImageHasSafeExceptionHandlers>
      <AdditionalLibraryDirectories>$(ProjectDir)LIB\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalDependencies>zlibwapi$(PlatformArchitecture).lib;libiconv$(PlatformArchitecture).lib;liblzma$(PlatformArchitecture).lib;Ws2_32.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <AdditionalOptions>$(AdditionalOptions)</AdditionalOptions>
      <DataExecutionPrevention>true</DataExecutionPrevention>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <GenerateDebugInformation>DebugFull</GenerateDebugInformation>
      <GenerateMapFile>true</GenerateMapFile>
      <ImportLibrary>$(OutDir)$(TargetName).lib</ImportLibrary>
      <OptimizeReferences>false</OptimizeReferences>
      <OutputFile>$(OutDir)$(TargetName)$(TargetExt)</OutputFile>
      <ProgramDatabaseFile>$(OutDir)$(TargetName).pdb</ProgramDatabaseFile>
      <MapFileName>$(OutDir)$(TargetName).map</MapFileName>
      <RandomizedBaseAddress>true</RandomizedBaseAddress>
      <SubSystem>Windows</SubSystem>
      <SuppressStartupBanner>false</SuppressStartupBanner>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="..\..\buf.c" />
    <ClCompile Include="..\..\c14n.c" />
    <ClCompile Include="..\..\catalog.c" />
    <ClCompile Include="..\..\chvalid.c" />
    <ClCompile Include="..\..\debugXML.c" />
    <ClCompile Include="..\..\dict.c" />
    <ClCompile Include="..\..\DOCBparser.c" />
    <ClCompile Include="..\..\encoding.c" />
    <ClCompile Include="..\..\entities.c" />
    <ClCompile Include="..\..\error.c" />
    <ClCompile Include="..\..\globals.c" />
    <ClCompile Include="..\..\hash.c" />
    <ClCompile Include="..\..\HTMLparser.c" />
    <ClCompile Include="..\..\HTMLtree.c" />
    <ClCompile Include="..\..\legacy.c" />
    <ClCompile Include="..\..\list.c" />
    <ClCompile Include="..\..\nanoftp.c" />
    <ClCompile Include="..\..\nanohttp.c" />
    <ClCompile Include="..\..\parser.c" />
    <ClCompile Include="..\..\parserInternals.c" />
    <ClCompile Include="..\..\pattern.c" />
    <ClCompile Include="..\..\relaxng.c" />
    <ClCompile Include="..\..\SAX.c" />
    <ClCompile Include="..\..\SAX2.c" />
    <ClCompile Include="..\..\schematron.c" />
    <ClCompile Include="..\..\threads.c" />
    <ClCompile Include="..\..\tree.c" />
    <ClCompile Include="..\..\uri.c" />
    <ClCompile Include="..\..\valid.c" />
    <ClCompile Include="..\..\xinclude.c" />
    <ClCompile Include="..\..\xlink.c" />
    <ClCompile Include="..\..\xmlcatalog.c" />
    <ClCompile Include="..\..\xmlIO.c" />
    <ClCompile Include="..\..\xmlmemory.c" />
    <ClCompile Include="..\..\xmlmodule.c" />
    <ClCompile Include="..\..\xmlreader.c" />
    <ClCompile Include="..\..\xmlregexp.c" />
    <ClCompile Include="..\..\xmlsave.c" />
    <ClCompile Include="..\..\xmlschemas.c" />
    <ClCompile Include="..\..\xmlschemastypes.c" />
    <ClCompile Include="..\..\xmlstring.c" />
    <ClCompile Include="..\..\xmlunicode.c" />
    <ClCompile Include="..\..\xmlwriter.c" />
    <ClCompile Include="..\..\xpath.c" />
    <ClCompile Include="..\..\xpointer.c" />
    <ClCompile Include="..\..\xzlib.c" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\acconfig.h" />
    <ClInclude Include="..\..\elfgcchack.h" />
    <ClInclude Include="..\..\include\libxml\xmlversion.h" />
    <ClInclude Include="..\..\libxml.h" />
    <ClInclude Include="config.h" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
  <!--
    ============================================================================
    2019/03/05 - DAG - The TestSubjectDLL property is set in the last of two
                       unlabeled ItemGroup nodes at the top of the project file.
                       Since this task overrides the definition of an empty
                       imported target, it must follow the import. To be on the
                       safe side, it is defined dead last.

    2019/03/14 - DAG - To find other empty targets such as these two that you
                       can redefine (override) to do tuff, look for the
                       following string at the beginning of an XML comment.

                            Redefine this target in your project

                       The BeforeBuildGenerateSources target is ideal for
                       displaying MSBuild property values.
    ============================================================================
  -->
  <Target Name="BeforeBuildGenerateSources">
    <Message Text="SolutionDir          = $(SolutionDir)" />
    <Message Text="ProjectDir           = $(ProjectDir)" />
    <Message Text="ProjectName          = $(ProjectName)" />
    <Message Text="TargetName           = $(TargetName)" />
    <Message Text="TargetExt            = $(TargetExt)" />
    <Message Text="ProjectExt           = $(ProjectExt)" />
    <Message Text="Platform             = $(Platform)" />
    <Message Text="PlatformArchitecture = $(PlatformArchitecture)" />
    <Message Text="Configuration        = $(Configuration)" />
    <Message Text="OutDir               = $(OutDir)" />
    <Message Text="IntDir               = $(IntDir)" />
  </Target>
  <Target Name="AfterBuild">
    <Copy SourceFiles="@(TestSubjectDLL)" DestinationFolder="$(OutDir)" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="AfterBuild2" AfterTargets="AfterBuild" Condition="exists('$(WWLinkLibPath)') AND ( '$(Configuration)'=='Release' ) AND ( ( '$(Platform)'=='Win32' ) OR ( '$(Platform)'=='x64' ) )">
    <!--
  		This task puts copies of the library files into the common library
  		directory to which environment string WWLinkLibPath points. Unless the
  		specified directory exists, this target is skipped.

  		Since the predominant work in my shop targets Win32 and x64, only those
  		two platforms go into the common library repository.
  	-->
    <Copy SourceFiles="@(LibsBuilt)" DestinationFolder="$(WWLinkLibPath)" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="AfterBuild3" AfterTargets="AfterBuild" Condition="exists('C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\win32\VC10') AND '$(Configuration)'=='Release'">
    <!--
  		This task puts copies of the library files into the dedicated library
  		directory of the libxml2 repository. Unless the specified directory
  		exists, this target is skipped.

  		Only release builds go into the libxml2 library repository.
  	-->
    <Copy SourceFiles="@(LibsBuilt)" DestinationFolder="C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\win32\VC10\LIB" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="AfterBuild4" AfterTargets="AfterBuild" Condition="exists('$(WWLinkLibPath)') AND ( ( '$(Platform)'=='Win32' ) OR ( '$(Platform)'=='x64' ) )">
    <!--
  		This task puts copies of the library files into the common library
  		directory to which environment string WWLinkLibPath points. Unless the
  		specified directory exists, this target is skipped.

  		Since the predominant work in my shop targets Win32 and x64, only those
  		two platforms go into the common library repository.
  	-->
    <Copy SourceFiles="@(LinkLibsAre)" DestinationFolder="$(WWLinkLibPath)" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
  </Target>
  <Target Name="AfterBuild5" AfterTargets="AfterBuild" Condition="exists('C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\win32\VC10')">
    <!--
  		This task puts copies of the library files into the dedicated library
  		directory of the libxml2 repository. Unless the specified directory
  		exists, this target is skipped.

  		Only release builds go into the libxml2 library repository.
  	-->
    <Copy SourceFiles="@(LinkLibsAre)" DestinationFolder="C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\win32\VC10\LIB" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" />
  </Target>
</Project>