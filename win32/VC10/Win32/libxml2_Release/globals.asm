; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\globals.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	_xmlMalloc
PUBLIC	_xmlMallocAtomic
PUBLIC	_xmlRealloc
PUBLIC	_xmlFree
PUBLIC	_xmlMemStrdup
PUBLIC	_xmlParserVersion
PUBLIC	??_C@_0CB@CPJCIMMP@20909?9GITv2?49?49?9rc2?92?9g7c4949af@ ; `string'
PUBLIC	_xmlBufferAllocScheme
PUBLIC	_xmlDefaultBufferSize
PUBLIC	_oldXMLWDcompatibility
PUBLIC	_xmlParserDebugEntities
PUBLIC	_xmlDoValidityCheckingDefaultValue
PUBLIC	_xmlGetWarningsDefaultValue
PUBLIC	_xmlLoadExtDtdDefaultValue
PUBLIC	_xmlPedanticParserDefaultValue
PUBLIC	_xmlLineNumbersDefaultValue
PUBLIC	_xmlKeepBlanksDefaultValue
PUBLIC	_xmlSubstituteEntitiesDefaultValue
PUBLIC	_xmlRegisterNodeDefaultValue
PUBLIC	_xmlDeregisterNodeDefaultValue
PUBLIC	_xmlParserInputBufferCreateFilenameValue
PUBLIC	_xmlOutputBufferCreateFilenameValue
PUBLIC	_xmlGenericError
PUBLIC	_xmlStructuredError
PUBLIC	_xmlGenericErrorContext
PUBLIC	_xmlStructuredErrorContext
PUBLIC	_xmlIndentTreeOutput
PUBLIC	_xmlTreeIndentString
PUBLIC	??_C@_02KNHHEEKP@?5?5@				; `string'
PUBLIC	_xmlSaveNoEmptyTags
PUBLIC	_xmlDefaultSAXHandler
PUBLIC	_xmlDefaultSAXLocator
PUBLIC	_htmlDefaultSAXHandler
PUBLIC	_docbDefaultSAXHandler
EXTRN	_xmlSAX2GetPublicId:PROC
EXTRN	_xmlSAX2GetSystemId:PROC
EXTRN	_xmlSAX2SetDocumentLocator:PROC
EXTRN	_xmlSAX2GetLineNumber:PROC
EXTRN	_xmlSAX2GetColumnNumber:PROC
EXTRN	_xmlSAX2IsStandalone:PROC
EXTRN	_xmlSAX2HasInternalSubset:PROC
EXTRN	_xmlSAX2HasExternalSubset:PROC
EXTRN	_xmlSAX2InternalSubset:PROC
EXTRN	_xmlSAX2ExternalSubset:PROC
EXTRN	_xmlSAX2GetEntity:PROC
EXTRN	_xmlSAX2GetParameterEntity:PROC
EXTRN	_xmlSAX2ResolveEntity:PROC
EXTRN	_xmlSAX2EntityDecl:PROC
EXTRN	_xmlSAX2AttributeDecl:PROC
EXTRN	_xmlSAX2ElementDecl:PROC
EXTRN	_xmlSAX2NotationDecl:PROC
EXTRN	_xmlSAX2UnparsedEntityDecl:PROC
EXTRN	_xmlSAX2StartDocument:PROC
EXTRN	_xmlSAX2EndDocument:PROC
EXTRN	_xmlSAX2StartElement:PROC
EXTRN	_xmlSAX2EndElement:PROC
EXTRN	_xmlSAX2Reference:PROC
EXTRN	_xmlSAX2Characters:PROC
EXTRN	_xmlSAX2IgnorableWhitespace:PROC
EXTRN	_xmlSAX2ProcessingInstruction:PROC
EXTRN	_xmlSAX2Comment:PROC
EXTRN	_xmlSAX2CDataBlock:PROC
EXTRN	_xmlGenericErrorDefaultFunc:PROC
EXTRN	_malloc:PROC
EXTRN	_free:PROC
EXTRN	_realloc:PROC
EXTRN	_xmlParserError:PROC
EXTRN	_xmlParserWarning:PROC
_BSS	SEGMENT
_oldXMLWDcompatibility DD 01H DUP (?)
_xmlParserDebugEntities DD 01H DUP (?)
_xmlDoValidityCheckingDefaultValue DD 01H DUP (?)
_xmlLoadExtDtdDefaultValue DD 01H DUP (?)
_xmlPedanticParserDefaultValue DD 01H DUP (?)
_xmlLineNumbersDefaultValue DD 01H DUP (?)
_xmlSubstituteEntitiesDefaultValue DD 01H DUP (?)
_xmlRegisterNodeDefaultValue DD 01H DUP (?)
_xmlDeregisterNodeDefaultValue DD 01H DUP (?)
_xmlParserInputBufferCreateFilenameValue DD 01H DUP (?)
_xmlOutputBufferCreateFilenameValue DD 01H DUP (?)
_xmlStructuredError DD 01H DUP (?)
_xmlGenericErrorContext DD 01H DUP (?)
_xmlStructuredErrorContext DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_xmlLastError:BYTE:034H
_DATA	ENDS
_BSS	SEGMENT
_xmlSaveNoEmptyTags DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_forbiddenExp:DWORD
COMM	_emptyExp:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__188180DA_corecrt_math@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__DB69A600_globals@c DB 01H
msvcjmc	ENDS
;	COMDAT ??_C@_02KNHHEEKP@?5?5@
CONST	SEGMENT
??_C@_02KNHHEEKP@?5?5@ DB '  ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CPJCIMMP@20909?9GITv2?49?49?9rc2?92?9g7c4949af@
CONST	SEGMENT
??_C@_0CB@CPJCIMMP@20909?9GITv2?49?49?9rc2?92?9g7c4949af@ DB '20909-GITv2'
	DB	'.9.9-rc2-2-g7c4949afa', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_xmlMalloc DD	FLAT:_malloc
_xmlMallocAtomic DD FLAT:_malloc
_xmlRealloc DD	FLAT:_realloc
_xmlFree DD	FLAT:_free
_xmlMemStrdup DD FLAT:_xmlPosixStrdup
_xmlParserVersion DD FLAT:??_C@_0CB@CPJCIMMP@20909?9GITv2?49?49?9rc2?92?9g7c4949af@
_xmlBufferAllocScheme DD 01H
_xmlDefaultBufferSize DD 01000H
_xmlGetWarningsDefaultValue DD 01H
_xmlKeepBlanksDefaultValue DD 01H
_xmlGenericError DD FLAT:_xmlGenericErrorDefaultFunc
_xmlIndentTreeOutput DD 01H
_xmlTreeIndentString DD FLAT:??_C@_02KNHHEEKP@?5?5@
	ORG $+4
_xmlDefaultSAXHandler DD FLAT:_xmlSAX2InternalSubset
	DD	FLAT:_xmlSAX2IsStandalone
	DD	FLAT:_xmlSAX2HasInternalSubset
	DD	FLAT:_xmlSAX2HasExternalSubset
	DD	FLAT:_xmlSAX2ResolveEntity
	DD	FLAT:_xmlSAX2GetEntity
	DD	FLAT:_xmlSAX2EntityDecl
	DD	FLAT:_xmlSAX2NotationDecl
	DD	FLAT:_xmlSAX2AttributeDecl
	DD	FLAT:_xmlSAX2ElementDecl
	DD	FLAT:_xmlSAX2UnparsedEntityDecl
	DD	FLAT:_xmlSAX2SetDocumentLocator
	DD	FLAT:_xmlSAX2StartDocument
	DD	FLAT:_xmlSAX2EndDocument
	DD	FLAT:_xmlSAX2StartElement
	DD	FLAT:_xmlSAX2EndElement
	DD	FLAT:_xmlSAX2Reference
	DD	FLAT:_xmlSAX2Characters
	DD	FLAT:_xmlSAX2Characters
	DD	FLAT:_xmlSAX2ProcessingInstruction
	DD	FLAT:_xmlSAX2Comment
	DD	FLAT:_xmlParserWarning
	DD	FLAT:_xmlParserError
	DD	FLAT:_xmlParserError
	DD	FLAT:_xmlSAX2GetParameterEntity
	DD	FLAT:_xmlSAX2CDataBlock
	DD	FLAT:_xmlSAX2ExternalSubset
	DD	00H
_xmlDefaultSAXLocator DD FLAT:_xmlSAX2GetPublicId
	DD	FLAT:_xmlSAX2GetSystemId
	DD	FLAT:_xmlSAX2GetLineNumber
	DD	FLAT:_xmlSAX2GetColumnNumber
_htmlDefaultSAXHandler DD FLAT:_xmlSAX2InternalSubset
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_xmlSAX2GetEntity
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_xmlSAX2SetDocumentLocator
	DD	FLAT:_xmlSAX2StartDocument
	DD	FLAT:_xmlSAX2EndDocument
	DD	FLAT:_xmlSAX2StartElement
	DD	FLAT:_xmlSAX2EndElement
	DD	00H
	DD	FLAT:_xmlSAX2Characters
	DD	FLAT:_xmlSAX2IgnorableWhitespace
	DD	FLAT:_xmlSAX2ProcessingInstruction
	DD	FLAT:_xmlSAX2Comment
	DD	FLAT:_xmlParserWarning
	DD	FLAT:_xmlParserError
	DD	FLAT:_xmlParserError
	DD	FLAT:_xmlSAX2GetParameterEntity
	DD	FLAT:_xmlSAX2CDataBlock
	DD	00H
	DD	00H
_docbDefaultSAXHandler DD FLAT:_xmlSAX2InternalSubset
	DD	FLAT:_xmlSAX2IsStandalone
	DD	FLAT:_xmlSAX2HasInternalSubset
	DD	FLAT:_xmlSAX2HasExternalSubset
	DD	FLAT:_xmlSAX2ResolveEntity
	DD	FLAT:_xmlSAX2GetEntity
	DD	FLAT:_xmlSAX2EntityDecl
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:_xmlSAX2SetDocumentLocator
	DD	FLAT:_xmlSAX2StartDocument
	DD	FLAT:_xmlSAX2EndDocument
	DD	FLAT:_xmlSAX2StartElement
	DD	FLAT:_xmlSAX2EndElement
	DD	FLAT:_xmlSAX2Reference
	DD	FLAT:_xmlSAX2Characters
	DD	FLAT:_xmlSAX2IgnorableWhitespace
	DD	00H
	DD	FLAT:_xmlSAX2Comment
	DD	FLAT:_xmlParserWarning
	DD	FLAT:_xmlParserError
	DD	FLAT:_xmlParserError
	DD	FLAT:_xmlSAX2GetParameterEntity
	DD	00H
	DD	00H
	DD	00H
_DATA	ENDS
PUBLIC	_xmlInitGlobals
PUBLIC	_xmlCleanupGlobals
PUBLIC	_xmlInitializeGlobalState
PUBLIC	_xmlThrDefSetGenericErrorFunc
PUBLIC	_xmlThrDefSetStructuredErrorFunc
PUBLIC	_xmlRegisterNodeDefault
PUBLIC	_xmlThrDefRegisterNodeDefault
PUBLIC	_xmlDeregisterNodeDefault
PUBLIC	_xmlThrDefDeregisterNodeDefault
PUBLIC	_xmlThrDefOutputBufferCreateFilenameDefault
PUBLIC	_xmlThrDefParserInputBufferCreateFilenameDefault
PUBLIC	___docbDefaultSAXHandler
PUBLIC	___htmlDefaultSAXHandler
PUBLIC	___xmlLastError
PUBLIC	___oldXMLWDcompatibility
PUBLIC	___xmlBufferAllocScheme
PUBLIC	_xmlThrDefBufferAllocScheme
PUBLIC	___xmlDefaultBufferSize
PUBLIC	_xmlThrDefDefaultBufferSize
PUBLIC	___xmlDefaultSAXHandler
PUBLIC	___xmlDefaultSAXLocator
PUBLIC	___xmlDoValidityCheckingDefaultValue
PUBLIC	_xmlThrDefDoValidityCheckingDefaultValue
PUBLIC	___xmlGenericError
PUBLIC	___xmlStructuredError
PUBLIC	___xmlGenericErrorContext
PUBLIC	___xmlStructuredErrorContext
PUBLIC	___xmlGetWarningsDefaultValue
PUBLIC	_xmlThrDefGetWarningsDefaultValue
PUBLIC	___xmlIndentTreeOutput
PUBLIC	_xmlThrDefIndentTreeOutput
PUBLIC	___xmlTreeIndentString
PUBLIC	_xmlThrDefTreeIndentString
PUBLIC	___xmlKeepBlanksDefaultValue
PUBLIC	_xmlThrDefKeepBlanksDefaultValue
PUBLIC	___xmlLineNumbersDefaultValue
PUBLIC	_xmlThrDefLineNumbersDefaultValue
PUBLIC	___xmlLoadExtDtdDefaultValue
PUBLIC	_xmlThrDefLoadExtDtdDefaultValue
PUBLIC	___xmlParserDebugEntities
PUBLIC	_xmlThrDefParserDebugEntities
PUBLIC	___xmlParserVersion
PUBLIC	___xmlPedanticParserDefaultValue
PUBLIC	_xmlThrDefPedanticParserDefaultValue
PUBLIC	___xmlSaveNoEmptyTags
PUBLIC	_xmlThrDefSaveNoEmptyTags
PUBLIC	___xmlSubstituteEntitiesDefaultValue
PUBLIC	_xmlThrDefSubstituteEntitiesDefaultValue
PUBLIC	___xmlRegisterNodeDefaultValue
PUBLIC	___xmlDeregisterNodeDefaultValue
PUBLIC	___xmlParserInputBufferCreateFilenameValue
PUBLIC	___xmlOutputBufferCreateFilenameValue
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_05BGCJPHN@20909@				; `string'
EXTRN	_xmlStrdup:PROC
EXTRN	_xmlCharStrdup:PROC
EXTRN	___xmlGlobalInitMutexDestroy:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	__imp__realloc:PROC
EXTRN	___xmlParserInputBufferCreateFilename:PROC
EXTRN	___xmlOutputBufferCreateFilename:PROC
EXTRN	_xmlNewMutex:PROC
EXTRN	_xmlMutexLock:PROC
EXTRN	_xmlMutexUnlock:PROC
EXTRN	_xmlFreeMutex:PROC
EXTRN	_xmlIsMainThread:PROC
EXTRN	_xmlGetGlobalState:PROC
EXTRN	_initxmlDefaultSAXHandler:PROC
EXTRN	_inithtmlDefaultSAXHandler:PROC
EXTRN	_initdocbDefaultSAXHandler:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	_memset:PROC
EXTRN	___xmlRegisterCallbacks:DWORD
_BSS	SEGMENT
_xmlThrDefMutex DD 01H DUP (?)
_xmlParserDebugEntitiesThrDef DD 01H DUP (?)
_xmlDoValidityCheckingDefaultValueThrDef DD 01H DUP (?)
_xmlLoadExtDtdDefaultValueThrDef DD 01H DUP (?)
_xmlPedanticParserDefaultValueThrDef DD 01H DUP (?)
_xmlLineNumbersDefaultValueThrDef DD 01H DUP (?)
_xmlSubstituteEntitiesDefaultValueThrDef DD 01H DUP (?)
_xmlRegisterNodeDefaultValueThrDef DD 01H DUP (?)
_xmlDeregisterNodeDefaultValueThrDef DD 01H DUP (?)
_xmlParserInputBufferCreateFilenameValueThrDef DD 01H DUP (?)
_xmlOutputBufferCreateFilenameValueThrDef DD 01H DUP (?)
_xmlStructuredErrorThrDef DD 01H DUP (?)
_xmlGenericErrorContextThrDef DD 01H DUP (?)
_xmlStructuredErrorContextThrDef DD 01H DUP (?)
_xmlSaveNoEmptyTagsThrDef DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_05BGCJPHN@20909@
CONST	SEGMENT
??_C@_05BGCJPHN@20909@ DB '20909', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_xmlBufferAllocSchemeThrDef DD 01H
_xmlDefaultBufferSizeThrDef DD 01000H
_xmlGetWarningsDefaultValueThrDef DD 01H
_xmlKeepBlanksDefaultValueThrDef DD 01H
_xmlGenericErrorThrDef DD FLAT:_xmlGenericErrorDefaultFunc
_xmlIndentTreeOutputThrDef DD 01H
_xmlTreeIndentStringThrDef DD FLAT:??_C@_02KNHHEEKP@?5?5@
_DATA	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlPosixStrdup
_TEXT	SEGMENT
_cur$ = 8						; size = 4
_xmlPosixStrdup PROC					; COMDAT

; 135  : xmlPosixStrdup(const char *cur) {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4

; 137  : }

	pop	ebp

; 136  :     return((char*) xmlCharStrdup(cur));

	jmp	_xmlCharStrdup
_xmlPosixStrdup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlOutputBufferCreateFilenameValue
_TEXT	SEGMENT
___xmlOutputBufferCreateFilenameValue PROC		; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlOutputB

; 1119 :     if (IS_MAIN_THREAD)
; 1120 : 	return (&xmlOutputBufferCreateFilenameValue);

	mov	eax, OFFSET _xmlOutputBufferCreateFilenameValue

; 1123 : }

	ret	0
$LN2@xmlOutputB:

; 1121 :     else
; 1122 : 	return (&xmlGetGlobalState()->xmlOutputBufferCreateFilenameValue);

	call	_xmlGetGlobalState
	add	eax, 508				; 000001fcH

; 1123 : }

	ret	0
___xmlOutputBufferCreateFilenameValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlParserInputBufferCreateFilenameValue
_TEXT	SEGMENT
___xmlParserInputBufferCreateFilenameValue PROC		; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlParserI

; 1110 :     if (IS_MAIN_THREAD)
; 1111 : 	return (&xmlParserInputBufferCreateFilenameValue);

	mov	eax, OFFSET _xmlParserInputBufferCreateFilenameValue

; 1114 : }

	ret	0
$LN2@xmlParserI:

; 1112 :     else
; 1113 : 	return (&xmlGetGlobalState()->xmlParserInputBufferCreateFilenameValue);

	call	_xmlGetGlobalState
	add	eax, 504				; 000001f8H

; 1114 : }

	ret	0
___xmlParserInputBufferCreateFilenameValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlDeregisterNodeDefaultValue
_TEXT	SEGMENT
___xmlDeregisterNodeDefaultValue PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlDeregis

; 1101 :     if (IS_MAIN_THREAD)
; 1102 : 	return (&xmlDeregisterNodeDefaultValue);

	mov	eax, OFFSET _xmlDeregisterNodeDefaultValue

; 1105 : }

	ret	0
$LN2@xmlDeregis:

; 1103 :     else
; 1104 : 	return (&xmlGetGlobalState()->xmlDeregisterNodeDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 444				; 000001bcH

; 1105 : }

	ret	0
___xmlDeregisterNodeDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlRegisterNodeDefaultValue
_TEXT	SEGMENT
___xmlRegisterNodeDefaultValue PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlRegiste

; 1092 :     if (IS_MAIN_THREAD)
; 1093 : 	return (&xmlRegisterNodeDefaultValue);

	mov	eax, OFFSET _xmlRegisterNodeDefaultValue

; 1096 : }

	ret	0
$LN2@xmlRegiste:

; 1094 :     else
; 1095 : 	return (&xmlGetGlobalState()->xmlRegisterNodeDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 440				; 000001b8H

; 1096 : }

	ret	0
___xmlRegisterNodeDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefSubstituteEntitiesDefaultValue
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefSubstituteEntitiesDefaultValue PROC		; COMDAT

; 1080 : int xmlThrDefSubstituteEntitiesDefaultValue(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlSubstituteEntitiesDefaultValueThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlSubstituteEntitiesDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 1081 :     int ret;
; 1082 :     xmlMutexLock(xmlThrDefMutex);
; 1083 :     ret = xmlSubstituteEntitiesDefaultValueThrDef;
; 1084 :     xmlSubstituteEntitiesDefaultValueThrDef = v;
; 1085 :     xmlMutexUnlock(xmlThrDefMutex);
; 1086 :     return ret;
; 1087 : }

	pop	ebp
	ret	0
_xmlThrDefSubstituteEntitiesDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlSubstituteEntitiesDefaultValue
_TEXT	SEGMENT
___xmlSubstituteEntitiesDefaultValue PROC		; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlSubstit

; 1075 :     if (IS_MAIN_THREAD)
; 1076 : 	return (&xmlSubstituteEntitiesDefaultValue);

	mov	eax, OFFSET _xmlSubstituteEntitiesDefaultValue

; 1079 : }

	ret	0
$LN2@xmlSubstit:

; 1077 :     else
; 1078 : 	return (&xmlGetGlobalState()->xmlSubstituteEntitiesDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 396				; 0000018cH

; 1079 : }

	ret	0
___xmlSubstituteEntitiesDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefSaveNoEmptyTags
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefSaveNoEmptyTags PROC				; COMDAT

; 1063 : int xmlThrDefSaveNoEmptyTags(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlSaveNoEmptyTagsThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlSaveNoEmptyTagsThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 1064 :     int ret;
; 1065 :     xmlMutexLock(xmlThrDefMutex);
; 1066 :     ret = xmlSaveNoEmptyTagsThrDef;
; 1067 :     xmlSaveNoEmptyTagsThrDef = v;
; 1068 :     xmlMutexUnlock(xmlThrDefMutex);
; 1069 :     return ret;
; 1070 : }

	pop	ebp
	ret	0
_xmlThrDefSaveNoEmptyTags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlSaveNoEmptyTags
_TEXT	SEGMENT
___xmlSaveNoEmptyTags PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlSaveNoE

; 1058 :     if (IS_MAIN_THREAD)
; 1059 : 	return (&xmlSaveNoEmptyTags);

	mov	eax, OFFSET _xmlSaveNoEmptyTags

; 1062 : }

	ret	0
$LN2@xmlSaveNoE:

; 1060 :     else
; 1061 : 	return (&xmlGetGlobalState()->xmlSaveNoEmptyTags);

	call	_xmlGetGlobalState
	add	eax, 428				; 000001acH

; 1062 : }

	ret	0
___xmlSaveNoEmptyTags ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefPedanticParserDefaultValue
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefPedanticParserDefaultValue PROC		; COMDAT

; 1046 : int xmlThrDefPedanticParserDefaultValue(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlPedanticParserDefaultValueThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlPedanticParserDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 1047 :     int ret;
; 1048 :     xmlMutexLock(xmlThrDefMutex);
; 1049 :     ret = xmlPedanticParserDefaultValueThrDef;
; 1050 :     xmlPedanticParserDefaultValueThrDef = v;
; 1051 :     xmlMutexUnlock(xmlThrDefMutex);
; 1052 :     return ret;
; 1053 : }

	pop	ebp
	ret	0
_xmlThrDefPedanticParserDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlPedanticParserDefaultValue
_TEXT	SEGMENT
___xmlPedanticParserDefaultValue PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlPedanti

; 1041 :     if (IS_MAIN_THREAD)
; 1042 : 	return (&xmlPedanticParserDefaultValue);

	mov	eax, OFFSET _xmlPedanticParserDefaultValue

; 1045 : }

	ret	0
$LN2@xmlPedanti:

; 1043 :     else
; 1044 : 	return (&xmlGetGlobalState()->xmlPedanticParserDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 424				; 000001a8H

; 1045 : }

	ret	0
___xmlPedanticParserDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlParserVersion
_TEXT	SEGMENT
___xmlParserVersion PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlParserV

; 1032 :     if (IS_MAIN_THREAD)
; 1033 : 	return (&xmlParserVersion);

	mov	eax, OFFSET _xmlParserVersion

; 1036 : }

	ret	0
$LN2@xmlParserV:

; 1034 :     else
; 1035 : 	return (&xmlGetGlobalState()->xmlParserVersion);

	jmp	_xmlGetGlobalState
___xmlParserVersion ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefParserDebugEntities
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefParserDebugEntities PROC			; COMDAT

; 1020 : int xmlThrDefParserDebugEntities(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlParserDebugEntitiesThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlParserDebugEntitiesThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 1021 :     int ret;
; 1022 :     xmlMutexLock(xmlThrDefMutex);
; 1023 :     ret = xmlParserDebugEntitiesThrDef;
; 1024 :     xmlParserDebugEntitiesThrDef = v;
; 1025 :     xmlMutexUnlock(xmlThrDefMutex);
; 1026 :     return ret;
; 1027 : }

	pop	ebp
	ret	0
_xmlThrDefParserDebugEntities ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlParserDebugEntities
_TEXT	SEGMENT
___xmlParserDebugEntities PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlParserD

; 1015 :     if (IS_MAIN_THREAD)
; 1016 : 	return (&xmlParserDebugEntities);

	mov	eax, OFFSET _xmlParserDebugEntities

; 1019 : }

	ret	0
$LN2@xmlParserD:

; 1017 :     else
; 1018 : 	return (&xmlGetGlobalState()->xmlParserDebugEntities);

	call	_xmlGetGlobalState
	add	eax, 420				; 000001a4H

; 1019 : }

	ret	0
___xmlParserDebugEntities ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefLoadExtDtdDefaultValue
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefLoadExtDtdDefaultValue PROC			; COMDAT

; 1003 : int xmlThrDefLoadExtDtdDefaultValue(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlLoadExtDtdDefaultValueThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlLoadExtDtdDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 1004 :     int ret;
; 1005 :     xmlMutexLock(xmlThrDefMutex);
; 1006 :     ret = xmlLoadExtDtdDefaultValueThrDef;
; 1007 :     xmlLoadExtDtdDefaultValueThrDef = v;
; 1008 :     xmlMutexUnlock(xmlThrDefMutex);
; 1009 :     return ret;
; 1010 : }

	pop	ebp
	ret	0
_xmlThrDefLoadExtDtdDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlLoadExtDtdDefaultValue
_TEXT	SEGMENT
___xmlLoadExtDtdDefaultValue PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlLoadExt

; 998  :     if (IS_MAIN_THREAD)
; 999  : 	return (&xmlLoadExtDtdDefaultValue);

	mov	eax, OFFSET _xmlLoadExtDtdDefaultValue

; 1002 : }

	ret	0
$LN2@xmlLoadExt:

; 1000 :     else
; 1001 : 	return (&xmlGetGlobalState()->xmlLoadExtDtdDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 416				; 000001a0H

; 1002 : }

	ret	0
___xmlLoadExtDtdDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefLineNumbersDefaultValue
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefLineNumbersDefaultValue PROC			; COMDAT

; 986  : int xmlThrDefLineNumbersDefaultValue(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlLineNumbersDefaultValueThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlLineNumbersDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 987  :     int ret;
; 988  :     xmlMutexLock(xmlThrDefMutex);
; 989  :     ret = xmlLineNumbersDefaultValueThrDef;
; 990  :     xmlLineNumbersDefaultValueThrDef = v;
; 991  :     xmlMutexUnlock(xmlThrDefMutex);
; 992  :     return ret;
; 993  : }

	pop	ebp
	ret	0
_xmlThrDefLineNumbersDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlLineNumbersDefaultValue
_TEXT	SEGMENT
___xmlLineNumbersDefaultValue PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlLineNum

; 981  :     if (IS_MAIN_THREAD)
; 982  : 	return (&xmlLineNumbersDefaultValue);

	mov	eax, OFFSET _xmlLineNumbersDefaultValue

; 985  : }

	ret	0
$LN2@xmlLineNum:

; 983  :     else
; 984  : 	return (&xmlGetGlobalState()->xmlLineNumbersDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 412				; 0000019cH

; 985  : }

	ret	0
___xmlLineNumbersDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefKeepBlanksDefaultValue
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefKeepBlanksDefaultValue PROC			; COMDAT

; 969  : int xmlThrDefKeepBlanksDefaultValue(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlKeepBlanksDefaultValueThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlKeepBlanksDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 970  :     int ret;
; 971  :     xmlMutexLock(xmlThrDefMutex);
; 972  :     ret = xmlKeepBlanksDefaultValueThrDef;
; 973  :     xmlKeepBlanksDefaultValueThrDef = v;
; 974  :     xmlMutexUnlock(xmlThrDefMutex);
; 975  :     return ret;
; 976  : }

	pop	ebp
	ret	0
_xmlThrDefKeepBlanksDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlKeepBlanksDefaultValue
_TEXT	SEGMENT
___xmlKeepBlanksDefaultValue PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlKeepBla

; 964  :     if (IS_MAIN_THREAD)
; 965  : 	return (&xmlKeepBlanksDefaultValue);

	mov	eax, OFFSET _xmlKeepBlanksDefaultValue

; 968  : }

	ret	0
$LN2@xmlKeepBla:

; 966  :     else
; 967  : 	return (&xmlGetGlobalState()->xmlKeepBlanksDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 408				; 00000198H

; 968  : }

	ret	0
___xmlKeepBlanksDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefTreeIndentString
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefTreeIndentString PROC				; COMDAT

; 952  : const char * xmlThrDefTreeIndentString(const char * v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlTreeIndentStringThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlTreeIndentStringThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 953  :     const char * ret;
; 954  :     xmlMutexLock(xmlThrDefMutex);
; 955  :     ret = xmlTreeIndentStringThrDef;
; 956  :     xmlTreeIndentStringThrDef = v;
; 957  :     xmlMutexUnlock(xmlThrDefMutex);
; 958  :     return ret;
; 959  : }

	pop	ebp
	ret	0
_xmlThrDefTreeIndentString ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlTreeIndentString
_TEXT	SEGMENT
___xmlTreeIndentString PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlTreeInd

; 947  :     if (IS_MAIN_THREAD)
; 948  : 	return (&xmlTreeIndentString);

	mov	eax, OFFSET _xmlTreeIndentString

; 951  : }

	ret	0
$LN2@xmlTreeInd:

; 949  :     else
; 950  : 	return (&xmlGetGlobalState()->xmlTreeIndentString);

	call	_xmlGetGlobalState
	add	eax, 436				; 000001b4H

; 951  : }

	ret	0
___xmlTreeIndentString ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefIndentTreeOutput
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefIndentTreeOutput PROC				; COMDAT

; 935  : int xmlThrDefIndentTreeOutput(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlIndentTreeOutputThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlIndentTreeOutputThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 936  :     int ret;
; 937  :     xmlMutexLock(xmlThrDefMutex);
; 938  :     ret = xmlIndentTreeOutputThrDef;
; 939  :     xmlIndentTreeOutputThrDef = v;
; 940  :     xmlMutexUnlock(xmlThrDefMutex);
; 941  :     return ret;
; 942  : }

	pop	ebp
	ret	0
_xmlThrDefIndentTreeOutput ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlIndentTreeOutput
_TEXT	SEGMENT
___xmlIndentTreeOutput PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlIndentT

; 930  :     if (IS_MAIN_THREAD)
; 931  : 	return (&xmlIndentTreeOutput);

	mov	eax, OFFSET _xmlIndentTreeOutput

; 934  : }

	ret	0
$LN2@xmlIndentT:

; 932  :     else
; 933  : 	return (&xmlGetGlobalState()->xmlIndentTreeOutput);

	call	_xmlGetGlobalState
	add	eax, 432				; 000001b0H

; 934  : }

	ret	0
___xmlIndentTreeOutput ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefGetWarningsDefaultValue
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefGetWarningsDefaultValue PROC			; COMDAT

; 918  : int xmlThrDefGetWarningsDefaultValue(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlGetWarningsDefaultValueThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlGetWarningsDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 919  :     int ret;
; 920  :     xmlMutexLock(xmlThrDefMutex);
; 921  :     ret = xmlGetWarningsDefaultValueThrDef;
; 922  :     xmlGetWarningsDefaultValueThrDef = v;
; 923  :     xmlMutexUnlock(xmlThrDefMutex);
; 924  :     return ret;
; 925  : }

	pop	ebp
	ret	0
_xmlThrDefGetWarningsDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlGetWarningsDefaultValue
_TEXT	SEGMENT
___xmlGetWarningsDefaultValue PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlGetWarn

; 913  :     if (IS_MAIN_THREAD)
; 914  : 	return (&xmlGetWarningsDefaultValue);

	mov	eax, OFFSET _xmlGetWarningsDefaultValue

; 917  : }

	ret	0
$LN2@xmlGetWarn:

; 915  :     else
; 916  : 	return (&xmlGetGlobalState()->xmlGetWarningsDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 404				; 00000194H

; 917  : }

	ret	0
___xmlGetWarningsDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlStructuredErrorContext
_TEXT	SEGMENT
___xmlStructuredErrorContext PROC			; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlStructu

; 904  :     if (IS_MAIN_THREAD)
; 905  : 	return (&xmlStructuredErrorContext);

	mov	eax, OFFSET _xmlStructuredErrorContext

; 908  : }

	ret	0
$LN2@xmlStructu:

; 906  :     else
; 907  : 	return (&xmlGetGlobalState()->xmlStructuredErrorContext);

	call	_xmlGetGlobalState
	add	eax, 512				; 00000200H

; 908  : }

	ret	0
___xmlStructuredErrorContext ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlGenericErrorContext
_TEXT	SEGMENT
___xmlGenericErrorContext PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlGeneric

; 895  :     if (IS_MAIN_THREAD)
; 896  : 	return (&xmlGenericErrorContext);

	mov	eax, OFFSET _xmlGenericErrorContext

; 899  : }

	ret	0
$LN2@xmlGeneric:

; 897  :     else
; 898  : 	return (&xmlGetGlobalState()->xmlGenericErrorContext);

	call	_xmlGetGlobalState
	add	eax, 380				; 0000017cH

; 899  : }

	ret	0
___xmlGenericErrorContext ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlStructuredError
_TEXT	SEGMENT
___xmlStructuredError PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlStructu

; 886  :     if (IS_MAIN_THREAD)
; 887  : 	return (&xmlStructuredError);

	mov	eax, OFFSET _xmlStructuredError

; 890  : }

	ret	0
$LN2@xmlStructu:

; 888  :     else
; 889  : 	return (&xmlGetGlobalState()->xmlStructuredError);

	call	_xmlGetGlobalState
	add	eax, 376				; 00000178H

; 890  : }

	ret	0
___xmlStructuredError ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlGenericError
_TEXT	SEGMENT
___xmlGenericError PROC					; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlGeneric

; 877  :     if (IS_MAIN_THREAD)
; 878  : 	return (&xmlGenericError);

	mov	eax, OFFSET _xmlGenericError

; 881  : }

	ret	0
$LN2@xmlGeneric:

; 879  :     else
; 880  : 	return (&xmlGetGlobalState()->xmlGenericError);

	call	_xmlGetGlobalState
	add	eax, 372				; 00000174H

; 881  : }

	ret	0
___xmlGenericError ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefDoValidityCheckingDefaultValue
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefDoValidityCheckingDefaultValue PROC		; COMDAT

; 865  : int xmlThrDefDoValidityCheckingDefaultValue(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlDoValidityCheckingDefaultValueThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlDoValidityCheckingDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 866  :     int ret;
; 867  :     xmlMutexLock(xmlThrDefMutex);
; 868  :     ret = xmlDoValidityCheckingDefaultValueThrDef;
; 869  :     xmlDoValidityCheckingDefaultValueThrDef = v;
; 870  :     xmlMutexUnlock(xmlThrDefMutex);
; 871  :     return ret;
; 872  : }

	pop	ebp
	ret	0
_xmlThrDefDoValidityCheckingDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlDoValidityCheckingDefaultValue
_TEXT	SEGMENT
___xmlDoValidityCheckingDefaultValue PROC		; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlDoValid

; 860  :     if (IS_MAIN_THREAD)
; 861  : 	return (&xmlDoValidityCheckingDefaultValue);

	mov	eax, OFFSET _xmlDoValidityCheckingDefaultValue

; 864  : }

	ret	0
$LN2@xmlDoValid:

; 862  :     else
; 863  : 	return (&xmlGetGlobalState()->xmlDoValidityCheckingDefaultValue);

	call	_xmlGetGlobalState
	add	eax, 400				; 00000190H

; 864  : }

	ret	0
___xmlDoValidityCheckingDefaultValue ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlDefaultSAXLocator
_TEXT	SEGMENT
___xmlDefaultSAXLocator PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlDefault

; 851  :     if (IS_MAIN_THREAD)
; 852  : 	return (&xmlDefaultSAXLocator);

	mov	eax, OFFSET _xmlDefaultSAXLocator

; 855  : }

	ret	0
$LN2@xmlDefault:

; 853  :     else
; 854  : 	return (&xmlGetGlobalState()->xmlDefaultSAXLocator);

	call	_xmlGetGlobalState
	add	eax, 4

; 855  : }

	ret	0
___xmlDefaultSAXLocator ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlDefaultSAXHandler
_TEXT	SEGMENT
___xmlDefaultSAXHandler PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlDefault

; 841  :     if (IS_MAIN_THREAD)
; 842  : 	return (&xmlDefaultSAXHandler);

	mov	eax, OFFSET _xmlDefaultSAXHandler

; 845  : }

	ret	0
$LN2@xmlDefault:

; 843  :     else
; 844  : 	return (&xmlGetGlobalState()->xmlDefaultSAXHandler);

	call	_xmlGetGlobalState
	add	eax, 20					; 00000014H

; 845  : }

	ret	0
___xmlDefaultSAXHandler ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefDefaultBufferSize
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefDefaultBufferSize PROC			; COMDAT

; 828  : int xmlThrDefDefaultBufferSize(int v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlDefaultBufferSizeThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlDefaultBufferSizeThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 829  :     int ret;
; 830  :     xmlMutexLock(xmlThrDefMutex);
; 831  :     ret = xmlDefaultBufferSizeThrDef;
; 832  :     xmlDefaultBufferSizeThrDef = v;
; 833  :     xmlMutexUnlock(xmlThrDefMutex);
; 834  :     return ret;
; 835  : }

	pop	ebp
	ret	0
_xmlThrDefDefaultBufferSize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlDefaultBufferSize
_TEXT	SEGMENT
___xmlDefaultBufferSize PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlDefault

; 823  :     if (IS_MAIN_THREAD)
; 824  : 	return (&xmlDefaultBufferSize);

	mov	eax, OFFSET _xmlDefaultBufferSize

; 827  : }

	ret	0
$LN2@xmlDefault:

; 825  :     else
; 826  : 	return (&xmlGetGlobalState()->xmlDefaultBufferSize);

	call	_xmlGetGlobalState
	add	eax, 392				; 00000188H

; 827  : }

	ret	0
___xmlDefaultBufferSize ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefBufferAllocScheme
_TEXT	SEGMENT
_v$ = 8							; size = 4
_xmlThrDefBufferAllocScheme PROC			; COMDAT

; 811  : xmlBufferAllocationScheme xmlThrDefBufferAllocScheme(xmlBufferAllocationScheme v) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlBufferAllocSchemeThrDef
	mov	ecx, DWORD PTR _v$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlBufferAllocSchemeThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 812  :     xmlBufferAllocationScheme ret;
; 813  :     xmlMutexLock(xmlThrDefMutex);
; 814  :     ret = xmlBufferAllocSchemeThrDef;
; 815  :     xmlBufferAllocSchemeThrDef = v;
; 816  :     xmlMutexUnlock(xmlThrDefMutex);
; 817  :     return ret;
; 818  : }

	pop	ebp
	ret	0
_xmlThrDefBufferAllocScheme ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlBufferAllocScheme
_TEXT	SEGMENT
___xmlBufferAllocScheme PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlBufferA

; 806  :     if (IS_MAIN_THREAD)
; 807  : 	return (&xmlBufferAllocScheme);

	mov	eax, OFFSET _xmlBufferAllocScheme

; 810  : }

	ret	0
$LN2@xmlBufferA:

; 808  :     else
; 809  : 	return (&xmlGetGlobalState()->xmlBufferAllocScheme);

	call	_xmlGetGlobalState
	add	eax, 388				; 00000184H

; 810  : }

	ret	0
___xmlBufferAllocScheme ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___oldXMLWDcompatibility
_TEXT	SEGMENT
___oldXMLWDcompatibility PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@oldXMLWDco

; 797  :     if (IS_MAIN_THREAD)
; 798  : 	return (&oldXMLWDcompatibility);

	mov	eax, OFFSET _oldXMLWDcompatibility

; 801  : }

	ret	0
$LN2@oldXMLWDco:

; 799  :     else
; 800  : 	return (&xmlGetGlobalState()->oldXMLWDcompatibility);

	call	_xmlGetGlobalState
	add	eax, 384				; 00000180H

; 801  : }

	ret	0
___oldXMLWDcompatibility ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___xmlLastError
_TEXT	SEGMENT
___xmlLastError PROC					; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@xmlLastErr

; 729  :     if (IS_MAIN_THREAD)
; 730  : 	return (&xmlLastError);

	mov	eax, OFFSET _xmlLastError

; 733  : }

	ret	0
$LN2@xmlLastErr:

; 731  :     else
; 732  : 	return (&xmlGetGlobalState()->xmlLastError);

	call	_xmlGetGlobalState
	add	eax, 452				; 000001c4H

; 733  : }

	ret	0
___xmlLastError ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___htmlDefaultSAXHandler
_TEXT	SEGMENT
___htmlDefaultSAXHandler PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@htmlDefaul

; 719  :     if (IS_MAIN_THREAD)
; 720  : 	return (&htmlDefaultSAXHandler);

	mov	eax, OFFSET _htmlDefaultSAXHandler

; 723  : }

	ret	0
$LN2@htmlDefaul:

; 721  :     else
; 722  : 	return (&xmlGetGlobalState()->htmlDefaultSAXHandler);

	call	_xmlGetGlobalState
	add	eax, 244				; 000000f4H

; 723  : }

	ret	0
___htmlDefaultSAXHandler ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT ___docbDefaultSAXHandler
_TEXT	SEGMENT
___docbDefaultSAXHandler PROC				; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	call	_xmlIsMainThread
	test	eax, eax
	je	SHORT $LN2@docbDefaul

; 708  :     if (IS_MAIN_THREAD)
; 709  : 	return (&docbDefaultSAXHandler);

	mov	eax, OFFSET _docbDefaultSAXHandler

; 712  : }

	ret	0
$LN2@docbDefaul:

; 710  :     else
; 711  : 	return (&xmlGetGlobalState()->docbDefaultSAXHandler);

	call	_xmlGetGlobalState
	add	eax, 132				; 00000084H

; 712  : }

	ret	0
___docbDefaultSAXHandler ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefParserInputBufferCreateFilenameDefault
_TEXT	SEGMENT
_func$ = 8						; size = 4
_xmlThrDefParserInputBufferCreateFilenameDefault PROC	; COMDAT

; 671  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlParserInputBufferCreateFilenameValueThrDef
	mov	eax, OFFSET ___xmlParserInputBufferCreateFilename
	mov	ecx, DWORD PTR _func$[ebp]
	test	esi, esi
	push	DWORD PTR _xmlThrDefMutex
	cmove	esi, eax
	mov	DWORD PTR _xmlParserInputBufferCreateFilenameValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 672  :     xmlParserInputBufferCreateFilenameFunc old;
; 673  : 
; 674  :     xmlMutexLock(xmlThrDefMutex);
; 675  :     old = xmlParserInputBufferCreateFilenameValueThrDef;
; 676  :     if (old == NULL) {
; 677  : 		old = __xmlParserInputBufferCreateFilename;
; 678  : 	}
; 679  : 
; 680  :     xmlParserInputBufferCreateFilenameValueThrDef = func;
; 681  :     xmlMutexUnlock(xmlThrDefMutex);
; 682  : 
; 683  :     return(old);
; 684  : }

	pop	ebp
	ret	0
_xmlThrDefParserInputBufferCreateFilenameDefault ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefOutputBufferCreateFilenameDefault
_TEXT	SEGMENT
_func$ = 8						; size = 4
_xmlThrDefOutputBufferCreateFilenameDefault PROC	; COMDAT

; 688  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlOutputBufferCreateFilenameValueThrDef
	mov	eax, OFFSET ___xmlOutputBufferCreateFilename
	mov	ecx, DWORD PTR _func$[ebp]
	test	esi, esi
	push	DWORD PTR _xmlThrDefMutex
	cmove	esi, eax
	mov	DWORD PTR _xmlOutputBufferCreateFilenameValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 689  :     xmlOutputBufferCreateFilenameFunc old;
; 690  : 
; 691  :     xmlMutexLock(xmlThrDefMutex);
; 692  :     old = xmlOutputBufferCreateFilenameValueThrDef;
; 693  : #ifdef LIBXML_OUTPUT_ENABLED
; 694  :     if (old == NULL) {
; 695  : 		old = __xmlOutputBufferCreateFilename;
; 696  : 	}
; 697  : #endif
; 698  :     xmlOutputBufferCreateFilenameValueThrDef = func;
; 699  :     xmlMutexUnlock(xmlThrDefMutex);
; 700  : 
; 701  :     return(old);
; 702  : }

	pop	ebp
	ret	0
_xmlThrDefOutputBufferCreateFilenameDefault ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefDeregisterNodeDefault
_TEXT	SEGMENT
_func$ = 8						; size = 4
_xmlThrDefDeregisterNodeDefault PROC			; COMDAT

; 656  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlDeregisterNodeDefaultValueThrDef
	mov	ecx, DWORD PTR _func$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR ___xmlRegisterCallbacks, 1
	mov	DWORD PTR _xmlDeregisterNodeDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 657  :     xmlDeregisterNodeFunc old;
; 658  : 
; 659  :     xmlMutexLock(xmlThrDefMutex);
; 660  :     old = xmlDeregisterNodeDefaultValueThrDef;
; 661  : 
; 662  :     __xmlRegisterCallbacks = 1;
; 663  :     xmlDeregisterNodeDefaultValueThrDef = func;
; 664  :     xmlMutexUnlock(xmlThrDefMutex);
; 665  : 
; 666  :     return(old);
; 667  : }

	pop	ebp
	ret	0
_xmlThrDefDeregisterNodeDefault ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlDeregisterNodeDefault
_TEXT	SEGMENT
_func$ = 8						; size = 4
_xmlDeregisterNodeDefault PROC				; COMDAT

; 646  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _xmlDeregisterNodeDefaultValue
	mov	ecx, DWORD PTR _func$[ebp]
	mov	DWORD PTR ___xmlRegisterCallbacks, 1
	mov	DWORD PTR _xmlDeregisterNodeDefaultValue, ecx

; 647  :     xmlDeregisterNodeFunc old = xmlDeregisterNodeDefaultValue;
; 648  : 
; 649  :     __xmlRegisterCallbacks = 1;
; 650  :     xmlDeregisterNodeDefaultValue = func;
; 651  :     return(old);
; 652  : }

	pop	ebp
	ret	0
_xmlDeregisterNodeDefault ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefRegisterNodeDefault
_TEXT	SEGMENT
_func$ = 8						; size = 4
_xmlThrDefRegisterNodeDefault PROC			; COMDAT

; 623  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	esi, DWORD PTR _xmlRegisterNodeDefaultValueThrDef
	mov	ecx, DWORD PTR _func$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR ___xmlRegisterCallbacks, 1
	mov	DWORD PTR _xmlRegisterNodeDefaultValueThrDef, ecx
	call	_xmlMutexUnlock
	add	esp, 8
	mov	eax, esi
	pop	esi

; 624  :     xmlRegisterNodeFunc old;
; 625  : 
; 626  :     xmlMutexLock(xmlThrDefMutex);
; 627  :     old = xmlRegisterNodeDefaultValueThrDef;
; 628  : 
; 629  :     __xmlRegisterCallbacks = 1;
; 630  :     xmlRegisterNodeDefaultValueThrDef = func;
; 631  :     xmlMutexUnlock(xmlThrDefMutex);
; 632  : 
; 633  :     return(old);
; 634  : }

	pop	ebp
	ret	0
_xmlThrDefRegisterNodeDefault ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlRegisterNodeDefault
_TEXT	SEGMENT
_func$ = 8						; size = 4
_xmlRegisterNodeDefault PROC				; COMDAT

; 613  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _xmlRegisterNodeDefaultValue
	mov	ecx, DWORD PTR _func$[ebp]
	mov	DWORD PTR ___xmlRegisterCallbacks, 1
	mov	DWORD PTR _xmlRegisterNodeDefaultValue, ecx

; 614  :     xmlRegisterNodeFunc old = xmlRegisterNodeDefaultValue;
; 615  : 
; 616  :     __xmlRegisterCallbacks = 1;
; 617  :     xmlRegisterNodeDefaultValue = func;
; 618  :     return(old);
; 619  : }

	pop	ebp
	ret	0
_xmlRegisterNodeDefault ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefSetStructuredErrorFunc
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_handler$ = 12						; size = 4
_xmlThrDefSetStructuredErrorFunc PROC			; COMDAT

; 596  : xmlThrDefSetStructuredErrorFunc(void *ctx, xmlStructuredErrorFunc handler) {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	eax, DWORD PTR _ctx$[ebp]
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlStructuredErrorContextThrDef, eax
	mov	eax, DWORD PTR _handler$[ebp]
	mov	DWORD PTR _xmlStructuredErrorThrDef, eax
	call	_xmlMutexUnlock
	add	esp, 8

; 597  :     xmlMutexLock(xmlThrDefMutex);
; 598  :     xmlStructuredErrorContextThrDef = ctx;
; 599  :     xmlStructuredErrorThrDef = handler;
; 600  :     xmlMutexUnlock(xmlThrDefMutex);
; 601  : }

	pop	ebp
	ret	0
_xmlThrDefSetStructuredErrorFunc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlThrDefSetGenericErrorFunc
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_handler$ = 12						; size = 4
_xmlThrDefSetGenericErrorFunc PROC			; COMDAT

; 585  : xmlThrDefSetGenericErrorFunc(void *ctx, xmlGenericErrorFunc handler) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	esi, DWORD PTR _handler$[ebp]
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexLock
	mov	eax, DWORD PTR _ctx$[ebp]
	test	esi, esi
	push	DWORD PTR _xmlThrDefMutex
	mov	DWORD PTR _xmlGenericErrorContextThrDef, eax
	mov	eax, OFFSET _xmlGenericErrorDefaultFunc
	cmove	esi, eax
	mov	DWORD PTR _xmlGenericErrorThrDef, esi
	call	_xmlMutexUnlock
	add	esp, 8
	pop	esi

; 586  :     xmlMutexLock(xmlThrDefMutex);
; 587  :     xmlGenericErrorContextThrDef = ctx;
; 588  :     if (handler != NULL)
; 589  : 	xmlGenericErrorThrDef = handler;
; 590  :     else
; 591  : 	xmlGenericErrorThrDef = xmlGenericErrorDefaultFunc;
; 592  :     xmlMutexUnlock(xmlThrDefMutex);
; 593  : }

	pop	ebp
	ret	0
_xmlThrDefSetGenericErrorFunc ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlInitializeGlobalState
_TEXT	SEGMENT
_gs$ = 8						; size = 4
_xmlInitializeGlobalState PROC				; COMDAT

; 507  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _xmlThrDefMutex
	test	eax, eax
	jne	SHORT $LN5@xmlInitial

; 50   :         xmlThrDefMutex = xmlNewMutex();

	call	_xmlNewMutex
	mov	DWORD PTR _xmlThrDefMutex, eax
$LN5@xmlInitial:
	push	esi

; 508  : #ifdef DEBUG_GLOBALS
; 509  :     fprintf(stderr, "Initializing globals at %lu for thread %d\n",
; 510  : 	    (unsigned long) gs, xmlGetThreadId());
; 511  : #endif
; 512  : 
; 513  :     /*
; 514  :      * Perform initialization as required by libxml
; 515  :      */
; 516  :     if (xmlThrDefMutex == NULL)
; 517  :         xmlInitGlobals();
; 518  : 
; 519  :     xmlMutexLock(xmlThrDefMutex);

	push	eax
	call	_xmlMutexLock

; 520  : 
; 521  : #if defined(LIBXML_DOCB_ENABLED) && defined(LIBXML_LEGACY_ENABLED) && defined(LIBXML_SAX1_ENABLED)
; 522  :     initdocbDefaultSAXHandler(&gs->docbDefaultSAXHandler);

	mov	esi, DWORD PTR _gs$[ebp]
	lea	eax, DWORD PTR [esi+132]
	push	eax
	call	_initdocbDefaultSAXHandler

; 523  : #endif
; 524  : #if defined(LIBXML_HTML_ENABLED) && defined(LIBXML_LEGACY_ENABLED) && defined(LIBXML_SAX1_ENABLED)
; 525  :     inithtmlDefaultSAXHandler(&gs->htmlDefaultSAXHandler);

	lea	eax, DWORD PTR [esi+244]
	push	eax
	call	_inithtmlDefaultSAXHandler

; 526  : #endif
; 527  : 
; 528  :     gs->oldXMLWDcompatibility = 0;
; 529  :     gs->xmlBufferAllocScheme = xmlBufferAllocSchemeThrDef;

	mov	eax, DWORD PTR _xmlBufferAllocSchemeThrDef
	mov	DWORD PTR [esi+388], eax

; 530  :     gs->xmlDefaultBufferSize = xmlDefaultBufferSizeThrDef;

	mov	eax, DWORD PTR _xmlDefaultBufferSizeThrDef
	mov	DWORD PTR [esi+392], eax

; 531  : #if defined(LIBXML_SAX1_ENABLED) && defined(LIBXML_LEGACY_ENABLED)
; 532  :     initxmlDefaultSAXHandler(&gs->xmlDefaultSAXHandler, 1);

	lea	eax, DWORD PTR [esi+20]
	push	1
	push	eax
	mov	DWORD PTR [esi+384], 0
	call	_initxmlDefaultSAXHandler

; 533  : #endif /* LIBXML_SAX1_ENABLED */
; 534  :     gs->xmlDefaultSAXLocator.getPublicId = xmlSAX2GetPublicId;
; 535  :     gs->xmlDefaultSAXLocator.getSystemId = xmlSAX2GetSystemId;
; 536  :     gs->xmlDefaultSAXLocator.getLineNumber = xmlSAX2GetLineNumber;
; 537  :     gs->xmlDefaultSAXLocator.getColumnNumber = xmlSAX2GetColumnNumber;
; 538  :     gs->xmlDoValidityCheckingDefaultValue =

	mov	eax, DWORD PTR _xmlDoValidityCheckingDefaultValueThrDef
	mov	DWORD PTR [esi+400], eax

; 539  :          xmlDoValidityCheckingDefaultValueThrDef;
; 540  : #if defined(DEBUG_MEMORY_LOCATION) | defined(DEBUG_MEMORY)
; 541  :     gs->xmlFree = (xmlFreeFunc) xmlMemFree;
; 542  :     gs->xmlMalloc = (xmlMallocFunc) xmlMemMalloc;
; 543  :     gs->xmlMallocAtomic = (xmlMallocFunc) xmlMemMalloc;
; 544  :     gs->xmlRealloc = (xmlReallocFunc) xmlMemRealloc;
; 545  :     gs->xmlMemStrdup = (xmlStrdupFunc) xmlMemoryStrdup;
; 546  : #else
; 547  :     gs->xmlFree = (xmlFreeFunc) free;

	mov	eax, DWORD PTR __imp__free
	mov	DWORD PTR [esi+356], eax

; 548  :     gs->xmlMalloc = (xmlMallocFunc) malloc;

	mov	eax, DWORD PTR __imp__malloc
	mov	DWORD PTR [esi+360], eax

; 549  :     gs->xmlMallocAtomic = (xmlMallocFunc) malloc;

	mov	DWORD PTR [esi+448], eax

; 550  :     gs->xmlRealloc = (xmlReallocFunc) realloc;

	mov	eax, DWORD PTR __imp__realloc
	mov	DWORD PTR [esi+368], eax

; 551  :     gs->xmlMemStrdup = (xmlStrdupFunc) xmlStrdup;
; 552  : #endif
; 553  :     gs->xmlGetWarningsDefaultValue = xmlGetWarningsDefaultValueThrDef;

	mov	eax, DWORD PTR _xmlGetWarningsDefaultValueThrDef
	mov	DWORD PTR [esi+404], eax

; 554  :     gs->xmlIndentTreeOutput = xmlIndentTreeOutputThrDef;

	mov	eax, DWORD PTR _xmlIndentTreeOutputThrDef
	mov	DWORD PTR [esi+432], eax

; 555  :     gs->xmlTreeIndentString = xmlTreeIndentStringThrDef;

	mov	eax, DWORD PTR _xmlTreeIndentStringThrDef
	mov	DWORD PTR [esi+436], eax

; 556  :     gs->xmlKeepBlanksDefaultValue = xmlKeepBlanksDefaultValueThrDef;

	mov	eax, DWORD PTR _xmlKeepBlanksDefaultValueThrDef
	mov	DWORD PTR [esi+408], eax

; 557  :     gs->xmlLineNumbersDefaultValue = xmlLineNumbersDefaultValueThrDef;

	mov	eax, DWORD PTR _xmlLineNumbersDefaultValueThrDef
	mov	DWORD PTR [esi+412], eax

; 558  :     gs->xmlLoadExtDtdDefaultValue = xmlLoadExtDtdDefaultValueThrDef;

	mov	eax, DWORD PTR _xmlLoadExtDtdDefaultValueThrDef
	mov	DWORD PTR [esi+416], eax

; 559  :     gs->xmlParserDebugEntities = xmlParserDebugEntitiesThrDef;

	mov	eax, DWORD PTR _xmlParserDebugEntitiesThrDef
	mov	DWORD PTR [esi+420], eax

; 560  :     gs->xmlParserVersion = LIBXML_VERSION_STRING;
; 561  :     gs->xmlPedanticParserDefaultValue = xmlPedanticParserDefaultValueThrDef;

	mov	eax, DWORD PTR _xmlPedanticParserDefaultValueThrDef
	mov	DWORD PTR [esi+424], eax

; 562  :     gs->xmlSaveNoEmptyTags = xmlSaveNoEmptyTagsThrDef;

	mov	eax, DWORD PTR _xmlSaveNoEmptyTagsThrDef
	mov	DWORD PTR [esi+428], eax

; 563  :     gs->xmlSubstituteEntitiesDefaultValue =

	mov	eax, DWORD PTR _xmlSubstituteEntitiesDefaultValueThrDef
	mov	DWORD PTR [esi+396], eax

; 564  :         xmlSubstituteEntitiesDefaultValueThrDef;
; 565  : 
; 566  :     gs->xmlGenericError = xmlGenericErrorThrDef;

	mov	eax, DWORD PTR _xmlGenericErrorThrDef
	mov	DWORD PTR [esi+372], eax

; 567  :     gs->xmlStructuredError = xmlStructuredErrorThrDef;

	mov	eax, DWORD PTR _xmlStructuredErrorThrDef
	mov	DWORD PTR [esi+376], eax

; 568  :     gs->xmlGenericErrorContext = xmlGenericErrorContextThrDef;

	mov	eax, DWORD PTR _xmlGenericErrorContextThrDef
	mov	DWORD PTR [esi+380], eax

; 569  :     gs->xmlStructuredErrorContext = xmlStructuredErrorContextThrDef;

	mov	eax, DWORD PTR _xmlStructuredErrorContextThrDef
	mov	DWORD PTR [esi+512], eax

; 570  :     gs->xmlRegisterNodeDefaultValue = xmlRegisterNodeDefaultValueThrDef;

	mov	eax, DWORD PTR _xmlRegisterNodeDefaultValueThrDef
	mov	DWORD PTR [esi+440], eax

; 571  :     gs->xmlDeregisterNodeDefaultValue = xmlDeregisterNodeDefaultValueThrDef;

	mov	eax, DWORD PTR _xmlDeregisterNodeDefaultValueThrDef
	mov	DWORD PTR [esi+444], eax

; 572  : 
; 573  : 	gs->xmlParserInputBufferCreateFilenameValue = xmlParserInputBufferCreateFilenameValueThrDef;

	mov	eax, DWORD PTR _xmlParserInputBufferCreateFilenameValueThrDef
	mov	DWORD PTR [esi+504], eax

; 574  : 	gs->xmlOutputBufferCreateFilenameValue = xmlOutputBufferCreateFilenameValueThrDef;

	mov	eax, DWORD PTR _xmlOutputBufferCreateFilenameValueThrDef

; 575  :     memset(&gs->xmlLastError, 0, sizeof(xmlError));

	push	52					; 00000034H
	mov	DWORD PTR [esi+508], eax
	lea	eax, DWORD PTR [esi+452]
	push	0
	push	eax
	mov	DWORD PTR [esi+4], OFFSET _xmlSAX2GetPublicId
	mov	DWORD PTR [esi+8], OFFSET _xmlSAX2GetSystemId
	mov	DWORD PTR [esi+12], OFFSET _xmlSAX2GetLineNumber
	mov	DWORD PTR [esi+16], OFFSET _xmlSAX2GetColumnNumber
	mov	DWORD PTR [esi+364], OFFSET _xmlStrdup
	mov	DWORD PTR [esi], OFFSET ??_C@_05BGCJPHN@20909@
	call	_memset

; 576  : 
; 577  :     xmlMutexUnlock(xmlThrDefMutex);

	push	DWORD PTR _xmlThrDefMutex
	call	_xmlMutexUnlock
	add	esp, 36					; 00000024H
	pop	esi

; 578  : }

	pop	ebp
	ret	0
_xmlInitializeGlobalState ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlCleanupGlobals
_TEXT	SEGMENT
_xmlCleanupGlobals PROC					; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _xmlThrDefMutex
	test	eax, eax
	je	SHORT $LN2@xmlCleanup

; 60   :     if (xmlThrDefMutex != NULL) {
; 61   : 	xmlFreeMutex(xmlThrDefMutex);

	push	eax
	call	_xmlFreeMutex
	add	esp, 4

; 62   : 	xmlThrDefMutex = NULL;

	mov	DWORD PTR _xmlThrDefMutex, 0
$LN2@xmlCleanup:

; 63   :     }
; 64   :     __xmlGlobalInitMutexDestroy();

	jmp	___xmlGlobalInitMutexDestroy
_xmlCleanupGlobals ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\globals.c
;	COMDAT _xmlInitGlobals
_TEXT	SEGMENT
_xmlInitGlobals PROC					; COMDAT
	mov	ecx, OFFSET __DB69A600_globals@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR _xmlThrDefMutex, 0
	jne	SHORT $LN2@xmlInitGlo

; 49   :     if (xmlThrDefMutex == NULL)
; 50   :         xmlThrDefMutex = xmlNewMutex();

	call	_xmlNewMutex
	mov	DWORD PTR _xmlThrDefMutex, eax
$LN2@xmlInitGlo:

; 51   : }

	ret	0
_xmlInitGlobals ENDP
_TEXT	ENDS
END
