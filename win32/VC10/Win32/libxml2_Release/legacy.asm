; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\legacy.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_08EBLJJHKN@validate@			; `string'
PUBLIC	??_C@_0M@LFNKGPPF@load?5subset@			; `string'
PUBLIC	??_C@_0M@JOFGOHIP@keep?5blanks@			; `string'
PUBLIC	??_C@_0M@EPCDMNHL@disable?5SAX@			; `string'
PUBLIC	??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@	; `string'
PUBLIC	??_C@_0BE@MFJOLEGC@substitute?5entities@	; `string'
PUBLIC	??_C@_0BB@FNGHLMDK@gather?5line?5info@		; `string'
PUBLIC	??_C@_09OBFNJHCP@user?5data@			; `string'
PUBLIC	??_C@_07ELANCDBJ@is?5html@			; `string'
PUBLIC	??_C@_0O@NMMOLLEF@is?5standalone@		; `string'
PUBLIC	??_C@_0M@DGHBBHCN@stop?5parser@			; `string'
PUBLIC	??_C@_08JEEDKNPB@document@			; `string'
PUBLIC	??_C@_0P@NEKMCKKP@is?5well?5formed@		; `string'
PUBLIC	??_C@_08EKBKNFNH@is?5valid@			; `string'
PUBLIC	??_C@_09HIOCHIDE@SAX?5block@			; `string'
PUBLIC	??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@ ; `string'
PUBLIC	??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@	; `string'
PUBLIC	??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@ ; `string'
PUBLIC	??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@ ; `string'
PUBLIC	??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@ ; `string'
PUBLIC	??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@	; `string'
PUBLIC	??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@	; `string'
PUBLIC	??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@	; `string'
PUBLIC	??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@ ; `string'
PUBLIC	??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@	; `string'
PUBLIC	??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@ ; `string'
PUBLIC	??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@ ; `string'
PUBLIC	??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@ ; `string'
PUBLIC	??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@	; `string'
PUBLIC	??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@	; `string'
PUBLIC	??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@	; `string'
PUBLIC	??_C@_0BH@COKKFLJA@SAX?5function?5reference@	; `string'
PUBLIC	??_C@_0BI@OKJHNGCO@SAX?5function?5characters@	; `string'
PUBLIC	??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@ ; `string'
PUBLIC	??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@ ; `string'
PUBLIC	??_C@_0BF@LMDIIKPA@SAX?5function?5comment@	; `string'
PUBLIC	??_C@_0BF@IKOPPKMI@SAX?5function?5warning@	; `string'
PUBLIC	??_C@_0BD@DNENFEEM@SAX?5function?5error@	; `string'
PUBLIC	??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@	; `string'
PUBLIC	??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@ ; `string'
PUBLIC	??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@	; `string'
PUBLIC	??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@ ; `string'
_DATA	SEGMENT
COMM	_xmlMalloc:DWORD
COMM	_xmlMallocAtomic:DWORD
COMM	_xmlRealloc:DWORD
COMM	_xmlFree:DWORD
COMM	_xmlMemStrdup:DWORD
COMM	_xmlIsBaseCharGroup:BYTE:010H
COMM	_xmlIsCharGroup:BYTE:010H
COMM	_xmlIsCombiningGroup:BYTE:010H
COMM	_xmlIsDigitGroup:BYTE:010H
COMM	_xmlIsExtenderGroup:BYTE:010H
COMM	_xmlIsIdeographicGroup:BYTE:010H
COMM	_xmlIsPubidChar_tab:BYTE:0100H
COMM	_xmlParserMaxDepth:DWORD
COMM	_forbiddenExp:DWORD
COMM	_emptyExp:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__188180DA_corecrt_math@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__06F2C055_legacy@c DB 01H
msvcjmc	ENDS
;	COMDAT ??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
CONST	SEGMENT
??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@ DB 'SAX function extern'
	DB	'alSubset', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
CONST	SEGMENT
??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@ DB 'SAX function cdataBlock'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
CONST	SEGMENT
??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@ DB 'SAX function ge'
	DB	'tParameterEntity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
CONST	SEGMENT
??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@ DB 'SAX function fatalError'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DNENFEEM@SAX?5function?5error@
CONST	SEGMENT
??_C@_0BD@DNENFEEM@SAX?5function?5error@ DB 'SAX function error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
CONST	SEGMENT
??_C@_0BF@IKOPPKMI@SAX?5function?5warning@ DB 'SAX function warning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
CONST	SEGMENT
??_C@_0BF@LMDIIKPA@SAX?5function?5comment@ DB 'SAX function comment', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
CONST	SEGMENT
??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@ DB 'SAX function pr'
	DB	'ocessingInstruction', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
CONST	SEGMENT
??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@ DB 'SAX function ig'
	DB	'norableWhitespace', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
CONST	SEGMENT
??_C@_0BI@OKJHNGCO@SAX?5function?5characters@ DB 'SAX function characters'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@COKKFLJA@SAX?5function?5reference@
CONST	SEGMENT
??_C@_0BH@COKKFLJA@SAX?5function?5reference@ DB 'SAX function reference', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
CONST	SEGMENT
??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@ DB 'SAX function endElement'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
CONST	SEGMENT
??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@ DB 'SAX function startEle'
	DB	'ment', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
CONST	SEGMENT
??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@ DB 'SAX function endDocume'
	DB	'nt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
CONST	SEGMENT
??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@ DB 'SAX function startDo'
	DB	'cument', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
CONST	SEGMENT
??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@ DB 'SAX function se'
	DB	'tDocumentLocator', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
CONST	SEGMENT
??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@ DB 'SAX function un'
	DB	'parsedEntityDecl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
CONST	SEGMENT
??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@ DB 'SAX function elementDe'
	DB	'cl', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
CONST	SEGMENT
??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@ DB 'SAX function attribu'
	DB	'teDecl', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
CONST	SEGMENT
??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@ DB 'SAX function notation'
	DB	'Decl', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
CONST	SEGMENT
??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@ DB 'SAX function entityDecl'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
CONST	SEGMENT
??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@ DB 'SAX function getEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
CONST	SEGMENT
??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@ DB 'SAX function resolve'
	DB	'Entity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
CONST	SEGMENT
??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@ DB 'SAX function has'
	DB	'ExternalSubset', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
CONST	SEGMENT
??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@ DB 'SAX function hasI'
	DB	'nternalSubset', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
CONST	SEGMENT
??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@ DB 'SAX function isStanda'
	DB	'lone', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
CONST	SEGMENT
??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@ DB 'SAX function intern'
	DB	'alSubset', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09HIOCHIDE@SAX?5block@
CONST	SEGMENT
??_C@_09HIOCHIDE@SAX?5block@ DB 'SAX block', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKBKNFNH@is?5valid@
CONST	SEGMENT
??_C@_08EKBKNFNH@is?5valid@ DB 'is valid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NEKMCKKP@is?5well?5formed@
CONST	SEGMENT
??_C@_0P@NEKMCKKP@is?5well?5formed@ DB 'is well formed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JEEDKNPB@document@
CONST	SEGMENT
??_C@_08JEEDKNPB@document@ DB 'document', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGHBBHCN@stop?5parser@
CONST	SEGMENT
??_C@_0M@DGHBBHCN@stop?5parser@ DB 'stop parser', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMMOLLEF@is?5standalone@
CONST	SEGMENT
??_C@_0O@NMMOLLEF@is?5standalone@ DB 'is standalone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ELANCDBJ@is?5html@
CONST	SEGMENT
??_C@_07ELANCDBJ@is?5html@ DB 'is html', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OBFNJHCP@user?5data@
CONST	SEGMENT
??_C@_09OBFNJHCP@user?5data@ DB 'user data', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNGHLMDK@gather?5line?5info@
CONST	SEGMENT
??_C@_0BB@FNGHLMDK@gather?5line?5info@ DB 'gather line info', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MFJOLEGC@substitute?5entities@
CONST	SEGMENT
??_C@_0BE@MFJOLEGC@substitute?5entities@ DB 'substitute entities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
CONST	SEGMENT
??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@ DB 'fetch external entities'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EPCDMNHL@disable?5SAX@
CONST	SEGMENT
??_C@_0M@EPCDMNHL@disable?5SAX@ DB 'disable SAX', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JOFGOHIP@keep?5blanks@
CONST	SEGMENT
??_C@_0M@JOFGOHIP@keep?5blanks@ DB 'keep blanks', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LFNKGPPF@load?5subset@
CONST	SEGMENT
??_C@_0M@LFNKGPPF@load?5subset@ DB 'load subset', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EBLJJHKN@validate@
CONST	SEGMENT
??_C@_08EBLJJHKN@validate@ DB 'validate', 00H		; `string'
CONST	ENDS
PUBLIC	_xmlNewGlobalNs
PUBLIC	_xmlInitializePredefinedEntities
PUBLIC	_xmlEncodeEntities
PUBLIC	_xmlCleanupPredefinedEntities
PUBLIC	_xmlGetFeaturesList
PUBLIC	_xmlGetFeature
PUBLIC	_xmlSetFeature
PUBLIC	_getPublicId
PUBLIC	_getSystemId
PUBLIC	_setDocumentLocator
PUBLIC	_getLineNumber
PUBLIC	_getColumnNumber
PUBLIC	_isStandalone
PUBLIC	_hasInternalSubset
PUBLIC	_hasExternalSubset
PUBLIC	_internalSubset
PUBLIC	_externalSubset
PUBLIC	_getEntity
PUBLIC	_getParameterEntity
PUBLIC	_resolveEntity
PUBLIC	_entityDecl
PUBLIC	_attributeDecl
PUBLIC	_elementDecl
PUBLIC	_notationDecl
PUBLIC	_unparsedEntityDecl
PUBLIC	_startDocument
PUBLIC	_endDocument
PUBLIC	_attribute
PUBLIC	_startElement
PUBLIC	_endElement
PUBLIC	_reference
PUBLIC	_characters
PUBLIC	_ignorableWhitespace
PUBLIC	_processingInstruction
PUBLIC	_globalNamespace
PUBLIC	_setNamespace
PUBLIC	_getNamespace
PUBLIC	_checkNamespace
PUBLIC	_namespaceDecl
PUBLIC	_comment
PUBLIC	_cdataBlock
PUBLIC	_xmlParseQuotedString
PUBLIC	_xmlParseNamespace
PUBLIC	_xmlNamespaceParseNSDef
PUBLIC	_xmlScanName
PUBLIC	_xmlNamespaceParseNCName
PUBLIC	_xmlParserHandleReference
PUBLIC	_xmlNamespaceParseQName
PUBLIC	_xmlDecodeEntities
PUBLIC	_xmlHandleEntity
PUBLIC	_xmlUpgradeOldNs
PUBLIC	_htmlDecodeEntities
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@ ; `string'
PUBLIC	??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@ ; `string'
PUBLIC	??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@ ; `string'
PUBLIC	??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@ ; `string'
PUBLIC	??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@ ; `string'
PUBLIC	??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@ ; `string'
PUBLIC	??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@ ; `string'
PUBLIC	??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@ ; `string'
PUBLIC	??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@ ; `string'
PUBLIC	??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@ ; `string'
PUBLIC	??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@ ; `string'
PUBLIC	??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@ ; `string'
PUBLIC	??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@ ; `string'
PUBLIC	??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@ ; `string'
PUBLIC	??_C@_0M@DAFHLKNN@getPublicId@			; `string'
PUBLIC	??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@ ; `string'
PUBLIC	??_C@_0M@FFHGBOOJ@getSystemId@			; `string'
PUBLIC	??_C@_0O@OCINCMPB@getLineNumber@		; `string'
PUBLIC	??_C@_0BA@MBKHJKLG@getColumnNumber@		; `string'
PUBLIC	??_C@_0N@GDKLDDLO@isStandalone@			; `string'
PUBLIC	??_C@_0BC@CIDJHICF@hasInternalSubset@		; `string'
PUBLIC	??_C@_0BC@PDLMKGBL@hasExternalSubset@		; `string'
PUBLIC	??_C@_0P@OCEDHHOL@internalSubset@		; `string'
PUBLIC	??_C@_0P@DJMGKJNF@externalSubset@		; `string'
PUBLIC	??_C@_0O@LFLMJBFI@resolveEntity@		; `string'
PUBLIC	??_C@_09NCBEBLEA@getEntity@			; `string'
PUBLIC	??_C@_0BD@KINJKNIJ@getParameterEntity@		; `string'
PUBLIC	??_C@_0L@OGGGJLI@entityDecl@			; `string'
PUBLIC	??_C@_0O@BNECHEBL@attributeDecl@		; `string'
PUBLIC	??_C@_0M@FJEPBGK@elementDecl@			; `string'
PUBLIC	??_C@_0N@CBDPABNA@notationDecl@			; `string'
PUBLIC	??_C@_0BD@HCBGHJEF@unparsedEntityDecl@		; `string'
PUBLIC	??_C@_0BD@DHECJBOB@setDocumentLocator@		; `string'
PUBLIC	??_C@_0M@OBDBPPLP@endDocument@			; `string'
PUBLIC	??_C@_09HGIEBAJ@attribute@			; `string'
PUBLIC	??_C@_0L@GKEIAKOG@endElement@			; `string'
PUBLIC	??_C@_09KJONPCOF@reference@			; `string'
PUBLIC	??_C@_0L@MKHPBEDE@characters@			; `string'
PUBLIC	??_C@_0BE@JAKNEPAP@ignorableWhitespace@		; `string'
PUBLIC	??_C@_0BG@BKBGIBPJ@processingInstruction@	; `string'
PUBLIC	??_C@_0BA@HBAGMMIM@globalNamespace@		; `string'
PUBLIC	??_C@_0N@PFFBACNP@setNamespace@			; `string'
PUBLIC	??_C@_0N@IBOPMOJD@getNamespace@			; `string'
PUBLIC	??_C@_0P@HOABFNF@checkNamespace@		; `string'
PUBLIC	??_C@_0O@BMLADFEG@namespaceDecl@		; `string'
PUBLIC	??_C@_07GJGNEJFD@comment@			; `string'
PUBLIC	??_C@_0L@HKAOEGJH@cdataBlock@			; `string'
EXTRN	_xmlParserValidityError:PROC
EXTRN	_xmlParserValidityWarning:PROC
EXTRN	_xmlSAX2GetPublicId:PROC
EXTRN	_xmlSAX2GetSystemId:PROC
EXTRN	_xmlSAX2GetLineNumber:PROC
EXTRN	_xmlSAX2GetColumnNumber:PROC
EXTRN	_xmlSAX2IsStandalone:PROC
EXTRN	_xmlSAX2HasInternalSubset:PROC
EXTRN	_xmlSAX2HasExternalSubset:PROC
EXTRN	_xmlSAX2InternalSubset:PROC
EXTRN	_xmlSAX2ExternalSubset:PROC
EXTRN	_xmlSAX2GetEntity:PROC
EXTRN	_xmlSAX2GetParameterEntity:PROC
EXTRN	_xmlSAX2ResolveEntity:PROC
EXTRN	_xmlSAX2EntityDecl:PROC
EXTRN	_xmlSAX2AttributeDecl:PROC
EXTRN	_xmlSAX2ElementDecl:PROC
EXTRN	_xmlSAX2NotationDecl:PROC
EXTRN	_xmlSAX2UnparsedEntityDecl:PROC
EXTRN	_xmlSAX2StartDocument:PROC
EXTRN	_xmlSAX2EndDocument:PROC
EXTRN	_xmlSAX2StartElement:PROC
EXTRN	_xmlSAX2EndElement:PROC
EXTRN	_xmlSAX2Reference:PROC
EXTRN	_xmlSAX2Characters:PROC
EXTRN	_xmlSAX2ProcessingInstruction:PROC
EXTRN	_xmlSAX2Comment:PROC
EXTRN	_xmlSAX2CDataBlock:PROC
EXTRN	___xmlGenericError:PROC
EXTRN	___xmlGenericErrorContext:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
_BSS	SEGMENT
?deprecated@?1??htmlDecodeEntities@@9@9 DD 01H DUP (?)	; `htmlDecodeEntities'::`2'::deprecated
?deprecated@?1??xmlDecodeEntities@@9@9 DD 01H DUP (?)	; `xmlDecodeEntities'::`2'::deprecated
?deprecated@?1??xmlNamespaceParseNCName@@9@9 DD 01H DUP (?) ; `xmlNamespaceParseNCName'::`2'::deprecated
?deprecated@?1??xmlNamespaceParseQName@@9@9 DD 01H DUP (?) ; `xmlNamespaceParseQName'::`2'::deprecated
?deprecated@?1??xmlNamespaceParseNSDef@@9@9 DD 01H DUP (?) ; `xmlNamespaceParseNSDef'::`2'::deprecated
?deprecated@?1??xmlParseQuotedString@@9@9 DD 01H DUP (?) ; `xmlParseQuotedString'::`2'::deprecated
?deprecated@?1??xmlParseNamespace@@9@9 DD 01H DUP (?)	; `xmlParseNamespace'::`2'::deprecated
?deprecated@?1??xmlScanName@@9@9 DD 01H DUP (?)		; `xmlScanName'::`2'::deprecated
?deprecated@?1??xmlParserHandleReference@@9@9 DD 01H DUP (?) ; `xmlParserHandleReference'::`2'::deprecated
?deprecated@?1??xmlHandleEntity@@9@9 DD 01H DUP (?)	; `xmlHandleEntity'::`2'::deprecated
?deprecated@?1??xmlNewGlobalNs@@9@9 DD 01H DUP (?)	; `xmlNewGlobalNs'::`2'::deprecated
?deprecated@?1??xmlUpgradeOldNs@@9@9 DD 01H DUP (?)	; `xmlUpgradeOldNs'::`2'::deprecated
_deprecated_v1_msg DD 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0L@HKAOEGJH@cdataBlock@
CONST	SEGMENT
??_C@_0L@HKAOEGJH@cdataBlock@ DB 'cdataBlock', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GJGNEJFD@comment@
CONST	SEGMENT
??_C@_07GJGNEJFD@comment@ DB 'comment', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BMLADFEG@namespaceDecl@
CONST	SEGMENT
??_C@_0O@BMLADFEG@namespaceDecl@ DB 'namespaceDecl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HOABFNF@checkNamespace@
CONST	SEGMENT
??_C@_0P@HOABFNF@checkNamespace@ DB 'checkNamespace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IBOPMOJD@getNamespace@
CONST	SEGMENT
??_C@_0N@IBOPMOJD@getNamespace@ DB 'getNamespace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFFBACNP@setNamespace@
CONST	SEGMENT
??_C@_0N@PFFBACNP@setNamespace@ DB 'setNamespace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HBAGMMIM@globalNamespace@
CONST	SEGMENT
??_C@_0BA@HBAGMMIM@globalNamespace@ DB 'globalNamespace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BKBGIBPJ@processingInstruction@
CONST	SEGMENT
??_C@_0BG@BKBGIBPJ@processingInstruction@ DB 'processingInstruction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JAKNEPAP@ignorableWhitespace@
CONST	SEGMENT
??_C@_0BE@JAKNEPAP@ignorableWhitespace@ DB 'ignorableWhitespace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MKHPBEDE@characters@
CONST	SEGMENT
??_C@_0L@MKHPBEDE@characters@ DB 'characters', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KJONPCOF@reference@
CONST	SEGMENT
??_C@_09KJONPCOF@reference@ DB 'reference', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKEIAKOG@endElement@
CONST	SEGMENT
??_C@_0L@GKEIAKOG@endElement@ DB 'endElement', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGIEBAJ@attribute@
CONST	SEGMENT
??_C@_09HGIEBAJ@attribute@ DB 'attribute', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OBDBPPLP@endDocument@
CONST	SEGMENT
??_C@_0M@OBDBPPLP@endDocument@ DB 'endDocument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHECJBOB@setDocumentLocator@
CONST	SEGMENT
??_C@_0BD@DHECJBOB@setDocumentLocator@ DB 'setDocumentLocator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCBGHJEF@unparsedEntityDecl@
CONST	SEGMENT
??_C@_0BD@HCBGHJEF@unparsedEntityDecl@ DB 'unparsedEntityDecl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CBDPABNA@notationDecl@
CONST	SEGMENT
??_C@_0N@CBDPABNA@notationDecl@ DB 'notationDecl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FJEPBGK@elementDecl@
CONST	SEGMENT
??_C@_0M@FJEPBGK@elementDecl@ DB 'elementDecl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNECHEBL@attributeDecl@
CONST	SEGMENT
??_C@_0O@BNECHEBL@attributeDecl@ DB 'attributeDecl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OGGGJLI@entityDecl@
CONST	SEGMENT
??_C@_0L@OGGGJLI@entityDecl@ DB 'entityDecl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KINJKNIJ@getParameterEntity@
CONST	SEGMENT
??_C@_0BD@KINJKNIJ@getParameterEntity@ DB 'getParameterEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NCBEBLEA@getEntity@
CONST	SEGMENT
??_C@_09NCBEBLEA@getEntity@ DB 'getEntity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LFLMJBFI@resolveEntity@
CONST	SEGMENT
??_C@_0O@LFLMJBFI@resolveEntity@ DB 'resolveEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DJMGKJNF@externalSubset@
CONST	SEGMENT
??_C@_0P@DJMGKJNF@externalSubset@ DB 'externalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OCEDHHOL@internalSubset@
CONST	SEGMENT
??_C@_0P@OCEDHHOL@internalSubset@ DB 'internalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PDLMKGBL@hasExternalSubset@
CONST	SEGMENT
??_C@_0BC@PDLMKGBL@hasExternalSubset@ DB 'hasExternalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CIDJHICF@hasInternalSubset@
CONST	SEGMENT
??_C@_0BC@CIDJHICF@hasInternalSubset@ DB 'hasInternalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GDKLDDLO@isStandalone@
CONST	SEGMENT
??_C@_0N@GDKLDDLO@isStandalone@ DB 'isStandalone', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MBKHJKLG@getColumnNumber@
CONST	SEGMENT
??_C@_0BA@MBKHJKLG@getColumnNumber@ DB 'getColumnNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OCINCMPB@getLineNumber@
CONST	SEGMENT
??_C@_0O@OCINCMPB@getLineNumber@ DB 'getLineNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FFHGBOOJ@getSystemId@
CONST	SEGMENT
??_C@_0M@FFHGBOOJ@getSystemId@ DB 'getSystemId', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
CONST	SEGMENT
??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@ DB 'Use of deprec'
	DB	'ated SAXv1 function %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DAFHLKNN@getPublicId@
CONST	SEGMENT
??_C@_0M@DAFHLKNN@getPublicId@ DB 'getPublicId', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@
CONST	SEGMENT
??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@ DB '   change '
	DB	'code to use xmlEncodeEntitiesReentrant()', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@
CONST	SEGMENT
??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@ DB 'Deprecated API '
	DB	'xmlEncodeEntities() used', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@
CONST	SEGMENT
??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@ DB 'xmlUpgrade'
	DB	'OldNs() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@
CONST	SEGMENT
??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@ DB 'xmlNewGlob'
	DB	'alNs() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@
CONST	SEGMENT
??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@ DB 'xmlHandle'
	DB	'Entity() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@
CONST	SEGMENT
??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@ DB 'xmlParserH'
	DB	'andleReference() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@
CONST	SEGMENT
??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@ DB 'xmlScanNa'
	DB	'me() deprecated function reached', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@
CONST	SEGMENT
??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@ DB 'xmlParseN'
	DB	'amespace() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@
CONST	SEGMENT
??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@ DB 'xmlParseQu'
	DB	'otedString() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@
CONST	SEGMENT
??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@ DB 'xmlNamespa'
	DB	'ceParseNSDef() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@
CONST	SEGMENT
??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@ DB 'xmlNamespac'
	DB	'eParseQName() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@
CONST	SEGMENT
??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@ DB 'xmlNamespa'
	DB	'ceParseNCName() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@
CONST	SEGMENT
??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@ DB 'xmlDecode'
	DB	'Entities() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_xmlFeaturesList DD FLAT:??_C@_08EBLJJHKN@validate@
	DD	FLAT:??_C@_0M@LFNKGPPF@load?5subset@
	DD	FLAT:??_C@_0M@JOFGOHIP@keep?5blanks@
	DD	FLAT:??_C@_0M@EPCDMNHL@disable?5SAX@
	DD	FLAT:??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
	DD	FLAT:??_C@_0BE@MFJOLEGC@substitute?5entities@
	DD	FLAT:??_C@_0BB@FNGHLMDK@gather?5line?5info@
	DD	FLAT:??_C@_09OBFNJHCP@user?5data@
	DD	FLAT:??_C@_07ELANCDBJ@is?5html@
	DD	FLAT:??_C@_0O@NMMOLLEF@is?5standalone@
	DD	FLAT:??_C@_0M@DGHBBHCN@stop?5parser@
	DD	FLAT:??_C@_08JEEDKNPB@document@
	DD	FLAT:??_C@_0P@NEKMCKKP@is?5well?5formed@
	DD	FLAT:??_C@_08EKBKNFNH@is?5valid@
	DD	FLAT:??_C@_09HIOCHIDE@SAX?5block@
	DD	FLAT:??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
	DD	FLAT:??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
	DD	FLAT:??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
	DD	FLAT:??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
	DD	FLAT:??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
	DD	FLAT:??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
	DD	FLAT:??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
	DD	FLAT:??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
	DD	FLAT:??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
	DD	FLAT:??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
	DD	FLAT:??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
	DD	FLAT:??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
	DD	FLAT:??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
	DD	FLAT:??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
	DD	FLAT:??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
	DD	FLAT:??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
	DD	FLAT:??_C@_0BH@COKKFLJA@SAX?5function?5reference@
	DD	FLAT:??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
	DD	FLAT:??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
	DD	FLAT:??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
	DD	FLAT:??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
	DD	FLAT:??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
	DD	FLAT:??_C@_0BD@DNENFEEM@SAX?5function?5error@
	DD	FLAT:??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
	DD	FLAT:??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
	DD	FLAT:??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
	DD	FLAT:??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
?warning@?1??xmlEncodeEntities@@9@9 DD 01H		; `xmlEncodeEntities'::`2'::warning
_DATA	ENDS
;	COMDAT ??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@
CONST	SEGMENT
??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@ DB 'htmlDecode'
	DB	'Entities() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _htmlDecodeEntities
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_len$ = 12						; size = 4
_end$ = 16						; size = 1
_end2$ = 20						; size = 1
_end3$ = 24						; size = 1
_htmlDecodeEntities PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??htmlDecodeEntities@@9@9, 0
	jne	SHORT $LN4@htmlDecode

; 55   :     static int deprecated = 0;
; 56   : 
; 57   :     if (!deprecated) {
; 58   :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 59   :                         "htmlDecodeEntities() deprecated function reached\n");
; 60   :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??htmlDecodeEntities@@9@9, 1

; 61   :     }
; 62   :     return (NULL);

	pop	esi
$LN4@htmlDecode:

; 63   : }

	xor	eax, eax
	ret	0
_htmlDecodeEntities ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlUpgradeOldNs
_TEXT	SEGMENT
_doc$ = 8						; size = 4
_xmlUpgradeOldNs PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlUpgradeOldNs@@9@9, 0
	jne	SHORT $LN2@xmlUpgrade

; 703  :     static int deprecated = 0;
; 704  : 
; 705  :     if (!deprecated) {
; 706  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 707  :                         "xmlUpgradeOldNs() deprecated function reached\n");
; 708  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlUpgradeOldNs@@9@9, 1
	pop	esi
$LN2@xmlUpgrade:

; 709  :     }
; 710  : }

	ret	0
_xmlUpgradeOldNs ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlHandleEntity
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_entity$ = 12						; size = 4
_xmlHandleEntity PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlHandleEntity@@9@9, 0
	jne	SHORT $LN2@xmlHandleE

; 659  :     static int deprecated = 0;
; 660  : 
; 661  :     if (!deprecated) {
; 662  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 663  :                         "xmlHandleEntity() deprecated function reached\n");
; 664  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlHandleEntity@@9@9, 1
	pop	esi
$LN2@xmlHandleE:

; 665  :     }
; 666  : }

	ret	0
_xmlHandleEntity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlDecodeEntities
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_len$ = 12						; size = 4
_what$ = 16						; size = 4
_end$ = 20						; size = 1
_end2$ = 24						; size = 1
_end3$ = 28						; size = 1
_xmlDecodeEntities PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlDecodeEntities@@9@9, 0
	jne	SHORT $LN4@xmlDecodeE

; 416  :     static int deprecated = 0;
; 417  : 
; 418  :     if (!deprecated) {
; 419  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 420  :                         "xmlDecodeEntities() deprecated function reached\n");
; 421  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlDecodeEntities@@9@9, 1

; 422  :     }
; 423  :     return (NULL);

	pop	esi
$LN4@xmlDecodeE:

; 424  : }

	xor	eax, eax
	ret	0
_xmlDecodeEntities ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNamespaceParseQName
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_prefix$ = 12						; size = 4
_xmlNamespaceParseQName PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlNamespaceParseQName@@9@9, 0
	jne	SHORT $LN4@xmlNamespa

; 480  : 
; 481  :     static int deprecated = 0;
; 482  : 
; 483  :     if (!deprecated) {
; 484  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 485  :                         "xmlNamespaceParseQName() deprecated function reached\n");
; 486  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNamespaceParseQName@@9@9, 1

; 487  :     }
; 488  :     return (NULL);

	pop	esi
$LN4@xmlNamespa:

; 489  : }

	xor	eax, eax
	ret	0
_xmlNamespaceParseQName ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlParserHandleReference
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlParserHandleReference PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlParserHandleReference@@9@9, 0
	jne	SHORT $LN2@xmlParserH

; 633  :     static int deprecated = 0;
; 634  : 
; 635  :     if (!deprecated) {
; 636  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 637  :                         "xmlParserHandleReference() deprecated function reached\n");
; 638  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlParserHandleReference@@9@9, 1
	pop	esi
$LN2@xmlParserH:

; 639  :     }
; 640  : 
; 641  :     return;
; 642  : }

	ret	0
_xmlParserHandleReference ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNamespaceParseNCName
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlNamespaceParseNCName PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlNamespaceParseNCName@@9@9, 0
	jne	SHORT $LN4@xmlNamespa

; 446  :     static int deprecated = 0;
; 447  : 
; 448  :     if (!deprecated) {
; 449  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 450  :                         "xmlNamespaceParseNCName() deprecated function reached\n");
; 451  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNamespaceParseNCName@@9@9, 1

; 452  :     }
; 453  :     return (NULL);

	pop	esi
$LN4@xmlNamespa:

; 454  : }

	xor	eax, eax
	ret	0
_xmlNamespaceParseNCName ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlScanName
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlScanName PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlScanName@@9@9, 0
	jne	SHORT $LN4@xmlScanNam

; 593  :     static int deprecated = 0;
; 594  : 
; 595  :     if (!deprecated) {
; 596  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 597  :                         "xmlScanName() deprecated function reached\n");
; 598  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlScanName@@9@9, 1

; 599  :     }
; 600  :     return (NULL);

	pop	esi
$LN4@xmlScanNam:

; 601  : }

	xor	eax, eax
	ret	0
_xmlScanName ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNamespaceParseNSDef
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlNamespaceParseNSDef PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlNamespaceParseNSDef@@9@9, 0
	jne	SHORT $LN4@xmlNamespa

; 510  :     static int deprecated = 0;
; 511  : 
; 512  :     if (!deprecated) {
; 513  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 514  :                         "xmlNamespaceParseNSDef() deprecated function reached\n");
; 515  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNamespaceParseNSDef@@9@9, 1

; 516  :     }
; 517  :     return (NULL);

	pop	esi
$LN4@xmlNamespa:

; 518  : }

	xor	eax, eax
	ret	0
_xmlNamespaceParseNSDef ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlParseNamespace
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlParseNamespace PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlParseNamespace@@9@9, 0
	jne	SHORT $LN2@xmlParseNa

; 561  :     static int deprecated = 0;
; 562  : 
; 563  :     if (!deprecated) {
; 564  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 565  :                         "xmlParseNamespace() deprecated function reached\n");
; 566  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlParseNamespace@@9@9, 1
	pop	esi
$LN2@xmlParseNa:

; 567  :     }
; 568  : }

	ret	0
_xmlParseNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlParseQuotedString
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlParseQuotedString PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlParseQuotedString@@9@9, 0
	jne	SHORT $LN4@xmlParseQu

; 533  :     static int deprecated = 0;
; 534  : 
; 535  :     if (!deprecated) {
; 536  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 537  :                         "xmlParseQuotedString() deprecated function reached\n");
; 538  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlParseQuotedString@@9@9, 1

; 539  :     }
; 540  :     return (NULL);

	pop	esi
$LN4@xmlParseQu:

; 541  : }

	xor	eax, eax
	ret	0
_xmlParseQuotedString ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _cdataBlock
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_value$ = 12						; size = 4
_len$ = 16						; size = 4
_cdataBlock PROC					; COMDAT

; 1336 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@cdataBlock

; 1337 :     DEPRECATED("cdataBlock")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0L@HKAOEGJH@cdataBlock@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@cdataBlock:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1339 : }

	pop	ebp

; 1338 :         xmlSAX2CDataBlock(ctx, value, len);

	jmp	_xmlSAX2CDataBlock
_cdataBlock ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _comment
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_value$ = 12						; size = 4
_comment PROC						; COMDAT

; 1320 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@comment

; 1321 :     DEPRECATED("comment")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_07GJGNEJFD@comment@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@comment:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1323 : }

	pop	ebp

; 1322 :         xmlSAX2Comment(ctx, value);

	jmp	_xmlSAX2Comment
_comment ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _namespaceDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_href$ = 12						; size = 4
_prefix$ = 16						; size = 4
_namespaceDecl PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@namespaceD

; 1307 :     DEPRECATED("namespaceDecl")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0O@BMLADFEG@namespaceDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 12					; 0000000cH
	inc	DWORD PTR _deprecated_v1_msg
	pop	esi

; 1308 : }

	ret	0
$LN4@namespaceD:

; 1307 :     DEPRECATED("namespaceDecl")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1308 : }

	ret	0
_namespaceDecl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _checkNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_namespace$ = 12					; size = 4
_checkNamespace PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@checkNames

; 1289 :     DEPRECATED("checkNamespace")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0P@HOABFNF@checkNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	inc	DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH

; 1290 :         return (0);
; 1291 : }

	xor	eax, eax
	pop	esi
	ret	0
$LN4@checkNames:

; 1289 :     DEPRECATED("checkNamespace")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1290 :         return (0);
; 1291 : }

	xor	eax, eax
	ret	0
_checkNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getNamespace PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@getNamespa

; 1269 :     DEPRECATED("getNamespace")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0N@IBOPMOJD@getNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	inc	DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH

; 1270 :         return (NULL);
; 1271 : }

	xor	eax, eax
	pop	esi
	ret	0
$LN4@getNamespa:

; 1269 :     DEPRECATED("getNamespace")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1270 :         return (NULL);
; 1271 : }

	xor	eax, eax
	ret	0
_getNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _setNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_setNamespace PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@setNamespa

; 1253 :     DEPRECATED("setNamespace")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0N@PFFBACNP@setNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 12					; 0000000cH
	inc	DWORD PTR _deprecated_v1_msg
	pop	esi

; 1254 : }

	ret	0
$LN4@setNamespa:

; 1253 :     DEPRECATED("setNamespace")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1254 : }

	ret	0
_setNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _globalNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_href$ = 12						; size = 4
_prefix$ = 16						; size = 4
_globalNamespace PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@globalName

; 1237 :     DEPRECATED("globalNamespace")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BA@HBAGMMIM@globalNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 12					; 0000000cH
	inc	DWORD PTR _deprecated_v1_msg
	pop	esi

; 1238 : }

	ret	0
$LN4@globalName:

; 1237 :     DEPRECATED("globalNamespace")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1238 : }

	ret	0
_globalNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _processingInstruction
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_target$ = 12						; size = 4
_data$ = 16						; size = 4
_processingInstruction PROC				; COMDAT

; 1218 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@processing

; 1219 :     DEPRECATED("processingInstruction")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BG@BKBGIBPJ@processingInstruction@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@processing:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1221 : }

	pop	ebp

; 1220 :         xmlSAX2ProcessingInstruction(ctx, target, data);

	jmp	_xmlSAX2ProcessingInstruction
_processingInstruction ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _ignorableWhitespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_ch$ = 12						; size = 4
_len$ = 16						; size = 4
_ignorableWhitespace PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@ignorableW

; 1203 :     DEPRECATED("ignorableWhitespace")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BE@JAKNEPAP@ignorableWhitespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 12					; 0000000cH
	inc	DWORD PTR _deprecated_v1_msg
	pop	esi

; 1204 : }

	ret	0
$LN4@ignorableW:

; 1203 :     DEPRECATED("ignorableWhitespace")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1204 : }

	ret	0
_ignorableWhitespace ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _characters
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_ch$ = 12						; size = 4
_len$ = 16						; size = 4
_characters PROC					; COMDAT

; 1183 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@characters

; 1184 :     DEPRECATED("characters")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0L@MKHPBEDE@characters@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@characters:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1186 : }

	pop	ebp

; 1185 :         xmlSAX2Characters(ctx, ch, len);

	jmp	_xmlSAX2Characters
_characters ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _reference
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_reference PROC						; COMDAT

; 1167 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@reference

; 1168 :     DEPRECATED("reference")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_09KJONPCOF@reference@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@reference:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1170 : }

	pop	ebp

; 1169 :         xmlSAX2Reference(ctx, name);

	jmp	_xmlSAX2Reference
_reference ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _endElement
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_endElement PROC					; COMDAT

; 1152 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@endElement

; 1153 :     DEPRECATED("endElement")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0L@GKEIAKOG@endElement@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@endElement:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1155 : }

	pop	ebp

; 1154 :     xmlSAX2EndElement(ctx, name);

	jmp	_xmlSAX2EndElement
_endElement ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _startElement
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_fullname$ = 12						; size = 4
_atts$ = 16						; size = 4
_startElement PROC					; COMDAT

; 1138 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1140 : }

	pop	ebp

; 1139 :     xmlSAX2StartElement(ctx, fullname, atts);

	jmp	_xmlSAX2StartElement
_startElement ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _attribute
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_fullname$ = 12						; size = 4
_value$ = 16						; size = 4
_attribute PROC						; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@attribute

; 1124 :     DEPRECATED("attribute")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_09HGIEBAJ@attribute@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 12					; 0000000cH
	inc	DWORD PTR _deprecated_v1_msg
	pop	esi

; 1125 : }

	ret	0
$LN4@attribute:

; 1124 :     DEPRECATED("attribute")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1125 : }

	ret	0
_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _endDocument
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_endDocument PROC					; COMDAT

; 1102 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@endDocumen

; 1103 :     DEPRECATED("endDocument")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0M@OBDBPPLP@endDocument@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@endDocumen:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1105 : }

	pop	ebp

; 1104 :         xmlSAX2EndDocument(ctx);

	jmp	_xmlSAX2EndDocument
_endDocument ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _startDocument
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_startDocument PROC					; COMDAT

; 1087 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1091 : }

	pop	ebp

; 1088 :    /* don't be too painful for glade users */
; 1089 :    /*  DEPRECATED("startDocument") */
; 1090 :         xmlSAX2StartDocument(ctx);

	jmp	_xmlSAX2StartDocument
_startDocument ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _unparsedEntityDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_publicId$ = 16						; size = 4
_systemId$ = 20						; size = 4
_notationName$ = 24					; size = 4
_unparsedEntityDecl PROC				; COMDAT

; 1056 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@unparsedEn

; 1057 :     DEPRECATED("unparsedEntityDecl")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BD@HCBGHJEF@unparsedEntityDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@unparsedEn:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1059 :                                   notationName);
; 1060 : }

	pop	ebp

; 1058 :         xmlSAX2UnparsedEntityDecl(ctx, name, publicId, systemId,

	jmp	_xmlSAX2UnparsedEntityDecl
_unparsedEntityDecl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _notationDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_publicId$ = 16						; size = 4
_systemId$ = 20						; size = 4
_notationDecl PROC					; COMDAT

; 1036 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@notationDe

; 1037 :     DEPRECATED("notationDecl")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0N@CBDPABNA@notationDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@notationDe:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1039 : }

	pop	ebp

; 1038 :         xmlSAX2NotationDecl(ctx, name, publicId, systemId);

	jmp	_xmlSAX2NotationDecl
_notationDecl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _elementDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_type$ = 16						; size = 4
_content$ = 20						; size = 4
_elementDecl PROC					; COMDAT

; 1018 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@elementDec

; 1019 :     DEPRECATED("elementDecl")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0M@FJEPBGK@elementDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@elementDec:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1021 : }

	pop	ebp

; 1020 :         xmlSAX2ElementDecl(ctx, name, type, content);

	jmp	_xmlSAX2ElementDecl
_elementDecl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _attributeDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_elem$ = 12						; size = 4
_fullname$ = 16						; size = 4
_type$ = 20						; size = 4
_def$ = 24						; size = 4
_defaultValue$ = 28					; size = 4
_tree$ = 32						; size = 4
_attributeDecl PROC					; COMDAT

; 999  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@attributeD

; 1000 :     DEPRECATED("attributeDecl")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0O@BNECHEBL@attributeDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@attributeD:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1002 :                              tree);
; 1003 : }

	pop	ebp

; 1001 :         xmlSAX2AttributeDecl(ctx, elem, fullname, type, def, defaultValue,

	jmp	_xmlSAX2AttributeDecl
_attributeDecl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _entityDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_type$ = 16						; size = 4
_publicId$ = 20						; size = 4
_systemId$ = 24						; size = 4
_content$ = 28						; size = 4
_entityDecl PROC					; COMDAT

; 977  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@entityDecl

; 978  :     DEPRECATED("entityDecl")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0L@OGGGJLI@entityDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@entityDecl:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 980  : }

	pop	ebp

; 979  :         xmlSAX2EntityDecl(ctx, name, type, publicId, systemId, content);

	jmp	_xmlSAX2EntityDecl
_entityDecl ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _resolveEntity
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_publicId$ = 12						; size = 4
_systemId$ = 16						; size = 4
_resolveEntity PROC					; COMDAT

; 921  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@resolveEnt

; 922  :     DEPRECATED("resolveEntity")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0O@LFLMJBFI@resolveEntity@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@resolveEnt:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 924  : }

	pop	ebp

; 923  :         return (xmlSAX2ResolveEntity(ctx, publicId, systemId));

	jmp	_xmlSAX2ResolveEntity
_resolveEntity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getParameterEntity
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_getParameterEntity PROC				; COMDAT

; 955  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@getParamet

; 956  :     DEPRECATED("getParameterEntity")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BD@KINJKNIJ@getParameterEntity@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@getParamet:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 958  : }

	pop	ebp

; 957  :         return (xmlSAX2GetParameterEntity(ctx, name));

	jmp	_xmlSAX2GetParameterEntity
_getParameterEntity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getEntity
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_getEntity PROC						; COMDAT

; 938  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@getEntity

; 939  :     DEPRECATED("getEntity")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_09NCBEBLEA@getEntity@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@getEntity:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 941  : }

	pop	ebp

; 940  :         return (xmlSAX2GetEntity(ctx, name));

	jmp	_xmlSAX2GetEntity
_getEntity ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _externalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_ExternalID$ = 16					; size = 4
_SystemID$ = 20						; size = 4
_externalSubset PROC					; COMDAT

; 898  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@externalSu

; 899  :     DEPRECATED("externalSubset")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0P@DJMGKJNF@externalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@externalSu:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 901  : }

	pop	ebp

; 900  :         xmlSAX2ExternalSubset(ctx, name, ExternalID, SystemID);

	jmp	_xmlSAX2ExternalSubset
_externalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _internalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_ExternalID$ = 16					; size = 4
_SystemID$ = 20						; size = 4
_internalSubset PROC					; COMDAT

; 880  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@internalSu

; 881  :     DEPRECATED("internalSubset")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0P@OCEDHHOL@internalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@internalSu:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 883  : }

	pop	ebp

; 882  :         xmlSAX2InternalSubset(ctx, name, ExternalID, SystemID);

	jmp	_xmlSAX2InternalSubset
_internalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _hasExternalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_hasExternalSubset PROC					; COMDAT

; 862  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@hasExterna

; 863  :     DEPRECATED("hasExternalSubset")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BC@PDLMKGBL@hasExternalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@hasExterna:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 865  : }

	pop	ebp

; 864  :         return (xmlSAX2HasExternalSubset(ctx));

	jmp	_xmlSAX2HasExternalSubset
_hasExternalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _hasInternalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_hasInternalSubset PROC					; COMDAT

; 846  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@hasInterna

; 847  :     DEPRECATED("hasInternalSubset")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BC@CIDJHICF@hasInternalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@hasInterna:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 849  : }

	pop	ebp

; 848  :         return (xmlSAX2HasInternalSubset(ctx));

	jmp	_xmlSAX2HasInternalSubset
_hasInternalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _isStandalone
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_isStandalone PROC					; COMDAT

; 830  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@isStandalo

; 831  :     DEPRECATED("isStandalone")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0N@GDKLDDLO@isStandalone@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@isStandalo:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 833  : }

	pop	ebp

; 832  :         return (xmlSAX2IsStandalone(ctx));

	jmp	_xmlSAX2IsStandalone
_isStandalone ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getColumnNumber
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getColumnNumber PROC					; COMDAT

; 814  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@getColumnN

; 815  :     DEPRECATED("getColumnNumber")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BA@MBKHJKLG@getColumnNumber@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@getColumnN:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 817  : }

	pop	ebp

; 816  :         return (xmlSAX2GetColumnNumber(ctx));

	jmp	_xmlSAX2GetColumnNumber
_getColumnNumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getLineNumber
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getLineNumber PROC					; COMDAT

; 798  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@getLineNum

; 799  :     DEPRECATED("getLineNumber")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0O@OCINCMPB@getLineNumber@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@getLineNum:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 801  : }

	pop	ebp

; 800  :         return (xmlSAX2GetLineNumber(ctx));

	jmp	_xmlSAX2GetLineNumber
_getLineNumber ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _setDocumentLocator
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_loc$ = 12						; size = 4
_setDocumentLocator PROC				; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN4@setDocumen

; 1075 :     DEPRECATED("setDocumentLocator")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0BD@DHECJBOB@setDocumentLocator@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 12					; 0000000cH
	inc	DWORD PTR _deprecated_v1_msg
	pop	esi

; 1076 : }

	ret	0
$LN4@setDocumen:

; 1075 :     DEPRECATED("setDocumentLocator")

	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 1076 : }

	ret	0
_setDocumentLocator ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getSystemId
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getSystemId PROC					; COMDAT

; 782  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@getSystemI

; 783  :     DEPRECATED("getSystemId")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0M@FFHGBOOJ@getSystemId@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@getSystemI:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 785  : }

	pop	ebp

; 784  :         return (xmlSAX2GetSystemId(ctx));

	jmp	_xmlSAX2GetSystemId
_getSystemId ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getPublicId
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getPublicId PROC					; COMDAT

; 765  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _deprecated_v1_msg
	test	eax, eax
	jne	SHORT $LN2@getPublicI

; 766  :     DEPRECATED("getPublicId")

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0M@DAFHLKNN@getPublicId@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	mov	eax, DWORD PTR _deprecated_v1_msg
	add	esp, 12					; 0000000cH
	pop	esi
$LN2@getPublicI:
	inc	eax
	mov	DWORD PTR _deprecated_v1_msg, eax

; 768  : }

	pop	ebp

; 767  :         return (xmlSAX2GetPublicId(ctx));

	jmp	_xmlSAX2GetPublicId
_getPublicId ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlSetFeature
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_xmlSetFeature PROC					; COMDAT

; 282  : {

	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	edi, DWORD PTR _ctxt$[ebp]
	test	edi, edi
	je	$LN3@xmlSetFeat

; 283  :     if ((ctxt == NULL) || (name == NULL) || (value == NULL))

	mov	esi, DWORD PTR _name$[ebp]
	test	esi, esi
	je	$LN3@xmlSetFeat
	mov	ebx, DWORD PTR _value$[ebp]
	test	ebx, ebx
	je	$LN3@xmlSetFeat

; 284  :         return (-1);
; 285  : 
; 286  :     if (!strcmp(name, "validate")) {

	mov	ecx, OFFSET ??_C@_08EBLJJHKN@validate@
	mov	eax, esi
$LL88@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN89@xmlSetFeat
	test	dl, dl
	je	SHORT $LN90@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN89@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL88@xmlSetFeat
$LN90@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN91@xmlSetFeat
$LN89@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN91@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN4@xmlSetFeat

; 287  :         int newvalidate = *((int *) value);
; 288  : 
; 289  :         if ((!ctxt->validate) && (newvalidate != 0)) {

	cmp	DWORD PTR [edi+104], 0
	mov	eax, DWORD PTR [ebx]
	jne	SHORT $LN6@xmlSetFeat
	test	eax, eax
	je	SHORT $LN6@xmlSetFeat

; 290  :             if (ctxt->vctxt.warning == NULL)

	cmp	DWORD PTR [edi+116], 0
	jne	SHORT $LN7@xmlSetFeat

; 291  :                 ctxt->vctxt.warning = xmlParserValidityWarning;

	mov	DWORD PTR [edi+116], OFFSET _xmlParserValidityWarning
$LN7@xmlSetFeat:

; 292  :             if (ctxt->vctxt.error == NULL)

	cmp	DWORD PTR [edi+112], 0
	jne	SHORT $LN8@xmlSetFeat

; 293  :                 ctxt->vctxt.error = xmlParserValidityError;

	mov	DWORD PTR [edi+112], OFFSET _xmlParserValidityError
$LN8@xmlSetFeat:

; 294  :             ctxt->vctxt.nodeMax = 0;

	mov	DWORD PTR [edi+128], 0
$LN6@xmlSetFeat:

; 295  :         }
; 296  :         ctxt->validate = newvalidate;

	mov	DWORD PTR [edi+104], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN4@xmlSetFeat:

; 297  :     } else if (!strcmp(name, "keep blanks")) {

	mov	ecx, OFFSET ??_C@_0M@JOFGOHIP@keep?5blanks@
	mov	eax, esi
$LL92@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN93@xmlSetFeat
	test	dl, dl
	je	SHORT $LN94@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN93@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL92@xmlSetFeat
$LN94@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN95@xmlSetFeat
$LN93@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN95@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN9@xmlSetFeat

; 298  :         ctxt->keepBlanks = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+208], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN9@xmlSetFeat:

; 299  :     } else if (!strcmp(name, "disable SAX")) {

	mov	ecx, OFFSET ??_C@_0M@EPCDMNHL@disable?5SAX@
	mov	eax, esi
$LL96@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN97@xmlSetFeat
	test	dl, dl
	je	SHORT $LN98@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN97@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL96@xmlSetFeat
$LN98@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN99@xmlSetFeat
$LN97@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN99@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN11@xmlSetFeat

; 300  :         ctxt->disableSAX = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+212], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN11@xmlSetFeat:

; 301  :     } else if (!strcmp(name, "fetch external entities")) {

	mov	ecx, OFFSET ??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
	mov	eax, esi
$LL100@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN101@xmlSetFeat
	test	dl, dl
	je	SHORT $LN102@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN101@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL100@xmlSetFeat
$LN102@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN103@xmlSetFeat
$LN101@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN103@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN13@xmlSetFeat

; 302  :         ctxt->loadsubset = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+276], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN13@xmlSetFeat:

; 303  :     } else if (!strcmp(name, "substitute entities")) {

	mov	ecx, OFFSET ??_C@_0BE@MFJOLEGC@substitute?5entities@
	mov	eax, esi
	npad	1
$LL104@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN105@xmlSetFeat
	test	dl, dl
	je	SHORT $LN106@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN105@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL104@xmlSetFeat
$LN106@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN107@xmlSetFeat
$LN105@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN107@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN15@xmlSetFeat

; 304  :         ctxt->replaceEntities = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+16], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN15@xmlSetFeat:

; 305  :     } else if (!strcmp(name, "gather line info")) {

	mov	ecx, OFFSET ??_C@_0BB@FNGHLMDK@gather?5line?5info@
	mov	eax, esi
	npad	4
$LL108@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN109@xmlSetFeat
	test	dl, dl
	je	SHORT $LN110@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN109@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL108@xmlSetFeat
$LN110@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN111@xmlSetFeat
$LN109@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN111@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN17@xmlSetFeat

; 306  :         ctxt->record_info = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+68], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN17@xmlSetFeat:

; 307  :     } else if (!strcmp(name, "user data")) {

	mov	ecx, OFFSET ??_C@_09OBFNJHCP@user?5data@
	mov	eax, esi
	npad	4
$LL112@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN113@xmlSetFeat
	test	dl, dl
	je	SHORT $LN114@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN113@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL112@xmlSetFeat
$LN114@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN115@xmlSetFeat
$LN113@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN115@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN19@xmlSetFeat

; 308  :         ctxt->userData = *((void **) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+4], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN19@xmlSetFeat:

; 309  :     } else if (!strcmp(name, "is html")) {

	mov	ecx, OFFSET ??_C@_07ELANCDBJ@is?5html@
	mov	eax, esi
	npad	4
$LL116@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN117@xmlSetFeat
	test	dl, dl
	je	SHORT $LN118@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN117@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL116@xmlSetFeat
$LN118@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN119@xmlSetFeat
$LN117@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN119@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN21@xmlSetFeat

; 310  :         ctxt->html = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+32], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN21@xmlSetFeat:

; 311  :     } else if (!strcmp(name, "is standalone")) {

	mov	ecx, OFFSET ??_C@_0O@NMMOLLEF@is?5standalone@
	mov	eax, esi
	npad	4
$LL120@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN121@xmlSetFeat
	test	dl, dl
	je	SHORT $LN122@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN121@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL120@xmlSetFeat
$LN122@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN123@xmlSetFeat
$LN121@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN123@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN23@xmlSetFeat

; 312  :         ctxt->standalone = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+28], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN23@xmlSetFeat:

; 313  :     } else if (!strcmp(name, "document")) {

	mov	ecx, OFFSET ??_C@_08JEEDKNPB@document@
	mov	eax, esi
	npad	4
$LL124@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN125@xmlSetFeat
	test	dl, dl
	je	SHORT $LN126@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN125@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL124@xmlSetFeat
$LN126@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN127@xmlSetFeat
$LN125@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN127@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN25@xmlSetFeat

; 314  :         ctxt->myDoc = *((xmlDocPtr *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+8], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN25@xmlSetFeat:

; 315  :     } else if (!strcmp(name, "is well formed")) {

	mov	ecx, OFFSET ??_C@_0P@NEKMCKKP@is?5well?5formed@
	mov	eax, esi
	npad	4
$LL128@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN129@xmlSetFeat
	test	dl, dl
	je	SHORT $LN130@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN129@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL128@xmlSetFeat
$LN130@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN131@xmlSetFeat
$LN129@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN131@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN27@xmlSetFeat

; 316  :         ctxt->wellFormed = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+12], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN27@xmlSetFeat:

; 317  :     } else if (!strcmp(name, "is valid")) {

	mov	ecx, OFFSET ??_C@_08EKBKNFNH@is?5valid@
	mov	eax, esi
	npad	4
$LL132@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN133@xmlSetFeat
	test	dl, dl
	je	SHORT $LN134@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN133@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL132@xmlSetFeat
$LN134@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN135@xmlSetFeat
$LN133@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN135@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN29@xmlSetFeat

; 318  :         ctxt->valid = *((int *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi+100], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN29@xmlSetFeat:

; 319  :     } else if (!strcmp(name, "SAX block")) {

	mov	ecx, OFFSET ??_C@_09HIOCHIDE@SAX?5block@
	mov	eax, esi
	npad	4
$LL136@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN137@xmlSetFeat
	test	dl, dl
	je	SHORT $LN138@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN137@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL136@xmlSetFeat
$LN138@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN139@xmlSetFeat
$LN137@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN139@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN31@xmlSetFeat

; 320  :         ctxt->sax = *((xmlSAXHandlerPtr *) value);

	mov	eax, DWORD PTR [ebx]
	mov	DWORD PTR [edi], eax

; 382  :     } else {
; 383  :         return (-1);
; 384  :     }
; 385  :     return (0);

	xor	eax, eax
	pop	edi

; 386  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN31@xmlSetFeat:

; 321  :     } else if (!strcmp(name, "SAX function internalSubset")) {

	mov	ecx, OFFSET ??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
	mov	eax, esi
	npad	5
$LL140@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN141@xmlSetFeat
	test	dl, dl
	je	SHORT $LN142@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN141@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL140@xmlSetFeat
$LN142@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN143@xmlSetFeat
$LN141@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN143@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN33@xmlSetFeat

; 322  :         ctxt->sax->internalSubset = *((internalSubsetSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN33@xmlSetFeat:

; 323  :     } else if (!strcmp(name, "SAX function isStandalone")) {

	mov	ecx, OFFSET ??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
	mov	eax, esi
	npad	3
$LL144@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN145@xmlSetFeat
	test	dl, dl
	je	SHORT $LN146@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN145@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL144@xmlSetFeat
$LN146@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN147@xmlSetFeat
$LN145@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN147@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN35@xmlSetFeat

; 324  :         ctxt->sax->isStandalone = *((isStandaloneSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+4], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN35@xmlSetFeat:

; 325  :     } else if (!strcmp(name, "SAX function hasInternalSubset")) {

	mov	ecx, OFFSET ??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
	mov	eax, esi
	npad	2
$LL148@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN149@xmlSetFeat
	test	dl, dl
	je	SHORT $LN150@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN149@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL148@xmlSetFeat
$LN150@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN151@xmlSetFeat
$LN149@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN151@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN37@xmlSetFeat

; 326  :         ctxt->sax->hasInternalSubset =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+8], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN37@xmlSetFeat:

; 327  :             *((hasInternalSubsetSAXFunc *) value);
; 328  :     } else if (!strcmp(name, "SAX function hasExternalSubset")) {

	mov	ecx, OFFSET ??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
	mov	eax, esi
	npad	2
$LL152@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN153@xmlSetFeat
	test	dl, dl
	je	SHORT $LN154@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN153@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL152@xmlSetFeat
$LN154@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN155@xmlSetFeat
$LN153@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN155@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN39@xmlSetFeat

; 329  :         ctxt->sax->hasExternalSubset =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+12], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN39@xmlSetFeat:

; 330  :             *((hasExternalSubsetSAXFunc *) value);
; 331  :     } else if (!strcmp(name, "SAX function resolveEntity")) {

	mov	ecx, OFFSET ??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
	mov	eax, esi
	npad	2
$LL156@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN157@xmlSetFeat
	test	dl, dl
	je	SHORT $LN158@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN157@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL156@xmlSetFeat
$LN158@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN159@xmlSetFeat
$LN157@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN159@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN41@xmlSetFeat

; 332  :         ctxt->sax->resolveEntity = *((resolveEntitySAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+16], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN41@xmlSetFeat:

; 333  :     } else if (!strcmp(name, "SAX function getEntity")) {

	mov	ecx, OFFSET ??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
	mov	eax, esi
	npad	2
$LL160@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN161@xmlSetFeat
	test	dl, dl
	je	SHORT $LN162@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN161@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL160@xmlSetFeat
$LN162@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN163@xmlSetFeat
$LN161@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN163@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN43@xmlSetFeat

; 334  :         ctxt->sax->getEntity = *((getEntitySAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+20], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN43@xmlSetFeat:

; 335  :     } else if (!strcmp(name, "SAX function entityDecl")) {

	mov	ecx, OFFSET ??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
	mov	eax, esi
	npad	2
$LL164@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN165@xmlSetFeat
	test	dl, dl
	je	SHORT $LN166@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN165@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL164@xmlSetFeat
$LN166@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN167@xmlSetFeat
$LN165@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN167@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN45@xmlSetFeat

; 336  :         ctxt->sax->entityDecl = *((entityDeclSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+24], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN45@xmlSetFeat:

; 337  :     } else if (!strcmp(name, "SAX function notationDecl")) {

	mov	ecx, OFFSET ??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
	mov	eax, esi
	npad	2
$LL168@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN169@xmlSetFeat
	test	dl, dl
	je	SHORT $LN170@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN169@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL168@xmlSetFeat
$LN170@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN171@xmlSetFeat
$LN169@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN171@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN47@xmlSetFeat

; 338  :         ctxt->sax->notationDecl = *((notationDeclSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+28], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN47@xmlSetFeat:

; 339  :     } else if (!strcmp(name, "SAX function attributeDecl")) {

	mov	ecx, OFFSET ??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
	mov	eax, esi
	npad	2
$LL172@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN173@xmlSetFeat
	test	dl, dl
	je	SHORT $LN174@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN173@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL172@xmlSetFeat
$LN174@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN175@xmlSetFeat
$LN173@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN175@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN49@xmlSetFeat

; 340  :         ctxt->sax->attributeDecl = *((attributeDeclSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+32], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN49@xmlSetFeat:

; 341  :     } else if (!strcmp(name, "SAX function elementDecl")) {

	mov	ecx, OFFSET ??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
	mov	eax, esi
	npad	2
$LL176@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN177@xmlSetFeat
	test	dl, dl
	je	SHORT $LN178@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN177@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL176@xmlSetFeat
$LN178@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN179@xmlSetFeat
$LN177@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN179@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN51@xmlSetFeat

; 342  :         ctxt->sax->elementDecl = *((elementDeclSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+36], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN51@xmlSetFeat:

; 343  :     } else if (!strcmp(name, "SAX function unparsedEntityDecl")) {

	mov	ecx, OFFSET ??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
	mov	eax, esi
	npad	2
$LL180@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN181@xmlSetFeat
	test	dl, dl
	je	SHORT $LN182@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN181@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL180@xmlSetFeat
$LN182@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN183@xmlSetFeat
$LN181@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN183@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN53@xmlSetFeat

; 344  :         ctxt->sax->unparsedEntityDecl =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+40], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN53@xmlSetFeat:

; 345  :             *((unparsedEntityDeclSAXFunc *) value);
; 346  :     } else if (!strcmp(name, "SAX function setDocumentLocator")) {

	mov	ecx, OFFSET ??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
	mov	eax, esi
	npad	2
$LL184@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN185@xmlSetFeat
	test	dl, dl
	je	SHORT $LN186@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN185@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL184@xmlSetFeat
$LN186@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN187@xmlSetFeat
$LN185@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN187@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN55@xmlSetFeat

; 347  :         ctxt->sax->setDocumentLocator =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+44], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN55@xmlSetFeat:

; 348  :             *((setDocumentLocatorSAXFunc *) value);
; 349  :     } else if (!strcmp(name, "SAX function startDocument")) {

	mov	ecx, OFFSET ??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
	mov	eax, esi
	npad	2
$LL188@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN189@xmlSetFeat
	test	dl, dl
	je	SHORT $LN190@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN189@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL188@xmlSetFeat
$LN190@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN191@xmlSetFeat
$LN189@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN191@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN57@xmlSetFeat

; 350  :         ctxt->sax->startDocument = *((startDocumentSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+48], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN57@xmlSetFeat:

; 351  :     } else if (!strcmp(name, "SAX function endDocument")) {

	mov	ecx, OFFSET ??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
	mov	eax, esi
	npad	2
$LL192@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN193@xmlSetFeat
	test	dl, dl
	je	SHORT $LN194@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN193@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL192@xmlSetFeat
$LN194@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN195@xmlSetFeat
$LN193@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN195@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN59@xmlSetFeat

; 352  :         ctxt->sax->endDocument = *((endDocumentSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+52], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN59@xmlSetFeat:

; 353  :     } else if (!strcmp(name, "SAX function startElement")) {

	mov	ecx, OFFSET ??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
	mov	eax, esi
	npad	2
$LL196@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN197@xmlSetFeat
	test	dl, dl
	je	SHORT $LN198@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN197@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL196@xmlSetFeat
$LN198@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN199@xmlSetFeat
$LN197@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN199@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN61@xmlSetFeat

; 354  :         ctxt->sax->startElement = *((startElementSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+56], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN61@xmlSetFeat:

; 355  :     } else if (!strcmp(name, "SAX function endElement")) {

	mov	ecx, OFFSET ??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
	mov	eax, esi
	npad	2
$LL200@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN201@xmlSetFeat
	test	dl, dl
	je	SHORT $LN202@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN201@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL200@xmlSetFeat
$LN202@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN203@xmlSetFeat
$LN201@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN203@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN63@xmlSetFeat

; 356  :         ctxt->sax->endElement = *((endElementSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+60], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN63@xmlSetFeat:

; 357  :     } else if (!strcmp(name, "SAX function reference")) {

	mov	ecx, OFFSET ??_C@_0BH@COKKFLJA@SAX?5function?5reference@
	mov	eax, esi
	npad	2
$LL204@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN205@xmlSetFeat
	test	dl, dl
	je	SHORT $LN206@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN205@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL204@xmlSetFeat
$LN206@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN207@xmlSetFeat
$LN205@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN207@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN65@xmlSetFeat

; 358  :         ctxt->sax->reference = *((referenceSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+64], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN65@xmlSetFeat:

; 359  :     } else if (!strcmp(name, "SAX function characters")) {

	mov	ecx, OFFSET ??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
	mov	eax, esi
	npad	2
$LL208@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN209@xmlSetFeat
	test	dl, dl
	je	SHORT $LN210@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN209@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL208@xmlSetFeat
$LN210@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN211@xmlSetFeat
$LN209@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN211@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN67@xmlSetFeat

; 360  :         ctxt->sax->characters = *((charactersSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+68], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN67@xmlSetFeat:

; 361  :     } else if (!strcmp(name, "SAX function ignorableWhitespace")) {

	mov	ecx, OFFSET ??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
	mov	eax, esi
	npad	2
$LL212@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN213@xmlSetFeat
	test	dl, dl
	je	SHORT $LN214@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN213@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL212@xmlSetFeat
$LN214@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN215@xmlSetFeat
$LN213@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN215@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN69@xmlSetFeat

; 362  :         ctxt->sax->ignorableWhitespace =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+72], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN69@xmlSetFeat:

; 363  :             *((ignorableWhitespaceSAXFunc *) value);
; 364  :     } else if (!strcmp(name, "SAX function processingInstruction")) {

	mov	ecx, OFFSET ??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
	mov	eax, esi
	npad	2
$LL216@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN217@xmlSetFeat
	test	dl, dl
	je	SHORT $LN218@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN217@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL216@xmlSetFeat
$LN218@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN219@xmlSetFeat
$LN217@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN219@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN71@xmlSetFeat

; 365  :         ctxt->sax->processingInstruction =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+76], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN71@xmlSetFeat:

; 366  :             *((processingInstructionSAXFunc *) value);
; 367  :     } else if (!strcmp(name, "SAX function comment")) {

	mov	ecx, OFFSET ??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
	mov	eax, esi
	npad	2
$LL220@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN221@xmlSetFeat
	test	dl, dl
	je	SHORT $LN222@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN221@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL220@xmlSetFeat
$LN222@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN223@xmlSetFeat
$LN221@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN223@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN73@xmlSetFeat

; 368  :         ctxt->sax->comment = *((commentSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+80], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN73@xmlSetFeat:

; 369  :     } else if (!strcmp(name, "SAX function warning")) {

	mov	ecx, OFFSET ??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
	mov	eax, esi
	npad	2
$LL224@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN225@xmlSetFeat
	test	dl, dl
	je	SHORT $LN226@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN225@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL224@xmlSetFeat
$LN226@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN227@xmlSetFeat
$LN225@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN227@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN75@xmlSetFeat

; 370  :         ctxt->sax->warning = *((warningSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+84], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN75@xmlSetFeat:

; 371  :     } else if (!strcmp(name, "SAX function error")) {

	mov	ecx, OFFSET ??_C@_0BD@DNENFEEM@SAX?5function?5error@
	mov	eax, esi
	npad	2
$LL228@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN229@xmlSetFeat
	test	dl, dl
	je	SHORT $LN230@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN229@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL228@xmlSetFeat
$LN230@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN231@xmlSetFeat
$LN229@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN231@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN77@xmlSetFeat

; 372  :         ctxt->sax->error = *((errorSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+88], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN77@xmlSetFeat:

; 373  :     } else if (!strcmp(name, "SAX function fatalError")) {

	mov	ecx, OFFSET ??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
	mov	eax, esi
	npad	2
$LL232@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN233@xmlSetFeat
	test	dl, dl
	je	SHORT $LN234@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN233@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL232@xmlSetFeat
$LN234@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN235@xmlSetFeat
$LN233@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN235@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN79@xmlSetFeat

; 374  :         ctxt->sax->fatalError = *((fatalErrorSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+92], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN79@xmlSetFeat:

; 375  :     } else if (!strcmp(name, "SAX function getParameterEntity")) {

	mov	ecx, OFFSET ??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
	mov	eax, esi
	npad	2
$LL236@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN237@xmlSetFeat
	test	dl, dl
	je	SHORT $LN238@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN237@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL236@xmlSetFeat
$LN238@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN239@xmlSetFeat
$LN237@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN239@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN81@xmlSetFeat

; 376  :         ctxt->sax->getParameterEntity =

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+96], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN81@xmlSetFeat:

; 377  :             *((getParameterEntitySAXFunc *) value);
; 378  :     } else if (!strcmp(name, "SAX function cdataBlock")) {

	mov	ecx, OFFSET ??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
	mov	eax, esi
	npad	2
$LL240@xmlSetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN241@xmlSetFeat
	test	dl, dl
	je	SHORT $LN242@xmlSetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN241@xmlSetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL240@xmlSetFeat
$LN242@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN243@xmlSetFeat
$LN241@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN243@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN83@xmlSetFeat

; 379  :         ctxt->sax->cdataBlock = *((cdataBlockSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+100], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN83@xmlSetFeat:

; 380  :     } else if (!strcmp(name, "SAX function externalSubset")) {

	mov	eax, OFFSET ??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
	npad	4
$LL244@xmlSetFeat:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN245@xmlSetFeat
	test	cl, cl
	je	SHORT $LN246@xmlSetFeat
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN245@xmlSetFeat
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL244@xmlSetFeat
$LN246@xmlSetFeat:
	xor	eax, eax
	jmp	SHORT $LN247@xmlSetFeat
$LN245@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
$LN247@xmlSetFeat:
	test	eax, eax
	jne	SHORT $LN3@xmlSetFeat

; 381  :         ctxt->sax->externalSubset = *((externalSubsetSAXFunc *) value);

	mov	ecx, DWORD PTR [edi]
	mov	eax, DWORD PTR [ebx]
	pop	edi

; 386  : }

	pop	esi
	mov	DWORD PTR [ecx+104], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN3@xmlSetFeat:
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
	pop	ebp
	ret	0
_xmlSetFeature ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlGetFeature
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_name$ = 12						; size = 4
_result$ = 16						; size = 4
_xmlGetFeature PROC					; COMDAT

; 173  : {

	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	push	edi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	edi, DWORD PTR _ctxt$[ebp]
	test	edi, edi
	je	$LN3@xmlGetFeat

; 174  :     if ((ctxt == NULL) || (name == NULL) || (result == NULL))

	mov	esi, DWORD PTR _name$[ebp]
	test	esi, esi
	je	$LN3@xmlGetFeat
	mov	ebx, DWORD PTR _result$[ebp]
	test	ebx, ebx
	je	$LN3@xmlGetFeat

; 175  :         return (-1);
; 176  : 
; 177  :     if (!strcmp(name, "validate")) {

	mov	ecx, OFFSET ??_C@_08EBLJJHKN@validate@
	mov	eax, esi
$LL85@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN86@xmlGetFeat
	test	dl, dl
	je	SHORT $LN87@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN86@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL85@xmlGetFeat
$LN87@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN88@xmlGetFeat
$LN86@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN88@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN4@xmlGetFeat

; 178  :         *((int *) result) = ctxt->validate;

	mov	eax, DWORD PTR [edi+104]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN4@xmlGetFeat:

; 179  :     } else if (!strcmp(name, "keep blanks")) {

	mov	ecx, OFFSET ??_C@_0M@JOFGOHIP@keep?5blanks@
	mov	eax, esi
$LL89@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN90@xmlGetFeat
	test	dl, dl
	je	SHORT $LN91@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN90@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL89@xmlGetFeat
$LN91@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN92@xmlGetFeat
$LN90@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN92@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN6@xmlGetFeat

; 180  :         *((int *) result) = ctxt->keepBlanks;

	mov	eax, DWORD PTR [edi+208]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN6@xmlGetFeat:

; 181  :     } else if (!strcmp(name, "disable SAX")) {

	mov	ecx, OFFSET ??_C@_0M@EPCDMNHL@disable?5SAX@
	mov	eax, esi
$LL93@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN94@xmlGetFeat
	test	dl, dl
	je	SHORT $LN95@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN94@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL93@xmlGetFeat
$LN95@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN96@xmlGetFeat
$LN94@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN96@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN8@xmlGetFeat

; 182  :         *((int *) result) = ctxt->disableSAX;

	mov	eax, DWORD PTR [edi+212]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN8@xmlGetFeat:

; 183  :     } else if (!strcmp(name, "fetch external entities")) {

	mov	ecx, OFFSET ??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
	mov	eax, esi
$LL97@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN98@xmlGetFeat
	test	dl, dl
	je	SHORT $LN99@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN98@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL97@xmlGetFeat
$LN99@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN100@xmlGetFeat
$LN98@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN100@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN10@xmlGetFeat

; 184  :         *((int *) result) = ctxt->loadsubset;

	mov	eax, DWORD PTR [edi+276]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN10@xmlGetFeat:

; 185  :     } else if (!strcmp(name, "substitute entities")) {

	mov	ecx, OFFSET ??_C@_0BE@MFJOLEGC@substitute?5entities@
	mov	eax, esi
$LL101@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN102@xmlGetFeat
	test	dl, dl
	je	SHORT $LN103@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN102@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL101@xmlGetFeat
$LN103@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN104@xmlGetFeat
$LN102@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN104@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN12@xmlGetFeat

; 186  :         *((int *) result) = ctxt->replaceEntities;

	mov	eax, DWORD PTR [edi+16]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN12@xmlGetFeat:

; 187  :     } else if (!strcmp(name, "gather line info")) {

	mov	ecx, OFFSET ??_C@_0BB@FNGHLMDK@gather?5line?5info@
	mov	eax, esi
	npad	3
$LL105@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN106@xmlGetFeat
	test	dl, dl
	je	SHORT $LN107@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN106@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL105@xmlGetFeat
$LN107@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN108@xmlGetFeat
$LN106@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN108@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN14@xmlGetFeat

; 188  :         *((int *) result) = ctxt->record_info;

	mov	eax, DWORD PTR [edi+68]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN14@xmlGetFeat:

; 189  :     } else if (!strcmp(name, "user data")) {

	mov	ecx, OFFSET ??_C@_09OBFNJHCP@user?5data@
	mov	eax, esi
	npad	4
$LL109@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN110@xmlGetFeat
	test	dl, dl
	je	SHORT $LN111@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN110@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL109@xmlGetFeat
$LN111@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN112@xmlGetFeat
$LN110@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN112@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN16@xmlGetFeat

; 190  :         *((void **) result) = ctxt->userData;

	mov	eax, DWORD PTR [edi+4]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN16@xmlGetFeat:

; 191  :     } else if (!strcmp(name, "is html")) {

	mov	ecx, OFFSET ??_C@_07ELANCDBJ@is?5html@
	mov	eax, esi
	npad	4
$LL113@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN114@xmlGetFeat
	test	dl, dl
	je	SHORT $LN115@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN114@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL113@xmlGetFeat
$LN115@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN116@xmlGetFeat
$LN114@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN116@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN18@xmlGetFeat

; 192  :         *((int *) result) = ctxt->html;

	mov	eax, DWORD PTR [edi+32]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN18@xmlGetFeat:

; 193  :     } else if (!strcmp(name, "is standalone")) {

	mov	ecx, OFFSET ??_C@_0O@NMMOLLEF@is?5standalone@
	mov	eax, esi
	npad	4
$LL117@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN118@xmlGetFeat
	test	dl, dl
	je	SHORT $LN119@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN118@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL117@xmlGetFeat
$LN119@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN120@xmlGetFeat
$LN118@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN120@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN20@xmlGetFeat

; 194  :         *((int *) result) = ctxt->standalone;

	mov	eax, DWORD PTR [edi+28]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN20@xmlGetFeat:

; 195  :     } else if (!strcmp(name, "document")) {

	mov	ecx, OFFSET ??_C@_08JEEDKNPB@document@
	mov	eax, esi
	npad	4
$LL121@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN122@xmlGetFeat
	test	dl, dl
	je	SHORT $LN123@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN122@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL121@xmlGetFeat
$LN123@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN124@xmlGetFeat
$LN122@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN124@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN22@xmlGetFeat

; 196  :         *((xmlDocPtr *) result) = ctxt->myDoc;

	mov	eax, DWORD PTR [edi+8]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN22@xmlGetFeat:

; 197  :     } else if (!strcmp(name, "is well formed")) {

	mov	ecx, OFFSET ??_C@_0P@NEKMCKKP@is?5well?5formed@
	mov	eax, esi
	npad	4
$LL125@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN126@xmlGetFeat
	test	dl, dl
	je	SHORT $LN127@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN126@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL125@xmlGetFeat
$LN127@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN128@xmlGetFeat
$LN126@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN128@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN24@xmlGetFeat

; 198  :         *((int *) result) = ctxt->wellFormed;

	mov	eax, DWORD PTR [edi+12]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN24@xmlGetFeat:

; 199  :     } else if (!strcmp(name, "is valid")) {

	mov	ecx, OFFSET ??_C@_08EKBKNFNH@is?5valid@
	mov	eax, esi
	npad	4
$LL129@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN130@xmlGetFeat
	test	dl, dl
	je	SHORT $LN131@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN130@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL129@xmlGetFeat
$LN131@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN132@xmlGetFeat
$LN130@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN132@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN26@xmlGetFeat

; 200  :         *((int *) result) = ctxt->valid;

	mov	eax, DWORD PTR [edi+100]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN26@xmlGetFeat:

; 201  :     } else if (!strcmp(name, "SAX block")) {

	mov	ecx, OFFSET ??_C@_09HIOCHIDE@SAX?5block@
	mov	eax, esi
	npad	4
$LL133@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN134@xmlGetFeat
	test	dl, dl
	je	SHORT $LN135@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN134@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL133@xmlGetFeat
$LN135@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN136@xmlGetFeat
$LN134@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN136@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN28@xmlGetFeat

; 202  :         *((xmlSAXHandlerPtr *) result) = ctxt->sax;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 264  :     } else {
; 265  :         return (-1);
; 266  :     }
; 267  :     return (0);

	mov	DWORD PTR [ebx], eax
	xor	eax, eax

; 268  : }

	pop	esi
	pop	ebx
	pop	ebp
	ret	0
$LN28@xmlGetFeat:

; 203  :     } else if (!strcmp(name, "SAX function internalSubset")) {

	mov	ecx, OFFSET ??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
	mov	eax, esi
	npad	5
$LL137@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN138@xmlGetFeat
	test	dl, dl
	je	SHORT $LN139@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN138@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL137@xmlGetFeat
$LN139@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN140@xmlGetFeat
$LN138@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN140@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN30@xmlGetFeat

; 204  :         *((internalSubsetSAXFunc *) result) = ctxt->sax->internalSubset;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN30@xmlGetFeat:

; 205  :     } else if (!strcmp(name, "SAX function isStandalone")) {

	mov	ecx, OFFSET ??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
	mov	eax, esi
	npad	3
$LL141@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN142@xmlGetFeat
	test	dl, dl
	je	SHORT $LN143@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN142@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL141@xmlGetFeat
$LN143@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN144@xmlGetFeat
$LN142@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN144@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN32@xmlGetFeat

; 206  :         *((isStandaloneSAXFunc *) result) = ctxt->sax->isStandalone;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN32@xmlGetFeat:

; 207  :     } else if (!strcmp(name, "SAX function hasInternalSubset")) {

	mov	ecx, OFFSET ??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
	mov	eax, esi
	npad	2
$LL145@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN146@xmlGetFeat
	test	dl, dl
	je	SHORT $LN147@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN146@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL145@xmlGetFeat
$LN147@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN148@xmlGetFeat
$LN146@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN148@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN34@xmlGetFeat

; 208  :         *((hasInternalSubsetSAXFunc *) result) =

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN34@xmlGetFeat:

; 209  :             ctxt->sax->hasInternalSubset;
; 210  :     } else if (!strcmp(name, "SAX function hasExternalSubset")) {

	mov	ecx, OFFSET ??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
	mov	eax, esi
	npad	2
$LL149@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN150@xmlGetFeat
	test	dl, dl
	je	SHORT $LN151@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN150@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL149@xmlGetFeat
$LN151@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN152@xmlGetFeat
$LN150@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN152@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN36@xmlGetFeat

; 211  :         *((hasExternalSubsetSAXFunc *) result) =

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN36@xmlGetFeat:

; 212  :             ctxt->sax->hasExternalSubset;
; 213  :     } else if (!strcmp(name, "SAX function resolveEntity")) {

	mov	ecx, OFFSET ??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
	mov	eax, esi
	npad	2
$LL153@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN154@xmlGetFeat
	test	dl, dl
	je	SHORT $LN155@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN154@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL153@xmlGetFeat
$LN155@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN156@xmlGetFeat
$LN154@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN156@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN38@xmlGetFeat

; 214  :         *((resolveEntitySAXFunc *) result) = ctxt->sax->resolveEntity;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+16]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN38@xmlGetFeat:

; 215  :     } else if (!strcmp(name, "SAX function getEntity")) {

	mov	ecx, OFFSET ??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
	mov	eax, esi
	npad	2
$LL157@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN158@xmlGetFeat
	test	dl, dl
	je	SHORT $LN159@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN158@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL157@xmlGetFeat
$LN159@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN160@xmlGetFeat
$LN158@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN160@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN40@xmlGetFeat

; 216  :         *((getEntitySAXFunc *) result) = ctxt->sax->getEntity;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+20]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN40@xmlGetFeat:

; 217  :     } else if (!strcmp(name, "SAX function entityDecl")) {

	mov	ecx, OFFSET ??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
	mov	eax, esi
	npad	2
$LL161@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN162@xmlGetFeat
	test	dl, dl
	je	SHORT $LN163@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN162@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL161@xmlGetFeat
$LN163@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN164@xmlGetFeat
$LN162@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN164@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN42@xmlGetFeat

; 218  :         *((entityDeclSAXFunc *) result) = ctxt->sax->entityDecl;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+24]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN42@xmlGetFeat:

; 219  :     } else if (!strcmp(name, "SAX function notationDecl")) {

	mov	ecx, OFFSET ??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
	mov	eax, esi
	npad	2
$LL165@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN166@xmlGetFeat
	test	dl, dl
	je	SHORT $LN167@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN166@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL165@xmlGetFeat
$LN167@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN168@xmlGetFeat
$LN166@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN168@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN44@xmlGetFeat

; 220  :         *((notationDeclSAXFunc *) result) = ctxt->sax->notationDecl;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+28]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN44@xmlGetFeat:

; 221  :     } else if (!strcmp(name, "SAX function attributeDecl")) {

	mov	ecx, OFFSET ??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
	mov	eax, esi
	npad	2
$LL169@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN170@xmlGetFeat
	test	dl, dl
	je	SHORT $LN171@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN170@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL169@xmlGetFeat
$LN171@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN172@xmlGetFeat
$LN170@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN172@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN46@xmlGetFeat

; 222  :         *((attributeDeclSAXFunc *) result) = ctxt->sax->attributeDecl;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+32]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN46@xmlGetFeat:

; 223  :     } else if (!strcmp(name, "SAX function elementDecl")) {

	mov	ecx, OFFSET ??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
	mov	eax, esi
	npad	2
$LL173@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN174@xmlGetFeat
	test	dl, dl
	je	SHORT $LN175@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN174@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL173@xmlGetFeat
$LN175@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN176@xmlGetFeat
$LN174@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN176@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN48@xmlGetFeat

; 224  :         *((elementDeclSAXFunc *) result) = ctxt->sax->elementDecl;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+36]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN48@xmlGetFeat:

; 225  :     } else if (!strcmp(name, "SAX function unparsedEntityDecl")) {

	mov	ecx, OFFSET ??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
	mov	eax, esi
	npad	2
$LL177@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN178@xmlGetFeat
	test	dl, dl
	je	SHORT $LN179@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN178@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL177@xmlGetFeat
$LN179@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN180@xmlGetFeat
$LN178@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN180@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN50@xmlGetFeat

; 226  :         *((unparsedEntityDeclSAXFunc *) result) =

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+40]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN50@xmlGetFeat:

; 227  :             ctxt->sax->unparsedEntityDecl;
; 228  :     } else if (!strcmp(name, "SAX function setDocumentLocator")) {

	mov	ecx, OFFSET ??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
	mov	eax, esi
	npad	2
$LL181@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN182@xmlGetFeat
	test	dl, dl
	je	SHORT $LN183@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN182@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL181@xmlGetFeat
$LN183@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN184@xmlGetFeat
$LN182@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN184@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN52@xmlGetFeat

; 229  :         *((setDocumentLocatorSAXFunc *) result) =

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+44]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN52@xmlGetFeat:

; 230  :             ctxt->sax->setDocumentLocator;
; 231  :     } else if (!strcmp(name, "SAX function startDocument")) {

	mov	ecx, OFFSET ??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
	mov	eax, esi
	npad	2
$LL185@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN186@xmlGetFeat
	test	dl, dl
	je	SHORT $LN187@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN186@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL185@xmlGetFeat
$LN187@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN188@xmlGetFeat
$LN186@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN188@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN54@xmlGetFeat

; 232  :         *((startDocumentSAXFunc *) result) = ctxt->sax->startDocument;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+48]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN54@xmlGetFeat:

; 233  :     } else if (!strcmp(name, "SAX function endDocument")) {

	mov	ecx, OFFSET ??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
	mov	eax, esi
	npad	2
$LL189@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN190@xmlGetFeat
	test	dl, dl
	je	SHORT $LN191@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN190@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL189@xmlGetFeat
$LN191@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN192@xmlGetFeat
$LN190@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN192@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN56@xmlGetFeat

; 234  :         *((endDocumentSAXFunc *) result) = ctxt->sax->endDocument;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+52]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN56@xmlGetFeat:

; 235  :     } else if (!strcmp(name, "SAX function startElement")) {

	mov	ecx, OFFSET ??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
	mov	eax, esi
	npad	2
$LL193@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN194@xmlGetFeat
	test	dl, dl
	je	SHORT $LN195@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN194@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL193@xmlGetFeat
$LN195@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN196@xmlGetFeat
$LN194@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN196@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN58@xmlGetFeat

; 236  :         *((startElementSAXFunc *) result) = ctxt->sax->startElement;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+56]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN58@xmlGetFeat:

; 237  :     } else if (!strcmp(name, "SAX function endElement")) {

	mov	ecx, OFFSET ??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
	mov	eax, esi
	npad	2
$LL197@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN198@xmlGetFeat
	test	dl, dl
	je	SHORT $LN199@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN198@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL197@xmlGetFeat
$LN199@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN200@xmlGetFeat
$LN198@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN200@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN60@xmlGetFeat

; 238  :         *((endElementSAXFunc *) result) = ctxt->sax->endElement;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+60]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN60@xmlGetFeat:

; 239  :     } else if (!strcmp(name, "SAX function reference")) {

	mov	ecx, OFFSET ??_C@_0BH@COKKFLJA@SAX?5function?5reference@
	mov	eax, esi
	npad	2
$LL201@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN202@xmlGetFeat
	test	dl, dl
	je	SHORT $LN203@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN202@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL201@xmlGetFeat
$LN203@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN204@xmlGetFeat
$LN202@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN204@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN62@xmlGetFeat

; 240  :         *((referenceSAXFunc *) result) = ctxt->sax->reference;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+64]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN62@xmlGetFeat:

; 241  :     } else if (!strcmp(name, "SAX function characters")) {

	mov	ecx, OFFSET ??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
	mov	eax, esi
	npad	2
$LL205@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN206@xmlGetFeat
	test	dl, dl
	je	SHORT $LN207@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN206@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL205@xmlGetFeat
$LN207@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN208@xmlGetFeat
$LN206@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN208@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN64@xmlGetFeat

; 242  :         *((charactersSAXFunc *) result) = ctxt->sax->characters;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+68]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN64@xmlGetFeat:

; 243  :     } else if (!strcmp(name, "SAX function ignorableWhitespace")) {

	mov	ecx, OFFSET ??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
	mov	eax, esi
	npad	2
$LL209@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN210@xmlGetFeat
	test	dl, dl
	je	SHORT $LN211@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN210@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL209@xmlGetFeat
$LN211@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN212@xmlGetFeat
$LN210@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN212@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN66@xmlGetFeat

; 244  :         *((ignorableWhitespaceSAXFunc *) result) =

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+72]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN66@xmlGetFeat:

; 245  :             ctxt->sax->ignorableWhitespace;
; 246  :     } else if (!strcmp(name, "SAX function processingInstruction")) {

	mov	ecx, OFFSET ??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
	mov	eax, esi
	npad	2
$LL213@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN214@xmlGetFeat
	test	dl, dl
	je	SHORT $LN215@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN214@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL213@xmlGetFeat
$LN215@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN216@xmlGetFeat
$LN214@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN216@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN68@xmlGetFeat

; 247  :         *((processingInstructionSAXFunc *) result) =

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+76]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN68@xmlGetFeat:

; 248  :             ctxt->sax->processingInstruction;
; 249  :     } else if (!strcmp(name, "SAX function comment")) {

	mov	ecx, OFFSET ??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
	mov	eax, esi
	npad	2
$LL217@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN218@xmlGetFeat
	test	dl, dl
	je	SHORT $LN219@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN218@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL217@xmlGetFeat
$LN219@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN220@xmlGetFeat
$LN218@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN220@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN70@xmlGetFeat

; 250  :         *((commentSAXFunc *) result) = ctxt->sax->comment;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+80]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN70@xmlGetFeat:

; 251  :     } else if (!strcmp(name, "SAX function warning")) {

	mov	ecx, OFFSET ??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
	mov	eax, esi
	npad	2
$LL221@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN222@xmlGetFeat
	test	dl, dl
	je	SHORT $LN223@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN222@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL221@xmlGetFeat
$LN223@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN224@xmlGetFeat
$LN222@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN224@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN72@xmlGetFeat

; 252  :         *((warningSAXFunc *) result) = ctxt->sax->warning;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+84]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN72@xmlGetFeat:

; 253  :     } else if (!strcmp(name, "SAX function error")) {

	mov	ecx, OFFSET ??_C@_0BD@DNENFEEM@SAX?5function?5error@
	mov	eax, esi
	npad	2
$LL225@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN226@xmlGetFeat
	test	dl, dl
	je	SHORT $LN227@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN226@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL225@xmlGetFeat
$LN227@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN228@xmlGetFeat
$LN226@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN228@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN74@xmlGetFeat

; 254  :         *((errorSAXFunc *) result) = ctxt->sax->error;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+88]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN74@xmlGetFeat:

; 255  :     } else if (!strcmp(name, "SAX function fatalError")) {

	mov	ecx, OFFSET ??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
	mov	eax, esi
	npad	2
$LL229@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN230@xmlGetFeat
	test	dl, dl
	je	SHORT $LN231@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN230@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL229@xmlGetFeat
$LN231@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN232@xmlGetFeat
$LN230@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN232@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN76@xmlGetFeat

; 256  :         *((fatalErrorSAXFunc *) result) = ctxt->sax->fatalError;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+92]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN76@xmlGetFeat:

; 257  :     } else if (!strcmp(name, "SAX function getParameterEntity")) {

	mov	ecx, OFFSET ??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
	mov	eax, esi
	npad	2
$LL233@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN234@xmlGetFeat
	test	dl, dl
	je	SHORT $LN235@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN234@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL233@xmlGetFeat
$LN235@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN236@xmlGetFeat
$LN234@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN236@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN78@xmlGetFeat

; 258  :         *((getParameterEntitySAXFunc *) result) =

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+96]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN78@xmlGetFeat:

; 259  :             ctxt->sax->getParameterEntity;
; 260  :     } else if (!strcmp(name, "SAX function cdataBlock")) {

	mov	ecx, OFFSET ??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
	mov	eax, esi
	npad	2
$LL237@xmlGetFeat:
	mov	dl, BYTE PTR [eax]
	cmp	dl, BYTE PTR [ecx]
	jne	SHORT $LN238@xmlGetFeat
	test	dl, dl
	je	SHORT $LN239@xmlGetFeat
	mov	dl, BYTE PTR [eax+1]
	cmp	dl, BYTE PTR [ecx+1]
	jne	SHORT $LN238@xmlGetFeat
	add	eax, 2
	add	ecx, 2
	test	dl, dl
	jne	SHORT $LL237@xmlGetFeat
$LN239@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN240@xmlGetFeat
$LN238@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN240@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN80@xmlGetFeat

; 261  :         *((cdataBlockSAXFunc *) result) = ctxt->sax->cdataBlock;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+100]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN80@xmlGetFeat:

; 262  :     } else if (!strcmp(name, "SAX function externalSubset")) {

	mov	eax, OFFSET ??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
	npad	4
$LL241@xmlGetFeat:
	mov	cl, BYTE PTR [esi]
	cmp	cl, BYTE PTR [eax]
	jne	SHORT $LN242@xmlGetFeat
	test	cl, cl
	je	SHORT $LN243@xmlGetFeat
	mov	cl, BYTE PTR [esi+1]
	cmp	cl, BYTE PTR [eax+1]
	jne	SHORT $LN242@xmlGetFeat
	add	esi, 2
	add	eax, 2
	test	cl, cl
	jne	SHORT $LL241@xmlGetFeat
$LN243@xmlGetFeat:
	xor	eax, eax
	jmp	SHORT $LN244@xmlGetFeat
$LN242@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
$LN244@xmlGetFeat:
	test	eax, eax
	jne	SHORT $LN3@xmlGetFeat

; 263  :         *((externalSubsetSAXFunc *) result) = ctxt->sax->externalSubset;

	mov	eax, DWORD PTR [edi]
	pop	edi

; 268  : }

	pop	esi
	mov	eax, DWORD PTR [eax+104]
	mov	DWORD PTR [ebx], eax
	xor	eax, eax
	pop	ebx
	pop	ebp
	ret	0
$LN3@xmlGetFeat:
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
	pop	ebp
	ret	0
_xmlGetFeature ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlGetFeaturesList
_TEXT	SEGMENT
_len$ = 8						; size = 4
_result$ = 12						; size = 4
_xmlGetFeaturesList PROC				; COMDAT

; 146  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	mov	esi, DWORD PTR _len$[ebp]
	test	esi, esi
	je	SHORT $LN6@xmlGetFeat

; 147  :     int ret, i;
; 148  : 
; 149  :     ret = sizeof(xmlFeaturesList) / sizeof(xmlFeaturesList[0]);
; 150  :     if ((len == NULL) || (result == NULL))

	mov	ecx, DWORD PTR _result$[ebp]
	test	ecx, ecx
	je	SHORT $LN6@xmlGetFeat

; 152  :     if ((*len < 0) || (*len >= 1000))

	mov	eax, DWORD PTR [esi]
	cmp	eax, 999				; 000003e7H
	ja	SHORT $LN8@xmlGetFeat

; 154  :     if (*len > ret)

	cmp	eax, 42					; 0000002aH
	jle	SHORT $LN9@xmlGetFeat

; 155  :         *len = ret;

	mov	DWORD PTR [esi], 42			; 0000002aH
	mov	eax, 42					; 0000002aH
$LN9@xmlGetFeat:

; 156  :     for (i = 0; i < *len; i++)

	xor	edx, edx
	test	eax, eax
	jle	SHORT $LN6@xmlGetFeat
	push	edi
	mov	edi, OFFSET _xmlFeaturesList
	sub	edi, ecx
$LL4@xmlGetFeat:

; 157  :         result[i] = xmlFeaturesList[i];

	mov	eax, DWORD PTR [edi+ecx]
	lea	ecx, DWORD PTR [ecx+4]
	mov	DWORD PTR [ecx-4], eax
	inc	edx
	cmp	edx, DWORD PTR [esi]
	jl	SHORT $LL4@xmlGetFeat
	pop	edi
$LN6@xmlGetFeat:

; 151  :         return (ret);

	mov	eax, 42					; 0000002aH
	pop	esi

; 158  :     return (ret);
; 159  : }

	pop	ebp
	ret	0
$LN8@xmlGetFeat:

; 153  :         return (-1);

	or	eax, -1
	pop	esi

; 158  :     return (ret);
; 159  : }

	pop	ebp
	ret	0
_xmlGetFeaturesList ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlCleanupPredefinedEntities
_TEXT	SEGMENT
_xmlCleanupPredefinedEntities PROC			; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	jmp	@__CheckForDebuggerJustMyCode@4
_xmlCleanupPredefinedEntities ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlEncodeEntities
_TEXT	SEGMENT
_doc$ = 8						; size = 4
_input$ = 12						; size = 4
_xmlEncodeEntities PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?warning@?1??xmlEncodeEntities@@9@9, 0
	je	SHORT $LN4@xmlEncodeE

; 729  :     static int warning = 1;
; 730  : 
; 731  :     if (warning) {
; 732  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax

; 733  :                         "Deprecated API xmlEncodeEntities() used\n");
; 734  :         xmlGenericError(xmlGenericErrorContext,

	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 16					; 00000010H

; 735  :                         "   change code to use xmlEncodeEntitiesReentrant()\n");
; 736  :         warning = 0;

	mov	DWORD PTR ?warning@?1??xmlEncodeEntities@@9@9, 0

; 737  :     }
; 738  :     return (NULL);

	pop	esi
$LN4@xmlEncodeE:

; 739  : }

	xor	eax, eax
	ret	0
_xmlEncodeEntities ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlInitializePredefinedEntities
_TEXT	SEGMENT
_xmlInitializePredefinedEntities PROC			; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	jmp	@__CheckForDebuggerJustMyCode@4
_xmlInitializePredefinedEntities ENDP
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNewGlobalNs
_TEXT	SEGMENT
_doc$ = 8						; size = 4
_href$ = 12						; size = 4
_prefix$ = 16						; size = 4
_xmlNewGlobalNs PROC					; COMDAT
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4
	cmp	DWORD PTR ?deprecated@?1??xmlNewGlobalNs@@9@9, 0
	jne	SHORT $LN4@xmlNewGlob

; 683  :     static int deprecated = 0;
; 684  : 
; 685  :     if (!deprecated) {
; 686  :         xmlGenericError(xmlGenericErrorContext,

	push	esi
	call	___xmlGenericError
	mov	esi, eax
	call	___xmlGenericErrorContext
	push	OFFSET ??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@
	push	DWORD PTR [eax]
	mov	eax, DWORD PTR [esi]
	call	eax
	add	esp, 8

; 687  :                         "xmlNewGlobalNs() deprecated function reached\n");
; 688  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNewGlobalNs@@9@9, 1

; 689  :     }
; 690  :     return (NULL);

	pop	esi
$LN4@xmlNewGlob:

; 691  : }

	xor	eax, eax
	ret	0
_xmlNewGlobalNs ENDP
_TEXT	ENDS
END
