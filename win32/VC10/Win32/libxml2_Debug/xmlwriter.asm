; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\xmlwriter.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_xmlMalloc:DWORD
COMM	_xmlMallocAtomic:DWORD
COMM	_xmlRealloc:DWORD
COMM	_xmlFree:DWORD
COMM	_xmlMemStrdup:DWORD
COMM	_forbiddenExp:DWORD
COMM	_emptyExp:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__188180DA_corecrt_math@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__DA396148_xmlwriter@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_xmlNewTextWriter
PUBLIC	_xmlNewTextWriterFilename
PUBLIC	_xmlNewTextWriterMemory
PUBLIC	_xmlNewTextWriterPushParser
PUBLIC	_xmlNewTextWriterDoc
PUBLIC	_xmlNewTextWriterTree
PUBLIC	_xmlFreeTextWriter
PUBLIC	_xmlTextWriterStartDocument
PUBLIC	_xmlTextWriterEndDocument
PUBLIC	_xmlTextWriterStartComment
PUBLIC	_xmlTextWriterEndComment
PUBLIC	_xmlTextWriterWriteFormatComment
PUBLIC	_xmlTextWriterWriteVFormatComment
PUBLIC	_xmlTextWriterWriteComment
PUBLIC	_xmlTextWriterStartElement
PUBLIC	_xmlTextWriterStartElementNS
PUBLIC	_xmlTextWriterEndElement
PUBLIC	_xmlTextWriterFullEndElement
PUBLIC	_xmlTextWriterWriteFormatElement
PUBLIC	_xmlTextWriterWriteVFormatElement
PUBLIC	_xmlTextWriterWriteElement
PUBLIC	_xmlTextWriterWriteFormatElementNS
PUBLIC	_xmlTextWriterWriteVFormatElementNS
PUBLIC	_xmlTextWriterWriteElementNS
PUBLIC	_xmlTextWriterWriteFormatRaw
PUBLIC	_xmlTextWriterWriteVFormatRaw
PUBLIC	_xmlTextWriterWriteRawLen
PUBLIC	_xmlTextWriterWriteRaw
PUBLIC	_xmlTextWriterWriteFormatString
PUBLIC	_xmlTextWriterWriteVFormatString
PUBLIC	_xmlTextWriterWriteString
PUBLIC	_xmlTextWriterWriteBase64
PUBLIC	_xmlTextWriterWriteBinHex
PUBLIC	_xmlTextWriterStartAttribute
PUBLIC	_xmlTextWriterStartAttributeNS
PUBLIC	_xmlTextWriterEndAttribute
PUBLIC	_xmlTextWriterWriteFormatAttribute
PUBLIC	_xmlTextWriterWriteVFormatAttribute
PUBLIC	_xmlTextWriterWriteAttribute
PUBLIC	_xmlTextWriterWriteFormatAttributeNS
PUBLIC	_xmlTextWriterWriteVFormatAttributeNS
PUBLIC	_xmlTextWriterWriteAttributeNS
PUBLIC	_xmlTextWriterStartPI
PUBLIC	_xmlTextWriterEndPI
PUBLIC	_xmlTextWriterWriteFormatPI
PUBLIC	_xmlTextWriterWriteVFormatPI
PUBLIC	_xmlTextWriterWritePI
PUBLIC	_xmlTextWriterStartCDATA
PUBLIC	_xmlTextWriterEndCDATA
PUBLIC	_xmlTextWriterWriteFormatCDATA
PUBLIC	_xmlTextWriterWriteVFormatCDATA
PUBLIC	_xmlTextWriterWriteCDATA
PUBLIC	_xmlTextWriterStartDTD
PUBLIC	_xmlTextWriterEndDTD
PUBLIC	_xmlTextWriterWriteFormatDTD
PUBLIC	_xmlTextWriterWriteVFormatDTD
PUBLIC	_xmlTextWriterWriteDTD
PUBLIC	_xmlTextWriterStartDTDElement
PUBLIC	_xmlTextWriterEndDTDElement
PUBLIC	_xmlTextWriterWriteFormatDTDElement
PUBLIC	_xmlTextWriterWriteVFormatDTDElement
PUBLIC	_xmlTextWriterWriteDTDElement
PUBLIC	_xmlTextWriterStartDTDAttlist
PUBLIC	_xmlTextWriterEndDTDAttlist
PUBLIC	_xmlTextWriterWriteFormatDTDAttlist
PUBLIC	_xmlTextWriterWriteVFormatDTDAttlist
PUBLIC	_xmlTextWriterWriteDTDAttlist
PUBLIC	_xmlTextWriterStartDTDEntity
PUBLIC	_xmlTextWriterEndDTDEntity
PUBLIC	_xmlTextWriterWriteFormatDTDInternalEntity
PUBLIC	_xmlTextWriterWriteVFormatDTDInternalEntity
PUBLIC	_xmlTextWriterWriteDTDInternalEntity
PUBLIC	_xmlTextWriterWriteDTDExternalEntity
PUBLIC	_xmlTextWriterWriteDTDExternalEntityContents
PUBLIC	_xmlTextWriterWriteDTDEntity
PUBLIC	_xmlTextWriterWriteDTDNotation
PUBLIC	_xmlTextWriterSetIndent
PUBLIC	_xmlTextWriterSetIndentString
PUBLIC	_xmlTextWriterSetQuoteChar
PUBLIC	_xmlTextWriterFlush
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0CD@BLMOIHCP@xmlNewTextWriter?5?3?5out?5of?5memor@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_0CM@BPKCIIPG@xmlNewTextWriterFilename?5?3?5cann@ ; `string'
PUBLIC	??_C@_0CL@DOKHFPFK@xmlNewTextWriterFilename?5?3?5out?5@ ; `string'
PUBLIC	??_C@_0CJ@HOKLKMGC@xmlNewTextWriterMemory?5?3?5out?5of@ ; `string'
PUBLIC	??_C@_0CP@MDJJPOLB@xmlNewTextWriterPushParser?5?3?5in@ ; `string'
PUBLIC	??_C@_0EA@BHKIBNFO@xmlNewTextWriterPushParser?5?3?5er@ ; `string'
PUBLIC	??_C@_0DJ@DOJNHAEH@xmlNewTextWriterPushParser?5?3?5er@ ; `string'
PUBLIC	??_C@_0DJ@MHFIEMJE@xmlNewTextWriterDoc?5?3?5error?5at?5@ ; `string'
PUBLIC	??_C@_03HLLJOCDO@1?40@				; `string'
PUBLIC	??_C@_0CL@MKPGDELP@xmlNewTextWriterDoc?5?3?5error?5at?5@ ; `string'
PUBLIC	??_C@_0DM@HKPAOPJL@xmlNewTextWriterDoc?5?3?5error?5at?5@ ; `string'
PUBLIC	??_C@_0CP@PFMBJEMH@xmlNewTextWriterTree?5?3?5invalid?5@ ; `string'
PUBLIC	??_C@_0CO@KMFPACDM@xmlTextWriterStartDocument?5?3?5in@ ; `string'
PUBLIC	??_C@_0DL@JOCNHFIJ@xmlTextWriterStartDocument?5?3?5no@ ; `string'
PUBLIC	??_C@_0CN@ODOCGFDE@xmlTextWriterStartDocument?5?3?5ou@ ; `string'
PUBLIC	??_C@_0P@CNJADHFP@?$DM?$DPxml?5version?$DN@	; `string'
PUBLIC	??_C@_0L@GJNPICMJ@?5encoding?$DN@		; `string'
PUBLIC	??_C@_0N@BGGHLCGN@?5standalone?$DN@		; `string'
PUBLIC	??_C@_03KCOJOIAE@?$DP?$DO?6@			; `string'
PUBLIC	??_C@_0CM@MFAOOHEJ@xmlTextWriterEndDocument?5?3?5inva@ ; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0CN@DOOOICJG@xmlTextWriterStartComment?5?3?5inv@ ; `string'
PUBLIC	??_C@_01PPODPGHN@?$DO@				; `string'
PUBLIC	??_C@_0CM@FINCADKE@xmlTextWriterStartElement?5?3?5out@ ; `string'
PUBLIC	??_C@_04FFDNBKGC@?$DM?$CB?9?9@			; `string'
PUBLIC	??_C@_0CL@GJMJAJAF@xmlTextWriterEndComment?5?3?5inval@ ; `string'
PUBLIC	??_C@_0DI@MAGHMILC@xmlTextWriterEndComment?5?3?5not?5a@ ; `string'
PUBLIC	??_C@_03PNLDJJMO@?9?9?$DO@			; `string'
PUBLIC	??_C@_0DE@JBFCJMHJ@xmlTextWriterWriteVFormatCommen@ ; `string'
PUBLIC	??_C@_01MNNFJEPP@?$DM@				; `string'
PUBLIC	??_C@_01JLIPDDHJ@?3@				; `string'
PUBLIC	??_C@_0CO@MGJEFOHO@xmlTextWriterStartElementNS?5?3?5o@ ; `string'
PUBLIC	??_C@_05PPEFOGKI@xmlns@				; `string'
PUBLIC	??_C@_02HCGKDMEN@?1?$DO@			; `string'
PUBLIC	??_C@_02DPNDACHE@?$DM?1@			; `string'
PUBLIC	??_C@_0CM@KBMCGCHN@xmlTextWriterWriteRawLen?5?3?5inva@ ; `string'
PUBLIC	??_C@_0CN@MACOIGNG@xmlTextWriterWriteRawLen?5?3?5inva@ ; `string'
PUBLIC	??_C@_02PCIJFNDE@?$AN?6@			; `string'
PUBLIC	??_C@_01NEMOKFLO@?$DN@				; `string'
PUBLIC	??_C@_0DA@LBMIIMOH@xmlTextWriterStartAttributeNS?5?3@ ; `string'
PUBLIC	??_C@_03PJHHNEEI@xml@				; `string'
PUBLIC	??_C@_0FG@KFBLHCOM@xmlTextWriterStartPI?5?3?5target?5n@ ; `string'
PUBLIC	??_C@_0CD@KBFLMPAO@xmlTextWriterStartPI?5?3?5nested?5P@ ; `string'
PUBLIC	??_C@_0CH@IKGNFAGK@xmlTextWriterStartPI?5?3?5out?5of?5m@ ; `string'
PUBLIC	??_C@_02HFBBBACF@?$DM?$DP@			; `string'
PUBLIC	??_C@_02GOEMJPDN@?$DP?$DO@			; `string'
PUBLIC	??_C@_0DO@LGFOPFHE@xmlTextWriterStartCDATA?5?3?5CDATA@ ; `string'
PUBLIC	??_C@_0CK@FMBLGDPB@xmlTextWriterStartCDATA?5?3?5out?5o@ ; `string'
PUBLIC	??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL@		; `string'
PUBLIC	??_C@_03MCHNFBAC@?$FN?$FN?$DO@			; `string'
PUBLIC	??_C@_0DF@KCNCPLNC@xmlTextWriterStartDTD?5?3?5DTD?5all@ ; `string'
PUBLIC	??_C@_0CI@CDIDIABN@xmlTextWriterStartDTD?5?3?5out?5of?5@ ; `string'
PUBLIC	??_C@_0L@JKHDJBPI@?$DM?$CBDOCTYPE?5@		; `string'
PUBLIC	??_C@_0DD@KKKOOJH@xmlTextWriterStartDTD?5?3?5system?5@ ; `string'
PUBLIC	??_C@_07GAMBALOD@PUBLIC?5@			; `string'
PUBLIC	??_C@_07PBLMPJLL@SYSTEM?5@			; `string'
PUBLIC	??_C@_08HBIFNNEL@?6?5?5?5?5?5?5?5@		; `string'
PUBLIC	??_C@_01LBDDMOBJ@?$FN@				; `string'
PUBLIC	??_C@_02GBLMOEJC@?5?$FL@			; `string'
PUBLIC	??_C@_0CP@HLOPJJJB@xmlTextWriterStartDTDElement?5?3?5@ ; `string'
PUBLIC	??_C@_0L@EMLMHHFJ@?$DM?$CBELEMENT?5@		; `string'
PUBLIC	??_C@_0CP@EGINGCOH@xmlTextWriterStartDTDAttlist?5?3?5@ ; `string'
PUBLIC	??_C@_0L@NDHICKFH@?$DM?$CBATTLIST?5@		; `string'
PUBLIC	??_C@_09POADHIMD@?$DM?$CBENTITY?5@		; `string'
PUBLIC	??_C@_02KLLMIGEE@?$CF?5@			; `string'
PUBLIC	??_C@_0EI@DDDMEPLI@xmlTextWriterWriteDTDExternalEn@ ; `string'
PUBLIC	??_C@_0HK@MIJHHHOH@xmlTextWriterWriteDTDExternalEn@ ; `string'
PUBLIC	??_C@_0FM@COPKODIE@xmlTextWriterWriteDTDExternalEn@ ; `string'
PUBLIC	??_C@_0EI@PKOPPIFG@xmlTextWriterWriteDTDExternalEn@ ; `string'
PUBLIC	??_C@_08GBBLECIH@?5PUBLIC?5@			; `string'
PUBLIC	??_C@_07FCENLLFI@?5SYSTEM@			; `string'
PUBLIC	??_C@_07CGHGCOMH@?5NDATA?5@			; `string'
PUBLIC	??_C@_0M@IOFINGOM@?$DM?$CBNOTATION?5@		; `string'
PUBLIC	??_C@_0DA@HGAENLDC@xmlTextWriterWriteDocCallback?5?3@ ; `string'
PUBLIC	??_C@_0DA@LOAGMMIC@xmlTextWriterCloseDocCallback?5?3@ ; `string'
PUBLIC	??_C@_0CI@EEFGHMNP@xmlTextWriterVSprintf?5?3?5out?5of?5@ ; `string'
PUBLIC	??_C@_0CE@EPNLGKMK@SAX?4startDocument?$CI?$CJ?3?5out?5of?5mem@ ; `string'
EXTRN	_xmlStrdup:PROC
EXTRN	_xmlStrcmp:PROC
EXTRN	_xmlStrcasecmp:PROC
EXTRN	_xmlStrlen:PROC
EXTRN	_xmlStrcat:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_xmlNewDoc:PROC
EXTRN	_xmlFreeDoc:PROC
EXTRN	_xmlSetDocCompressMode:PROC
EXTRN	___xmlRaiseError:PROC
EXTRN	_xmlListCreate:PROC
EXTRN	_xmlListDelete:PROC
EXTRN	_xmlListSearch:PROC
EXTRN	_xmlListEmpty:PROC
EXTRN	_xmlListFront:PROC
EXTRN	_xmlListSize:PROC
EXTRN	_xmlListPopFront:PROC
EXTRN	_xmlListPushFront:PROC
EXTRN	_xmlLinkGetData:PROC
EXTRN	_xmlEncodeSpecialChars:PROC
EXTRN	_xmlFindCharEncodingHandler:PROC
EXTRN	_xmlOutputBufferCreateFilename:PROC
EXTRN	_xmlOutputBufferCreateBuffer:PROC
EXTRN	_xmlOutputBufferCreateIO:PROC
EXTRN	_xmlOutputBufferWrite:PROC
EXTRN	_xmlOutputBufferWriteString:PROC
EXTRN	_xmlOutputBufferFlush:PROC
EXTRN	_xmlOutputBufferClose:PROC
EXTRN	_xmlFreeParserCtxt:PROC
EXTRN	_xmlCreatePushParserCtxt:PROC
EXTRN	_xmlParseChunk:PROC
EXTRN	_xmlSAX2StartElement:PROC
EXTRN	_xmlSAX2EndElement:PROC
EXTRN	_xmlSAX2InitDefaultSAXHandler:PROC
EXTRN	_xmlCanonicPath:PROC
EXTRN	_htmlNewDocNoDtD:PROC
EXTRN	_xmlBufCreateSize:PROC
EXTRN	_xmlCharEncOutput:PROC
EXTRN	_xmlBufAttrSerializeTxtContent:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	_memset:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0CE@EPNLGKMK@SAX?4startDocument?$CI?$CJ?3?5out?5of?5mem@
CONST	SEGMENT
??_C@_0CE@EPNLGKMK@SAX?4startDocument?$CI?$CJ?3?5out?5of?5mem@ DB 'SAX.st'
	DB	'artDocument(): out of memory', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@EEFGHMNP@xmlTextWriterVSprintf?5?3?5out?5of?5@
CONST	SEGMENT
??_C@_0CI@EEFGHMNP@xmlTextWriterVSprintf?5?3?5out?5of?5@ DB 'xmlTextWrite'
	DB	'rVSprintf : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LOAGMMIC@xmlTextWriterCloseDocCallback?5?3@
CONST	SEGMENT
??_C@_0DA@LOAGMMIC@xmlTextWriterCloseDocCallback?5?3@ DB 'xmlTextWriterCl'
	DB	'oseDocCallback : XML error %d !', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@HGAENLDC@xmlTextWriterWriteDocCallback?5?3@
CONST	SEGMENT
??_C@_0DA@HGAENLDC@xmlTextWriterWriteDocCallback?5?3@ DB 'xmlTextWriterWr'
	DB	'iteDocCallback : XML error %d !', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IOFINGOM@?$DM?$CBNOTATION?5@
CONST	SEGMENT
??_C@_0M@IOFINGOM@?$DM?$CBNOTATION?5@ DB '<!NOTATION ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07CGHGCOMH@?5NDATA?5@
CONST	SEGMENT
??_C@_07CGHGCOMH@?5NDATA?5@ DB ' NDATA ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FCENLLFI@?5SYSTEM@
CONST	SEGMENT
??_C@_07FCENLLFI@?5SYSTEM@ DB ' SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08GBBLECIH@?5PUBLIC?5@
CONST	SEGMENT
??_C@_08GBBLECIH@?5PUBLIC?5@ DB ' PUBLIC ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@PKOPPIFG@xmlTextWriterWriteDTDExternalEn@
CONST	SEGMENT
??_C@_0EI@PKOPPIFG@xmlTextWriterWriteDTDExternalEn@ DB 'xmlTextWriterWrit'
	DB	'eDTDExternalEntityContents: system identifier needed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FM@COPKODIE@xmlTextWriterWriteDTDExternalEn@
CONST	SEGMENT
??_C@_0FM@COPKODIE@xmlTextWriterWriteDTDExternalEn@ DB 'xmlTextWriterWrit'
	DB	'eDTDExternalEntityContents: notation not allowed with paramet'
	DB	'er entities!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0HK@MIJHHHOH@xmlTextWriterWriteDTDExternalEn@
CONST	SEGMENT
??_C@_0HK@MIJHHHOH@xmlTextWriterWriteDTDExternalEn@ DB 'xmlTextWriterWrit'
	DB	'eDTDExternalEntityContents: you must call xmlTextWriterStartD'
	DB	'TDEntity before the call to this function!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EI@DDDMEPLI@xmlTextWriterWriteDTDExternalEn@
CONST	SEGMENT
??_C@_0EI@DDDMEPLI@xmlTextWriterWriteDTDExternalEn@ DB 'xmlTextWriterWrit'
	DB	'eDTDExternalEntityContents: xmlTextWriterPtr invalid!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02KLLMIGEE@?$CF?5@
CONST	SEGMENT
??_C@_02KLLMIGEE@?$CF?5@ DB '% ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09POADHIMD@?$DM?$CBENTITY?5@
CONST	SEGMENT
??_C@_09POADHIMD@?$DM?$CBENTITY?5@ DB '<!ENTITY ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NDHICKFH@?$DM?$CBATTLIST?5@
CONST	SEGMENT
??_C@_0L@NDHICKFH@?$DM?$CBATTLIST?5@ DB '<!ATTLIST ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@EGINGCOH@xmlTextWriterStartDTDAttlist?5?3?5@
CONST	SEGMENT
??_C@_0CP@EGINGCOH@xmlTextWriterStartDTDAttlist?5?3?5@ DB 'xmlTextWriterS'
	DB	'tartDTDAttlist : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMLMHHFJ@?$DM?$CBELEMENT?5@
CONST	SEGMENT
??_C@_0L@EMLMHHFJ@?$DM?$CBELEMENT?5@ DB '<!ELEMENT ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@HLOPJJJB@xmlTextWriterStartDTDElement?5?3?5@
CONST	SEGMENT
??_C@_0CP@HLOPJJJB@xmlTextWriterStartDTDElement?5?3?5@ DB 'xmlTextWriterS'
	DB	'tartDTDElement : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02GBLMOEJC@?5?$FL@
CONST	SEGMENT
??_C@_02GBLMOEJC@?5?$FL@ DB ' [', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01LBDDMOBJ@?$FN@
CONST	SEGMENT
??_C@_01LBDDMOBJ@?$FN@ DB ']', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08HBIFNNEL@?6?5?5?5?5?5?5?5@
CONST	SEGMENT
??_C@_08HBIFNNEL@?6?5?5?5?5?5?5?5@ DB 0aH, '       ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PBLMPJLL@SYSTEM?5@
CONST	SEGMENT
??_C@_07PBLMPJLL@SYSTEM?5@ DB 'SYSTEM ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GAMBALOD@PUBLIC?5@
CONST	SEGMENT
??_C@_07GAMBALOD@PUBLIC?5@ DB 'PUBLIC ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@KKKOOJH@xmlTextWriterStartDTD?5?3?5system?5@
CONST	SEGMENT
??_C@_0DD@KKKOOJH@xmlTextWriterStartDTD?5?3?5system?5@ DB 'xmlTextWriterS'
	DB	'tartDTD : system identifier needed!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JKHDJBPI@?$DM?$CBDOCTYPE?5@
CONST	SEGMENT
??_C@_0L@JKHDJBPI@?$DM?$CBDOCTYPE?5@ DB '<!DOCTYPE ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@CDIDIABN@xmlTextWriterStartDTD?5?3?5out?5of?5@
CONST	SEGMENT
??_C@_0CI@CDIDIABN@xmlTextWriterStartDTD?5?3?5out?5of?5@ DB 'xmlTextWrite'
	DB	'rStartDTD : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DF@KCNCPLNC@xmlTextWriterStartDTD?5?3?5DTD?5all@
CONST	SEGMENT
??_C@_0DF@KCNCPLNC@xmlTextWriterStartDTD?5?3?5DTD?5all@ DB 'xmlTextWriter'
	DB	'StartDTD : DTD allowed only in prolog!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03MCHNFBAC@?$FN?$FN?$DO@
CONST	SEGMENT
??_C@_03MCHNFBAC@?$FN?$FN?$DO@ DB ']]>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL@
CONST	SEGMENT
??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL@ DB '<![CDATA[', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@FMBLGDPB@xmlTextWriterStartCDATA?5?3?5out?5o@
CONST	SEGMENT
??_C@_0CK@FMBLGDPB@xmlTextWriterStartCDATA?5?3?5out?5o@ DB 'xmlTextWriter'
	DB	'StartCDATA : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DO@LGFOPFHE@xmlTextWriterStartCDATA?5?3?5CDATA@
CONST	SEGMENT
??_C@_0DO@LGFOPFHE@xmlTextWriterStartCDATA?5?3?5CDATA@ DB 'xmlTextWriterS'
	DB	'tartCDATA : CDATA not allowed in this context!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02GOEMJPDN@?$DP?$DO@
CONST	SEGMENT
??_C@_02GOEMJPDN@?$DP?$DO@ DB '?>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HFBBBACF@?$DM?$DP@
CONST	SEGMENT
??_C@_02HFBBBACF@?$DM?$DP@ DB '<?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@IKGNFAGK@xmlTextWriterStartPI?5?3?5out?5of?5m@
CONST	SEGMENT
??_C@_0CH@IKGNFAGK@xmlTextWriterStartPI?5?3?5out?5of?5m@ DB 'xmlTextWrite'
	DB	'rStartPI : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@KBFLMPAO@xmlTextWriterStartPI?5?3?5nested?5P@
CONST	SEGMENT
??_C@_0CD@KBFLMPAO@xmlTextWriterStartPI?5?3?5nested?5P@ DB 'xmlTextWriter'
	DB	'StartPI : nested PI!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@KFBLHCOM@xmlTextWriterStartPI?5?3?5target?5n@
CONST	SEGMENT
??_C@_0FG@KFBLHCOM@xmlTextWriterStartPI?5?3?5target?5n@ DB 'xmlTextWriter'
	DB	'StartPI : target name [Xx][Mm][Ll] is reserved for xml standa'
	DB	'rdization!', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_03PJHHNEEI@xml@
CONST	SEGMENT
??_C@_03PJHHNEEI@xml@ DB 'xml', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@LBMIIMOH@xmlTextWriterStartAttributeNS?5?3@
CONST	SEGMENT
??_C@_0DA@LBMIIMOH@xmlTextWriterStartAttributeNS?5?3@ DB 'xmlTextWriterSt'
	DB	'artAttributeNS : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01NEMOKFLO@?$DN@
CONST	SEGMENT
??_C@_01NEMOKFLO@?$DN@ DB '=', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02PCIJFNDE@?$AN?6@
CONST	SEGMENT
??_C@_02PCIJFNDE@?$AN?6@ DB 0dH, 0aH, 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?dtable@?1??xmlOutputBufferWriteBase64@@9@9 DB 041H	; `xmlOutputBufferWriteBase64'::`2'::dtable
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
	DB	047H
	DB	048H
	DB	049H
	DB	04aH
	DB	04bH
	DB	04cH
	DB	04dH
	DB	04eH
	DB	04fH
	DB	050H
	DB	051H
	DB	052H
	DB	053H
	DB	054H
	DB	055H
	DB	056H
	DB	057H
	DB	058H
	DB	059H
	DB	05aH
	DB	061H
	DB	062H
	DB	063H
	DB	064H
	DB	065H
	DB	066H
	DB	067H
	DB	068H
	DB	069H
	DB	06aH
	DB	06bH
	DB	06cH
	DB	06dH
	DB	06eH
	DB	06fH
	DB	070H
	DB	071H
	DB	072H
	DB	073H
	DB	074H
	DB	075H
	DB	076H
	DB	077H
	DB	078H
	DB	079H
	DB	07aH
	DB	030H
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	02bH
	DB	02fH
?hex@?1??xmlOutputBufferWriteBinHex@@9@9 DB 030H	; `xmlOutputBufferWriteBinHex'::`2'::hex
	DB	031H
	DB	032H
	DB	033H
	DB	034H
	DB	035H
	DB	036H
	DB	037H
	DB	038H
	DB	039H
	DB	041H
	DB	042H
	DB	043H
	DB	044H
	DB	045H
	DB	046H
_DATA	ENDS
;	COMDAT ??_C@_0CN@MACOIGNG@xmlTextWriterWriteRawLen?5?3?5inva@
CONST	SEGMENT
??_C@_0CN@MACOIGNG@xmlTextWriterWriteRawLen?5?3?5inva@ DB 'xmlTextWriterW'
	DB	'riteRawLen : invalid content!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@KBMCGCHN@xmlTextWriterWriteRawLen?5?3?5inva@
CONST	SEGMENT
??_C@_0CM@KBMCGCHN@xmlTextWriterWriteRawLen?5?3?5inva@ DB 'xmlTextWriterW'
	DB	'riteRawLen : invalid writer!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DPNDACHE@?$DM?1@
CONST	SEGMENT
??_C@_02DPNDACHE@?$DM?1@ DB '</', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02HCGKDMEN@?1?$DO@
CONST	SEGMENT
??_C@_02HCGKDMEN@?1?$DO@ DB '/>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PPEFOGKI@xmlns@
CONST	SEGMENT
??_C@_05PPEFOGKI@xmlns@ DB 'xmlns', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@MGJEFOHO@xmlTextWriterStartElementNS?5?3?5o@
CONST	SEGMENT
??_C@_0CO@MGJEFOHO@xmlTextWriterStartElementNS?5?3?5o@ DB 'xmlTextWriterS'
	DB	'tartElementNS : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01JLIPDDHJ@?3@
CONST	SEGMENT
??_C@_01JLIPDDHJ@?3@ DB ':', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01MNNFJEPP@?$DM@
CONST	SEGMENT
??_C@_01MNNFJEPP@?$DM@ DB '<', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@JBFCJMHJ@xmlTextWriterWriteVFormatCommen@
CONST	SEGMENT
??_C@_0DE@JBFCJMHJ@xmlTextWriterWriteVFormatCommen@ DB 'xmlTextWriterWrit'
	DB	'eVFormatComment : invalid writer!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03PNLDJJMO@?9?9?$DO@
CONST	SEGMENT
??_C@_03PNLDJJMO@?9?9?$DO@ DB '-->', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@MAGHMILC@xmlTextWriterEndComment?5?3?5not?5a@
CONST	SEGMENT
??_C@_0DI@MAGHMILC@xmlTextWriterEndComment?5?3?5not?5a@ DB 'xmlTextWriter'
	DB	'EndComment : not allowed in this context!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@GJMJAJAF@xmlTextWriterEndComment?5?3?5inval@
CONST	SEGMENT
??_C@_0CL@GJMJAJAF@xmlTextWriterEndComment?5?3?5inval@ DB 'xmlTextWriterE'
	DB	'ndComment : invalid writer!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04FFDNBKGC@?$DM?$CB?9?9@
CONST	SEGMENT
??_C@_04FFDNBKGC@?$DM?$CB?9?9@ DB '<!--', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@FINCADKE@xmlTextWriterStartElement?5?3?5out@
CONST	SEGMENT
??_C@_0CM@FINCADKE@xmlTextWriterStartElement?5?3?5out@ DB 'xmlTextWriterS'
	DB	'tartElement : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01PPODPGHN@?$DO@
CONST	SEGMENT
??_C@_01PPODPGHN@?$DO@ DB '>', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@DOOOICJG@xmlTextWriterStartComment?5?3?5inv@
CONST	SEGMENT
??_C@_0CN@DOOOICJG@xmlTextWriterStartComment?5?3?5inv@ DB 'xmlTextWriterS'
	DB	'tartComment : invalid writer!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@MFAOOHEJ@xmlTextWriterEndDocument?5?3?5inva@
CONST	SEGMENT
??_C@_0CM@MFAOOHEJ@xmlTextWriterEndDocument?5?3?5inva@ DB 'xmlTextWriterE'
	DB	'ndDocument : invalid writer!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03KCOJOIAE@?$DP?$DO?6@
CONST	SEGMENT
??_C@_03KCOJOIAE@?$DP?$DO?6@ DB '?>', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BGGHLCGN@?5standalone?$DN@
CONST	SEGMENT
??_C@_0N@BGGHLCGN@?5standalone?$DN@ DB ' standalone=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GJNPICMJ@?5encoding?$DN@
CONST	SEGMENT
??_C@_0L@GJNPICMJ@?5encoding?$DN@ DB ' encoding=', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CNJADHFP@?$DM?$DPxml?5version?$DN@
CONST	SEGMENT
??_C@_0P@CNJADHFP@?$DM?$DPxml?5version?$DN@ DB '<?xml version=', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@ODOCGFDE@xmlTextWriterStartDocument?5?3?5ou@
CONST	SEGMENT
??_C@_0CN@ODOCGFDE@xmlTextWriterStartDocument?5?3?5ou@ DB 'xmlTextWriterS'
	DB	'tartDocument : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DL@JOCNHFIJ@xmlTextWriterStartDocument?5?3?5no@
CONST	SEGMENT
??_C@_0DL@JOCNHFIJ@xmlTextWriterStartDocument?5?3?5no@ DB 'xmlTextWriterS'
	DB	'tartDocument : not allowed in this context!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@KMFPACDM@xmlTextWriterStartDocument?5?3?5in@
CONST	SEGMENT
??_C@_0CO@KMFPACDM@xmlTextWriterStartDocument?5?3?5in@ DB 'xmlTextWriterS'
	DB	'tartDocument : invalid writer!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@PFMBJEMH@xmlNewTextWriterTree?5?3?5invalid?5@
CONST	SEGMENT
??_C@_0CP@PFMBJEMH@xmlNewTextWriterTree?5?3?5invalid?5@ DB 'xmlNewTextWri'
	DB	'terTree : invalid document tree!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HKPAOPJL@xmlNewTextWriterDoc?5?3?5error?5at?5@
CONST	SEGMENT
??_C@_0DM@HKPAOPJL@xmlNewTextWriterDoc?5?3?5error?5at?5@ DB 'xmlNewTextWr'
	DB	'iterDoc : error at xmlNewTextWriterPushParser!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@MKPGDELP@xmlNewTextWriterDoc?5?3?5error?5at?5@
CONST	SEGMENT
??_C@_0CL@MKPGDELP@xmlNewTextWriterDoc?5?3?5error?5at?5@ DB 'xmlNewTextWr'
	DB	'iterDoc : error at xmlNewDoc!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03HLLJOCDO@1?40@
CONST	SEGMENT
??_C@_03HLLJOCDO@1?40@ DB '1.0', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@MHFIEMJE@xmlNewTextWriterDoc?5?3?5error?5at?5@
CONST	SEGMENT
??_C@_0DJ@MHFIEMJE@xmlNewTextWriterDoc?5?3?5error?5at?5@ DB 'xmlNewTextWr'
	DB	'iterDoc : error at xmlCreatePushParserCtxt!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@DOJNHAEH@xmlNewTextWriterPushParser?5?3?5er@
CONST	SEGMENT
??_C@_0DJ@DOJNHAEH@xmlNewTextWriterPushParser?5?3?5er@ DB 'xmlNewTextWrit'
	DB	'erPushParser : error at xmlNewTextWriter!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EA@BHKIBNFO@xmlNewTextWriterPushParser?5?3?5er@
CONST	SEGMENT
??_C@_0EA@BHKIBNFO@xmlNewTextWriterPushParser?5?3?5er@ DB 'xmlNewTextWrit'
	DB	'erPushParser : error at xmlOutputBufferCreateIO!', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDJJPOLB@xmlNewTextWriterPushParser?5?3?5in@
CONST	SEGMENT
??_C@_0CP@MDJJPOLB@xmlNewTextWriterPushParser?5?3?5in@ DB 'xmlNewTextWrit'
	DB	'erPushParser : invalid context!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@HOKLKMGC@xmlNewTextWriterMemory?5?3?5out?5of@
CONST	SEGMENT
??_C@_0CJ@HOKLKMGC@xmlNewTextWriterMemory?5?3?5out?5of@ DB 'xmlNewTextWri'
	DB	'terMemory : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@DOKHFPFK@xmlNewTextWriterFilename?5?3?5out?5@
CONST	SEGMENT
??_C@_0CL@DOKHFPFK@xmlNewTextWriterFilename?5?3?5out?5@ DB 'xmlNewTextWri'
	DB	'terFilename : out of memory!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@BPKCIIPG@xmlNewTextWriterFilename?5?3?5cann@
CONST	SEGMENT
??_C@_0CM@BPKCIIPG@xmlNewTextWriterFilename?5?3?5cann@ DB 'xmlNewTextWrit'
	DB	'erFilename : cannot open uri', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BLMOIHCP@xmlNewTextWriter?5?3?5out?5of?5memor@
CONST	SEGMENT
??_C@_0CD@BLMOIHCP@xmlNewTextWriter?5?3?5out?5of?5memor@ DB 'xmlNewTextWr'
	DB	'iter : out of memory!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlOutputBufferWriteBinHex
_TEXT	SEGMENT
_i$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_out$ = 8						; size = 4
_len$ = 12						; size = 4
_data$ = 16						; size = 4
_xmlOutputBufferWriteBinHex PROC			; COMDAT

; 1674 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1675 :     int count;
; 1676 :     int sum;
; 1677 :     static char hex[16] =
; 1678 : 	{'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
; 1679 :     int i;
; 1680 : 
; 1681 :     if ((out == NULL) || (data == NULL) || (len < 0)) {

	cmp	DWORD PTR _out$[ebp], 0
	je	SHORT $LN6@xmlOutputB
	cmp	DWORD PTR _data$[ebp], 0
	je	SHORT $LN6@xmlOutputB
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN5@xmlOutputB
$LN6@xmlOutputB:

; 1682 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlOutputB
$LN5@xmlOutputB:

; 1683 :     }
; 1684 : 
; 1685 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1686 :     for (i = 0; i < len; i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@xmlOutputB
$LN2@xmlOutputB:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@xmlOutputB:
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	SHORT $LN3@xmlOutputB

; 1687 :         count =

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx]
	sar	eax, 4
	add	eax, OFFSET ?hex@?1??xmlOutputBufferWriteBinHex@@9@9
	push	eax
	push	1
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1688 :             xmlOutputBufferWrite(out, 1,
; 1689 :                                  (const char *) &hex[data[i] >> 4]);
; 1690 :         if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN7@xmlOutputB

; 1691 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlOutputB
$LN7@xmlOutputB:

; 1692 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1693 :         count =

	mov	eax, DWORD PTR _data$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax]
	and	ecx, 15					; 0000000fH
	add	ecx, OFFSET ?hex@?1??xmlOutputBufferWriteBinHex@@9@9
	push	ecx
	push	1
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1694 :             xmlOutputBufferWrite(out, 1,
; 1695 :                                  (const char *) &hex[data[i] & 0xF]);
; 1696 :         if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN8@xmlOutputB

; 1697 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlOutputB
$LN8@xmlOutputB:

; 1698 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1699 :     }

	jmp	$LN2@xmlOutputB
$LN3@xmlOutputB:

; 1700 : 
; 1701 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlOutputB:

; 1702 : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlOutputBufferWriteBinHex ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlWriterErrMsgInt
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_error$ = 12						; size = 4
_msg$ = 16						; size = 4
_val$ = 20						; size = 4
_xmlWriterErrMsgInt PROC				; COMDAT

; 159  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 160  :     if (ctxt != NULL) {

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN2@xmlWriterE

; 161  : 	__xmlRaiseError(NULL, NULL, NULL, ctxt->ctxt,

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	push	0
	push	0
	push	0
	push	0
	push	0
	push	3
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	push	25					; 00000019H
	push	0
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	push	0
	push	0
	push	0
	call	___xmlRaiseError
	add	esp, 68					; 00000044H

; 162  : 	            NULL, XML_FROM_WRITER, error, XML_ERR_FATAL,
; 163  : 		    NULL, 0, NULL, NULL, NULL, val, 0, msg, val);
; 164  :     } else {

	jmp	SHORT $LN1@xmlWriterE
$LN2@xmlWriterE:

; 165  : 	__xmlRaiseError(NULL, NULL, NULL, NULL, NULL, XML_FROM_WRITER, error,

	mov	eax, DWORD PTR _val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _val$[ebp]
	push	edx
	push	0
	push	0
	push	0
	push	0
	push	0
	push	3
	mov	eax, DWORD PTR _error$[ebp]
	push	eax
	push	25					; 00000019H
	push	0
	push	0
	push	0
	push	0
	push	0
	call	___xmlRaiseError
	add	esp, 68					; 00000044H
$LN1@xmlWriterE:

; 166  :                     XML_ERR_FATAL, NULL, 0, NULL, NULL, NULL, val, 0, msg, val);
; 167  :     }
; 168  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlWriterErrMsgInt ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlWriterErrMsg
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_error$ = 12						; size = 4
_msg$ = 16						; size = 4
_xmlWriterErrMsg PROC					; COMDAT

; 136  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 137  :     if (ctxt != NULL) {

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN2@xmlWriterE

; 138  : 	__xmlRaiseError(NULL, NULL, NULL, ctxt->ctxt,

	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	3
	mov	ecx, DWORD PTR _error$[ebp]
	push	ecx
	push	25					; 00000019H
	push	0
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+32]
	push	eax
	push	0
	push	0
	push	0
	call	___xmlRaiseError
	add	esp, 68					; 00000044H

; 139  : 	            NULL, XML_FROM_WRITER, error, XML_ERR_FATAL,
; 140  : 		    NULL, 0, NULL, NULL, NULL, 0, 0, "%s", msg);
; 141  :     } else {

	jmp	SHORT $LN1@xmlWriterE
$LN2@xmlWriterE:

; 142  : 	__xmlRaiseError(NULL, NULL, NULL, NULL, NULL, XML_FROM_WRITER, error,

	mov	ecx, DWORD PTR _msg$[ebp]
	push	ecx
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	0
	push	3
	mov	edx, DWORD PTR _error$[ebp]
	push	edx
	push	25					; 00000019H
	push	0
	push	0
	push	0
	push	0
	push	0
	call	___xmlRaiseError
	add	esp, 68					; 00000044H
$LN1@xmlWriterE:

; 143  :                     XML_ERR_FATAL, NULL, 0, NULL, NULL, NULL, 0, 0, "%s", msg);
; 144  :     }
; 145  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlWriterErrMsg ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterHandleStateDependencies
_TEXT	SEGMENT
tv74 = -24						; size = 4
_extra$ = -16						; size = 3
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_p$ = 12						; size = 4
_xmlTextWriterHandleStateDependencies PROC		; COMDAT

; 4673 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4674 :     int count;
; 4675 :     int sum;
; 4676 :     char extra[3];
; 4677 : 
; 4678 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 4679 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 4680 : 
; 4681 :     if (p == NULL)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 4682 :         return 0;

	xor	eax, eax
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 4683 : 
; 4684 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 4685 :     extra[0] = extra[1] = extra[2] = '\0';

	mov	eax, 1
	shl	eax, 1
	mov	BYTE PTR _extra$[ebp+eax], 0
	mov	ecx, 1
	shl	ecx, 0
	mov	BYTE PTR _extra$[ebp+ecx], 0
	mov	edx, 1
	imul	eax, edx, 0
	mov	BYTE PTR _extra$[ebp+eax], 0

; 4686 :     if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN6@xmlTextWri

; 4687 :         sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 4688 :         switch (p->state) {

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv74[ebp], edx
	mov	eax, DWORD PTR tv74[ebp]
	sub	eax, 1
	mov	DWORD PTR tv74[ebp], eax
	cmp	DWORD PTR tv74[ebp], 14			; 0000000eH
	ja	$LN6@xmlTextWri
	mov	ecx, DWORD PTR tv74[ebp]
	movzx	edx, BYTE PTR $LN18@xmlTextWri[ecx]
	jmp	DWORD PTR $LN22@xmlTextWri[edx*4]
$LN7@xmlTextWri:

; 4689 :             case XML_TEXTWRITER_NAME:
; 4690 :                 /* Output namespace declarations */
; 4691 :                 count = xmlTextWriterOutputNSDecl(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterOutputNSDecl
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 4692 :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 4693 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN8@xmlTextWri:

; 4694 :                 sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 4695 :                 extra[0] = '>';

	mov	edx, 1
	imul	eax, edx, 0
	mov	BYTE PTR _extra$[ebp+eax], 62		; 0000003eH

; 4696 :                 p->state = XML_TEXTWRITER_TEXT;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+4], 3

; 4697 :                 break;

	jmp	$LN6@xmlTextWri
$LN9@xmlTextWri:

; 4698 :             case XML_TEXTWRITER_PI:
; 4699 :                 extra[0] = ' ';

	mov	edx, 1
	imul	eax, edx, 0
	mov	BYTE PTR _extra$[ebp+eax], 32		; 00000020H

; 4700 :                 p->state = XML_TEXTWRITER_PI_TEXT;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+4], 5

; 4701 :                 break;

	jmp	$LN6@xmlTextWri
$LN10@xmlTextWri:

; 4702 :             case XML_TEXTWRITER_DTD:
; 4703 :                 extra[0] = ' ';

	mov	edx, 1
	imul	eax, edx, 0
	mov	BYTE PTR _extra$[ebp+eax], 32		; 00000020H

; 4704 :                 extra[1] = '[';

	mov	ecx, 1
	shl	ecx, 0
	mov	BYTE PTR _extra$[ebp+ecx], 91		; 0000005bH

; 4705 :                 p->state = XML_TEXTWRITER_DTD_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 8

; 4706 :                 break;

	jmp	SHORT $LN6@xmlTextWri
$LN11@xmlTextWri:

; 4707 :             case XML_TEXTWRITER_DTD_ELEM:
; 4708 :                 extra[0] = ' ';

	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR _extra$[ebp+ecx], 32		; 00000020H

; 4709 :                 p->state = XML_TEXTWRITER_DTD_ELEM_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 10			; 0000000aH

; 4710 :                 break;

	jmp	SHORT $LN6@xmlTextWri
$LN12@xmlTextWri:

; 4711 :             case XML_TEXTWRITER_DTD_ATTL:
; 4712 :                 extra[0] = ' ';

	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR _extra$[ebp+ecx], 32		; 00000020H

; 4713 :                 p->state = XML_TEXTWRITER_DTD_ATTL_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 12			; 0000000cH

; 4714 :                 break;

	jmp	SHORT $LN6@xmlTextWri
$LN13@xmlTextWri:

; 4715 :             case XML_TEXTWRITER_DTD_ENTY:
; 4716 :             case XML_TEXTWRITER_DTD_PENT:
; 4717 :                 extra[0] = ' ';

	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR _extra$[ebp+ecx], 32		; 00000020H

; 4718 :                 extra[1] = writer->qchar;

	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _writer$[ebp]
	mov	cl, BYTE PTR [eax+28]
	mov	BYTE PTR _extra$[ebp+edx], cl

; 4719 :                 p->state = XML_TEXTWRITER_DTD_ENTY_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 14			; 0000000eH
$LN6@xmlTextWri:

; 4720 :                 break;
; 4721 :             default:
; 4722 :                 break;
; 4723 :         }
; 4724 :     }
; 4725 : 
; 4726 :     if (*extra != '\0') {

	mov	eax, 1
	imul	ecx, eax, 0
	movsx	edx, BYTE PTR _extra$[ebp+ecx]
	test	edx, edx
	je	SHORT $LN15@xmlTextWri

; 4727 :         count = xmlOutputBufferWriteString(writer->out, extra);

	lea	eax, DWORD PTR _extra$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4728 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 4729 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN16@xmlTextWri:

; 4730 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN15@xmlTextWri:

; 4731 :     }
; 4732 : 
; 4733 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 4734 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@xmlTextWri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@xmlTextWri:
	DD	1
	DD	$LN20@xmlTextWri
$LN20@xmlTextWri:
	DD	-16					; fffffff0H
	DD	3
	DD	$LN19@xmlTextWri
$LN19@xmlTextWri:
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	0
	npad	2
$LN22@xmlTextWri:
	DD	$LN7@xmlTextWri
	DD	$LN9@xmlTextWri
	DD	$LN10@xmlTextWri
	DD	$LN11@xmlTextWri
	DD	$LN12@xmlTextWri
	DD	$LN13@xmlTextWri
	DD	$LN6@xmlTextWri
$LN18@xmlTextWri:
	DB	0
	DB	6
	DB	6
	DB	1
	DB	6
	DB	6
	DB	2
	DB	6
	DB	3
	DB	6
	DB	4
	DB	6
	DB	5
	DB	6
	DB	5
_xmlTextWriterHandleStateDependencies ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteIndent
_TEXT	SEGMENT
_ret$ = -12						; size = 4
_i$ = -8						; size = 4
_lksize$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterWriteIndent PROC				; COMDAT

; 4643 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4644 :     int lksize;
; 4645 :     int i;
; 4646 :     int ret;
; 4647 : 
; 4648 :     lksize = xmlListSize(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListSize
	add	esp, 4
	mov	DWORD PTR _lksize$[ebp], eax

; 4649 :     if (lksize < 1)

	cmp	DWORD PTR _lksize$[ebp], 1
	jge	SHORT $LN5@xmlTextWri

; 4650 :         return (-1);            /* list is empty */

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 4651 :     for (i = 0; i < (lksize - 1); i++) {

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@xmlTextWri
$LN2@xmlTextWri:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN4@xmlTextWri:
	mov	eax, DWORD PTR _lksize$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN3@xmlTextWri

; 4652 :         ret = xmlOutputBufferWriteString(writer->out,

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax

; 4653 :                                          (const char *) writer->ichar);
; 4654 :         if (ret == -1)

	cmp	DWORD PTR _ret$[ebp], -1
	jne	SHORT $LN6@xmlTextWri

; 4655 :             return (-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 4656 :     }

	jmp	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 4657 : 
; 4658 :     return (lksize - 1);

	mov	eax, DWORD PTR _lksize$[ebp]
	sub	eax, 1
$LN1@xmlTextWri:

; 4659 : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteIndent ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartDocumentCallback
_TEXT	SEGMENT
tv90 = -12						; size = 4
_doc$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlTextWriterStartDocumentCallback PROC		; COMDAT

; 4510 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4511 :     xmlParserCtxtPtr ctxt = (xmlParserCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 4512 :     xmlDocPtr doc;
; 4513 : 
; 4514 :     if (ctxt->html) {

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+32], 0
	je	$LN2@xmlTextWri

; 4515 : #ifdef LIBXML_HTML_ENABLED
; 4516 :         if (ctxt->myDoc == NULL)

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN4@xmlTextWri

; 4517 :             ctxt->myDoc = htmlNewDocNoDtD(NULL, NULL);

	push	0
	push	0
	call	_htmlNewDocNoDtD
	add	esp, 8
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN4@xmlTextWri:

; 4518 :         if (ctxt->myDoc == NULL) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN5@xmlTextWri

; 4519 :             if ((ctxt->sax != NULL) && (ctxt->sax->error != NULL))

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@xmlTextWri
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	DWORD PTR [edx+88], 0
	je	SHORT $LN6@xmlTextWri

; 4520 :                 ctxt->sax->error(ctxt->userData,

	mov	esi, esp
	push	OFFSET ??_C@_0CE@EPNLGKMK@SAX?4startDocument?$CI?$CJ?3?5out?5of?5mem@
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+88]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@xmlTextWri:

; 4521 :                                  "SAX.startDocument(): out of memory\n");
; 4522 :             ctxt->errNo = XML_ERR_NO_MEMORY;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+84], 2

; 4523 :             ctxt->instate = XML_PARSER_EOF;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+172], -1

; 4524 :             ctxt->disableSAX = 1;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+212], 1

; 4525 :             return;

	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 4526 :         }
; 4527 : #else
; 4528 :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,
; 4529 :                         "libxml2 built without HTML support\n");
; 4530 :         ctxt->errNo = XML_ERR_INTERNAL_ERROR;
; 4531 :         ctxt->instate = XML_PARSER_EOF;
; 4532 :         ctxt->disableSAX = 1;
; 4533 :         return;
; 4534 : #endif
; 4535 :     } else {

	jmp	$LN3@xmlTextWri
$LN2@xmlTextWri:

; 4536 :         doc = ctxt->myDoc;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR _doc$[ebp], eax

; 4537 :         if (doc == NULL)

	cmp	DWORD PTR _doc$[ebp], 0
	jne	SHORT $LN7@xmlTextWri

; 4538 :             doc = ctxt->myDoc = xmlNewDoc(ctxt->version);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_xmlNewDoc
	add	esp, 4
	mov	DWORD PTR tv90[ebp], eax
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR tv90[ebp]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR tv90[ebp]
	mov	DWORD PTR _doc$[ebp], edx
$LN7@xmlTextWri:

; 4539 :         if (doc != NULL) {

	cmp	DWORD PTR _doc$[ebp], 0
	je	SHORT $LN8@xmlTextWri

; 4540 :             if (doc->children == NULL) {

	mov	eax, DWORD PTR _doc$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN10@xmlTextWri

; 4541 :                 if (ctxt->encoding != NULL)

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	je	SHORT $LN11@xmlTextWri

; 4542 :                     doc->encoding = xmlStrdup(ctxt->encoding);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_xmlStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _doc$[ebp]
	mov	DWORD PTR [ecx+60], eax
	jmp	SHORT $LN12@xmlTextWri
$LN11@xmlTextWri:

; 4543 :                 else
; 4544 :                     doc->encoding = NULL;

	mov	edx, DWORD PTR _doc$[ebp]
	mov	DWORD PTR [edx+60], 0
$LN12@xmlTextWri:

; 4545 :                 doc->standalone = ctxt->standalone;

	mov	eax, DWORD PTR _doc$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+40], edx
$LN10@xmlTextWri:

; 4546 :             }
; 4547 :         } else {

	jmp	SHORT $LN3@xmlTextWri
$LN8@xmlTextWri:

; 4548 :             if ((ctxt->sax != NULL) && (ctxt->sax->error != NULL))

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN13@xmlTextWri
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	DWORD PTR [edx+88], 0
	je	SHORT $LN13@xmlTextWri

; 4549 :                 ctxt->sax->error(ctxt->userData,

	mov	esi, esp
	push	OFFSET ??_C@_0CE@EPNLGKMK@SAX?4startDocument?$CI?$CJ?3?5out?5of?5mem@
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+88]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN13@xmlTextWri:

; 4550 :                                  "SAX.startDocument(): out of memory\n");
; 4551 :             ctxt->errNo = XML_ERR_NO_MEMORY;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+84], 2

; 4552 :             ctxt->instate = XML_PARSER_EOF;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+172], -1

; 4553 :             ctxt->disableSAX = 1;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+212], 1

; 4554 :             return;

	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 4555 :         }
; 4556 :     }
; 4557 :     if ((ctxt->myDoc != NULL) && (ctxt->myDoc->URL == NULL) &&
; 4558 :         (ctxt->input != NULL) && (ctxt->input->filename != NULL)) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN1@xmlTextWri
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	DWORD PTR [ecx+72], 0
	jne	SHORT $LN1@xmlTextWri
	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+36], 0
	je	SHORT $LN1@xmlTextWri
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN1@xmlTextWri

; 4559 :         ctxt->myDoc->URL =

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+36]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlCanonicPath
	add	esp, 4
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+72], eax

; 4560 :             xmlCanonicPath((const xmlChar *) ctxt->input->filename);
; 4561 :         if (ctxt->myDoc->URL == NULL)

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+8]
	cmp	DWORD PTR [eax+72], 0
	jne	SHORT $LN1@xmlTextWri

; 4562 :             ctxt->myDoc->URL =

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [edx+72], eax
$LN1@xmlTextWri:

; 4563 :                 xmlStrdup((const xmlChar *) ctxt->input->filename);
; 4564 :     }
; 4565 : }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartDocumentCallback ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlOutputBufferWriteBase64
_TEXT	SEGMENT
_n$1 = -48						; size = 4
_c$2 = -44						; size = 4
_ogroup$3 = -36						; size = 4
_igroup$4 = -24						; size = 3
_sum$ = -16						; size = 4
_count$ = -12						; size = 4
_linelen$ = -8						; size = 4
_i$ = -4						; size = 4
_out$ = 8						; size = 4
_len$ = 12						; size = 4
_data$ = 16						; size = 4
_xmlOutputBufferWriteBase64 PROC			; COMDAT

; 1543 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	edi
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1544 :     static unsigned char dtable[64] =
; 1545 :             {'A','B','C','D','E','F','G','H','I','J','K','L','M',
; 1546 : 	     'N','O','P','Q','R','S','T','U','V','W','X','Y','Z',
; 1547 : 	     'a','b','c','d','e','f','g','h','i','j','k','l','m',
; 1548 : 	     'n','o','p','q','r','s','t','u','v','w','x','y','z',
; 1549 : 	     '0','1','2','3','4','5','6','7','8','9','+','/'};
; 1550 : 
; 1551 :     int i;
; 1552 :     int linelen;
; 1553 :     int count;
; 1554 :     int sum;
; 1555 : 
; 1556 :     if ((out == NULL) || (len < 0) || (data == NULL))

	cmp	DWORD PTR _out$[ebp], 0
	je	SHORT $LN8@xmlOutputB
	cmp	DWORD PTR _len$[ebp], 0
	jl	SHORT $LN8@xmlOutputB
	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN7@xmlOutputB
$LN8@xmlOutputB:

; 1557 :         return(-1);

	or	eax, -1
	jmp	$LN1@xmlOutputB
$LN7@xmlOutputB:

; 1558 : 
; 1559 :     linelen = 0;

	mov	DWORD PTR _linelen$[ebp], 0

; 1560 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1561 : 
; 1562 :     i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN2@xmlOutputB:

; 1563 :     while (1) {

	mov	eax, 1
	test	eax, eax
	je	$LN3@xmlOutputB

; 1564 :         unsigned char igroup[3];
; 1565 :         unsigned char ogroup[4];
; 1566 :         int c;
; 1567 :         int n;
; 1568 : 
; 1569 :         igroup[0] = igroup[1] = igroup[2] = 0;

	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _igroup$4[ebp+ecx], 0
	mov	edx, 1
	shl	edx, 0
	mov	BYTE PTR _igroup$4[ebp+edx], 0
	mov	eax, 1
	imul	ecx, eax, 0
	mov	BYTE PTR _igroup$4[ebp+ecx], 0

; 1570 :         for (n = 0; n < 3 && i < len; n++, i++) {

	mov	DWORD PTR _n$1[ebp], 0
	jmp	SHORT $LN6@xmlOutputB
$LN4@xmlOutputB:
	mov	edx, DWORD PTR _n$1[ebp]
	add	edx, 1
	mov	DWORD PTR _n$1[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@xmlOutputB:
	cmp	DWORD PTR _n$1[ebp], 3
	jge	SHORT $LN5@xmlOutputB
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _len$[ebp]
	jge	SHORT $LN5@xmlOutputB

; 1571 :             c = data[i];

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	DWORD PTR _c$2[ebp], eax

; 1572 :             igroup[n] = (unsigned char) c;

	mov	ecx, DWORD PTR _n$1[ebp]
	mov	dl, BYTE PTR _c$2[ebp]
	mov	BYTE PTR _igroup$4[ebp+ecx], dl

; 1573 :         }

	jmp	SHORT $LN4@xmlOutputB
$LN5@xmlOutputB:

; 1574 : 
; 1575 :         if (n > 0) {

	cmp	DWORD PTR _n$1[ebp], 0
	jle	$LN9@xmlOutputB

; 1576 :             ogroup[0] = dtable[igroup[0] >> 2];

	mov	eax, 1
	imul	ecx, eax, 0
	movzx	edx, BYTE PTR _igroup$4[ebp+ecx]
	sar	edx, 2
	mov	eax, 1
	imul	ecx, eax, 0
	mov	dl, BYTE PTR ?dtable@?1??xmlOutputBufferWriteBase64@@9@9[edx]
	mov	BYTE PTR _ogroup$3[ebp+ecx], dl

; 1577 :             ogroup[1] = dtable[((igroup[0] & 3) << 4) | (igroup[1] >> 4)];

	mov	eax, 1
	imul	ecx, eax, 0
	movzx	edx, BYTE PTR _igroup$4[ebp+ecx]
	and	edx, 3
	shl	edx, 4
	mov	eax, 1
	shl	eax, 0
	movzx	ecx, BYTE PTR _igroup$4[ebp+eax]
	sar	ecx, 4
	or	edx, ecx
	mov	eax, 1
	shl	eax, 0
	mov	cl, BYTE PTR ?dtable@?1??xmlOutputBufferWriteBase64@@9@9[edx]
	mov	BYTE PTR _ogroup$3[ebp+eax], cl

; 1578 :             ogroup[2] =

	mov	edx, 1
	shl	edx, 0
	movzx	eax, BYTE PTR _igroup$4[ebp+edx]
	and	eax, 15					; 0000000fH
	shl	eax, 2
	mov	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR _igroup$4[ebp+ecx]
	sar	edx, 6
	or	eax, edx
	mov	ecx, 1
	shl	ecx, 1
	mov	dl, BYTE PTR ?dtable@?1??xmlOutputBufferWriteBase64@@9@9[eax]
	mov	BYTE PTR _ogroup$3[ebp+ecx], dl

; 1579 :                 dtable[((igroup[1] & 0xF) << 2) | (igroup[2] >> 6)];
; 1580 :             ogroup[3] = dtable[igroup[2] & 0x3F];

	mov	eax, 1
	shl	eax, 1
	movzx	ecx, BYTE PTR _igroup$4[ebp+eax]
	and	ecx, 63					; 0000003fH
	mov	edx, 1
	imul	eax, edx, 3
	mov	cl, BYTE PTR ?dtable@?1??xmlOutputBufferWriteBase64@@9@9[ecx]
	mov	BYTE PTR _ogroup$3[ebp+eax], cl

; 1581 : 
; 1582 :             if (n < 3) {

	cmp	DWORD PTR _n$1[ebp], 3
	jge	SHORT $LN10@xmlOutputB

; 1583 :                 ogroup[3] = '=';

	mov	edx, 1
	imul	eax, edx, 3
	mov	BYTE PTR _ogroup$3[ebp+eax], 61		; 0000003dH

; 1584 :                 if (n < 2) {

	cmp	DWORD PTR _n$1[ebp], 2
	jge	SHORT $LN10@xmlOutputB

; 1585 :                     ogroup[2] = '=';

	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _ogroup$3[ebp+ecx], 61		; 0000003dH
$LN10@xmlOutputB:

; 1586 :                 }
; 1587 :             }
; 1588 : 
; 1589 :             if (linelen >= B64LINELEN) {

	cmp	DWORD PTR _linelen$[ebp], 72		; 00000048H
	jl	SHORT $LN12@xmlOutputB

; 1590 :                 count = xmlOutputBufferWrite(out, 2, B64CRLF);

	push	OFFSET ??_C@_02PCIJFNDE@?$AN?6@
	push	2
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1591 :                 if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN13@xmlOutputB

; 1592 :                     return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlOutputB
$LN13@xmlOutputB:

; 1593 :                 sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1594 :                 linelen = 0;

	mov	DWORD PTR _linelen$[ebp], 0
$LN12@xmlOutputB:

; 1595 :             }
; 1596 :             count = xmlOutputBufferWrite(out, 4, (const char *) ogroup);

	lea	ecx, DWORD PTR _ogroup$3[ebp]
	push	ecx
	push	4
	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1597 :             if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN14@xmlOutputB

; 1598 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlOutputB
$LN14@xmlOutputB:

; 1599 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1600 : 
; 1601 :             linelen += 4;

	mov	ecx, DWORD PTR _linelen$[ebp]
	add	ecx, 4
	mov	DWORD PTR _linelen$[ebp], ecx
$LN9@xmlOutputB:

; 1602 :         }
; 1603 : 
; 1604 :         if (i >= len)

	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR _len$[ebp]
	jl	SHORT $LN15@xmlOutputB

; 1605 :             break;

	jmp	SHORT $LN3@xmlOutputB
$LN15@xmlOutputB:

; 1606 :     }

	jmp	$LN2@xmlOutputB
$LN3@xmlOutputB:

; 1607 : 
; 1608 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlOutputB:

; 1609 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@xmlOutputB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN20@xmlOutputB:
	DD	2
	DD	$LN19@xmlOutputB
$LN19@xmlOutputB:
	DD	-24					; ffffffe8H
	DD	3
	DD	$LN17@xmlOutputB
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN18@xmlOutputB
$LN18@xmlOutputB:
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	0
$LN17@xmlOutputB:
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	0
_xmlOutputBufferWriteBase64 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterVSprintf
_TEXT	SEGMENT
tv131 = -24						; size = 4
__Result$1 = -20					; size = 4
_locarg$ = -16						; size = 4
_buf$ = -12						; size = 4
_count$ = -8						; size = 4
_size$ = -4						; size = 4
_format$ = 8						; size = 4
_argptr$ = 12						; size = 4
_xmlTextWriterVSprintf PROC				; COMDAT

; 4469 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4470 :     int size;
; 4471 :     int count;
; 4472 :     xmlChar *buf;
; 4473 :     va_list locarg;
; 4474 : 
; 4475 :     size = BUFSIZ;

	mov	DWORD PTR _size$[ebp], 512		; 00000200H

; 4476 :     buf = (xmlChar *) xmlMalloc(size);

	mov	esi, esp
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buf$[ebp], eax

; 4477 :     if (buf == NULL) {

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 4478 :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CI@EEFGHMNP@xmlTextWriterVSprintf?5?3?5out?5of?5@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 4479 :                         "xmlTextWriterVSprintf : out of memory!\n");
; 4480 :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 4481 :     }
; 4482 : 
; 4483 :     VA_COPY(locarg, argptr);

	mov	ecx, DWORD PTR _argptr$[ebp]
	mov	DWORD PTR _locarg$[ebp], ecx
$LN2@xmlTextWri:
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h

; 1440 :         int const _Result = __stdio_common_vsprintf(

	mov	esi, esp
	mov	edx, DWORD PTR _locarg$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _format$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	or	ecx, 2
	mov	edx, DWORD PTR [eax+4]
	push	edx
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Result$1[ebp], eax

; 1441 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1442 :             _Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1443 : 
; 1444 :         return _Result < 0 ? -1 : _Result;

	cmp	DWORD PTR __Result$1[ebp], 0
	jge	SHORT $LN10@xmlTextWri
	mov	DWORD PTR tv131[ebp], -1
	jmp	SHORT $LN8@xmlTextWri
$LN10@xmlTextWri:
	mov	eax, DWORD PTR __Result$1[ebp]
	mov	DWORD PTR tv131[ebp], eax
$LN8@xmlTextWri:
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c

; 4485 :            || (count == size - 1) || (count == size) || (count > size)) {

	mov	ecx, DWORD PTR tv131[ebp]
	mov	DWORD PTR _count$[ebp], ecx
	cmp	DWORD PTR _count$[ebp], 0
	jl	SHORT $LN5@xmlTextWri
	mov	edx, DWORD PTR _size$[ebp]
	sub	edx, 1
	cmp	DWORD PTR _count$[ebp], edx
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _size$[ebp]
	je	SHORT $LN5@xmlTextWri
	mov	ecx, DWORD PTR _count$[ebp]
	cmp	ecx, DWORD PTR _size$[ebp]
	jle	SHORT $LN3@xmlTextWri
$LN5@xmlTextWri:

; 4486 : 	va_end(locarg);

	mov	DWORD PTR _locarg$[ebp], 0

; 4487 :         xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4488 :         size += BUFSIZ;

	mov	eax, DWORD PTR _size$[ebp]
	add	eax, 512				; 00000200H
	mov	DWORD PTR _size$[ebp], eax

; 4489 :         buf = (xmlChar *) xmlMalloc(size);

	mov	esi, esp
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _buf$[ebp], eax

; 4490 :         if (buf == NULL) {

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 4491 :             xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CI@EEFGHMNP@xmlTextWriterVSprintf?5?3?5out?5of?5@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 4492 :                             "xmlTextWriterVSprintf : out of memory!\n");
; 4493 :             return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 4494 :         }
; 4495 : 	VA_COPY(locarg, argptr);

	mov	edx, DWORD PTR _argptr$[ebp]
	mov	DWORD PTR _locarg$[ebp], edx

; 4496 :     }

	jmp	$LN2@xmlTextWri
$LN3@xmlTextWri:

; 4497 :     va_end(locarg);

	mov	DWORD PTR _locarg$[ebp], 0

; 4498 : 
; 4499 :     return buf;

	mov	eax, DWORD PTR _buf$[ebp]
$LN1@xmlTextWri:

; 4500 : }

	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterVSprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterCloseDocCallback
_TEXT	SEGMENT
_rc$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_context$ = 8						; size = 4
_xmlTextWriterCloseDocCallback PROC			; COMDAT

; 4444 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4445 :     xmlParserCtxtPtr ctxt = (xmlParserCtxtPtr) context;

	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 4446 :     int rc;
; 4447 : 
; 4448 :     if ((rc = xmlParseChunk(ctxt, NULL, 0, 1)) != 0) {

	push	1
	push	0
	push	0
	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlParseChunk
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN2@xmlTextWri

; 4449 :         xmlWriterErrMsgInt(NULL, XML_ERR_INTERNAL_ERROR,

	mov	edx, DWORD PTR _rc$[ebp]
	push	edx
	push	OFFSET ??_C@_0DA@LOAGMMIC@xmlTextWriterCloseDocCallback?5?3@
	push	1
	push	0
	call	_xmlWriterErrMsgInt
	add	esp, 16					; 00000010H

; 4450 :                         "xmlTextWriterCloseDocCallback : XML error %d !\n",
; 4451 :                         rc);
; 4452 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 4453 :     }
; 4454 : 
; 4455 :     return 0;

	xor	eax, eax
$LN1@xmlTextWri:

; 4456 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterCloseDocCallback ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDocCallback
_TEXT	SEGMENT
_rc$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_context$ = 8						; size = 4
_str$ = 12						; size = 4
_len$ = 16						; size = 4
_xmlTextWriterWriteDocCallback PROC			; COMDAT

; 4420 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4421 :     xmlParserCtxtPtr ctxt = (xmlParserCtxtPtr) context;

	mov	eax, DWORD PTR _context$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 4422 :     int rc;
; 4423 : 
; 4424 :     if ((rc = xmlParseChunk(ctxt, str, len, 0)) != 0) {

	push	0
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _str$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlParseChunk
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax
	cmp	DWORD PTR _rc$[ebp], 0
	je	SHORT $LN2@xmlTextWri

; 4425 :         xmlWriterErrMsgInt(NULL, XML_ERR_INTERNAL_ERROR,

	mov	ecx, DWORD PTR _rc$[ebp]
	push	ecx
	push	OFFSET ??_C@_0DA@HGAENLDC@xmlTextWriterWriteDocCallback?5?3@
	push	1
	push	0
	call	_xmlWriterErrMsgInt
	add	esp, 16					; 00000010H

; 4426 :                         "xmlTextWriterWriteDocCallback : XML error %d !\n",
; 4427 :                         rc);
; 4428 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 4429 :     }
; 4430 : 
; 4431 :     return len;

	mov	eax, DWORD PTR _len$[ebp]
$LN1@xmlTextWri:

; 4432 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDocCallback ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlCmpTextWriterNsStackEntry
_TEXT	SEGMENT
_rc$ = -12						; size = 4
_p1$ = -8						; size = 4
_p0$ = -4						; size = 4
_data0$ = 8						; size = 4
_data1$ = 12						; size = 4
_xmlCmpTextWriterNsStackEntry PROC			; COMDAT

; 4383 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4384 :     xmlTextWriterNsStackEntry *p0;
; 4385 :     xmlTextWriterNsStackEntry *p1;
; 4386 :     int rc;
; 4387 : 
; 4388 :     if (data0 == data1)

	mov	eax, DWORD PTR _data0$[ebp]
	cmp	eax, DWORD PTR _data1$[ebp]
	jne	SHORT $LN2@xmlCmpText

; 4389 :         return 0;

	xor	eax, eax
	jmp	SHORT $LN1@xmlCmpText
$LN2@xmlCmpText:

; 4390 : 
; 4391 :     if (data0 == 0)

	cmp	DWORD PTR _data0$[ebp], 0
	jne	SHORT $LN3@xmlCmpText

; 4392 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlCmpText
$LN3@xmlCmpText:

; 4393 : 
; 4394 :     if (data1 == 0)

	cmp	DWORD PTR _data1$[ebp], 0
	jne	SHORT $LN4@xmlCmpText

; 4395 :         return 1;

	mov	eax, 1
	jmp	SHORT $LN1@xmlCmpText
$LN4@xmlCmpText:

; 4396 : 
; 4397 :     p0 = (xmlTextWriterNsStackEntry *) data0;

	mov	ecx, DWORD PTR _data0$[ebp]
	mov	DWORD PTR _p0$[ebp], ecx

; 4398 :     p1 = (xmlTextWriterNsStackEntry *) data1;

	mov	edx, DWORD PTR _data1$[ebp]
	mov	DWORD PTR _p1$[ebp], edx

; 4399 : 
; 4400 :     rc = xmlStrcmp(p0->prefix, p1->prefix);

	mov	eax, DWORD PTR _p1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlStrcmp
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax

; 4401 : 
; 4402 :     if ((rc != 0) || (p0->elem != p1->elem))

	cmp	DWORD PTR _rc$[ebp], 0
	jne	SHORT $LN6@xmlCmpText
	mov	ecx, DWORD PTR _p0$[ebp]
	mov	edx, DWORD PTR _p1$[ebp]
	mov	eax, DWORD PTR [ecx+8]
	cmp	eax, DWORD PTR [edx+8]
	je	SHORT $LN5@xmlCmpText
$LN6@xmlCmpText:

; 4403 :         rc = -1;

	mov	DWORD PTR _rc$[ebp], -1
$LN5@xmlCmpText:

; 4404 : 
; 4405 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlCmpText:

; 4406 : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlCmpTextWriterNsStackEntry ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlFreeTextWriterNsStackEntry
_TEXT	SEGMENT
_p$ = -4						; size = 4
_lk$ = 8						; size = 4
_xmlFreeTextWriterNsStackEntry PROC			; COMDAT

; 4357 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4358 :     xmlTextWriterNsStackEntry *p;
; 4359 : 
; 4360 :     p = (xmlTextWriterNsStackEntry *) xmlLinkGetData(lk);

	mov	eax, DWORD PTR _lk$[ebp]
	push	eax
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 4361 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@xmlFreeTex

; 4362 :         return;

	jmp	SHORT $LN1@xmlFreeTex
$LN2@xmlFreeTex:

; 4363 : 
; 4364 :     if (p->prefix != 0)

	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@xmlFreeTex

; 4365 :         xmlFree(p->prefix);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@xmlFreeTex:

; 4366 :     if (p->uri != 0)

	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN4@xmlFreeTex

; 4367 :         xmlFree(p->uri);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@xmlFreeTex:

; 4368 : 
; 4369 :     xmlFree(p);

	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@xmlFreeTex:

; 4370 : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlFreeTextWriterNsStackEntry ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterOutputNSDecl
_TEXT	SEGMENT
_prefix$1 = -24						; size = 4
_namespaceURI$2 = -20					; size = 4
_sum$ = -16						; size = 4
_count$ = -12						; size = 4
_np$ = -8						; size = 4
_lk$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterOutputNSDecl PROC				; COMDAT

; 4312 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4313 :     xmlLinkPtr lk;
; 4314 :     xmlTextWriterNsStackEntry *np;
; 4315 :     int count;
; 4316 :     int sum;
; 4317 : 
; 4318 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0
$LN2@xmlTextWri:

; 4319 :     while (!xmlListEmpty(writer->nsstack)) {

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_xmlListEmpty
	add	esp, 4
	test	eax, eax
	jne	$LN3@xmlTextWri

; 4320 :         xmlChar *namespaceURI = NULL;

	mov	DWORD PTR _namespaceURI$2[ebp], 0

; 4321 :         xmlChar *prefix = NULL;

	mov	DWORD PTR _prefix$1[ebp], 0

; 4322 : 
; 4323 :         lk = xmlListFront(writer->nsstack);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 4324 :         np = (xmlTextWriterNsStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _np$[ebp], eax

; 4325 : 
; 4326 :         if (np != 0) {

	cmp	DWORD PTR _np$[ebp], 0
	je	SHORT $LN4@xmlTextWri

; 4327 :             namespaceURI = xmlStrdup(np->uri);

	mov	edx, DWORD PTR _np$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlStrdup
	add	esp, 4
	mov	DWORD PTR _namespaceURI$2[ebp], eax

; 4328 :             prefix = xmlStrdup(np->prefix);

	mov	ecx, DWORD PTR _np$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlStrdup
	add	esp, 4
	mov	DWORD PTR _prefix$1[ebp], eax
$LN4@xmlTextWri:

; 4329 :         }
; 4330 : 
; 4331 :         xmlListPopFront(writer->nsstack);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_xmlListPopFront
	add	esp, 4

; 4332 : 
; 4333 :         if (np != 0) {

	cmp	DWORD PTR _np$[ebp], 0
	je	SHORT $LN5@xmlTextWri

; 4334 :             count = xmlTextWriterWriteAttribute(writer, prefix, namespaceURI);

	mov	edx, DWORD PTR _namespaceURI$2[ebp]
	push	edx
	mov	eax, DWORD PTR _prefix$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteAttribute
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4335 :             xmlFree(namespaceURI);

	mov	esi, esp
	mov	edx, DWORD PTR _namespaceURI$2[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4336 :             xmlFree(prefix);

	mov	esi, esp
	mov	eax, DWORD PTR _prefix$1[ebp]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 4337 : 
; 4338 :             if (count < 0) {

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN6@xmlTextWri

; 4339 :                 xmlListDelete(writer->nsstack);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_xmlListDelete
	add	esp, 4

; 4340 :                 writer->nsstack = NULL;

	mov	eax, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [eax+8], 0

; 4341 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 4342 :             }
; 4343 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN5@xmlTextWri:

; 4344 :         }
; 4345 :     }

	jmp	$LN2@xmlTextWri
$LN3@xmlTextWri:

; 4346 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 4347 : }

	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterOutputNSDecl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlCmpTextWriterStackEntry
_TEXT	SEGMENT
_p1$ = -8						; size = 4
_p0$ = -4						; size = 4
_data0$ = 8						; size = 4
_data1$ = 12						; size = 4
_xmlCmpTextWriterStackEntry PROC			; COMDAT

; 4281 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4282 :     xmlTextWriterStackEntry *p0;
; 4283 :     xmlTextWriterStackEntry *p1;
; 4284 : 
; 4285 :     if (data0 == data1)

	mov	eax, DWORD PTR _data0$[ebp]
	cmp	eax, DWORD PTR _data1$[ebp]
	jne	SHORT $LN2@xmlCmpText

; 4286 :         return 0;

	xor	eax, eax
	jmp	SHORT $LN1@xmlCmpText
$LN2@xmlCmpText:

; 4287 : 
; 4288 :     if (data0 == 0)

	cmp	DWORD PTR _data0$[ebp], 0
	jne	SHORT $LN3@xmlCmpText

; 4289 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlCmpText
$LN3@xmlCmpText:

; 4290 : 
; 4291 :     if (data1 == 0)

	cmp	DWORD PTR _data1$[ebp], 0
	jne	SHORT $LN4@xmlCmpText

; 4292 :         return 1;

	mov	eax, 1
	jmp	SHORT $LN1@xmlCmpText
$LN4@xmlCmpText:

; 4293 : 
; 4294 :     p0 = (xmlTextWriterStackEntry *) data0;

	mov	ecx, DWORD PTR _data0$[ebp]
	mov	DWORD PTR _p0$[ebp], ecx

; 4295 :     p1 = (xmlTextWriterStackEntry *) data1;

	mov	edx, DWORD PTR _data1$[ebp]
	mov	DWORD PTR _p1$[ebp], edx

; 4296 : 
; 4297 :     return xmlStrcmp(p0->name, p1->name);

	mov	eax, DWORD PTR _p1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _p0$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlStrcmp
	add	esp, 8
$LN1@xmlCmpText:

; 4298 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlCmpTextWriterStackEntry ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlFreeTextWriterStackEntry
_TEXT	SEGMENT
_p$ = -4						; size = 4
_lk$ = 8						; size = 4
_xmlFreeTextWriterStackEntry PROC			; COMDAT

; 4258 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4259 :     xmlTextWriterStackEntry *p;
; 4260 : 
; 4261 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	eax, DWORD PTR _lk$[ebp]
	push	eax
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 4262 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN2@xmlFreeTex

; 4263 :         return;

	jmp	SHORT $LN1@xmlFreeTex
$LN2@xmlFreeTex:

; 4264 : 
; 4265 :     if (p->name != 0)

	mov	ecx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@xmlFreeTex

; 4266 :         xmlFree(p->name);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@xmlFreeTex:

; 4267 :     xmlFree(p);

	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@xmlFreeTex:

; 4268 : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlFreeTextWriterStackEntry ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterFlush
_TEXT	SEGMENT
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterFlush PROC				; COMDAT

; 4232 : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4233 :     int count;
; 4234 : 
; 4235 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 4236 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 4237 : 
; 4238 :     if (writer->out == NULL)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN3@xmlTextWri

; 4239 :         count = 0;

	mov	DWORD PTR _count$[ebp], 0
	jmp	SHORT $LN4@xmlTextWri
$LN3@xmlTextWri:

; 4240 :     else
; 4241 :         count = xmlOutputBufferFlush(writer->out);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferFlush
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax
$LN4@xmlTextWri:

; 4242 : 
; 4243 :     return count;

	mov	eax, DWORD PTR _count$[ebp]
$LN1@xmlTextWri:

; 4244 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterFlush ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterSetQuoteChar
_TEXT	SEGMENT
_writer$ = 8						; size = 4
_quotechar$ = 12					; size = 1
_xmlTextWriterSetQuoteChar PROC				; COMDAT

; 4624 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4625 :     if ((writer == NULL) || ((quotechar != '\'') && (quotechar != '"')))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	movzx	eax, BYTE PTR _quotechar$[ebp]
	cmp	eax, 39					; 00000027H
	je	SHORT $LN2@xmlTextWri
	movzx	ecx, BYTE PTR _quotechar$[ebp]
	cmp	ecx, 34					; 00000022H
	je	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 4626 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 4627 : 
; 4628 :     writer->qchar = quotechar;

	mov	edx, DWORD PTR _writer$[ebp]
	mov	al, BYTE PTR _quotechar$[ebp]
	mov	BYTE PTR [edx+28], al

; 4629 : 
; 4630 :     return 0;

	xor	eax, eax
$LN1@xmlTextWri:

; 4631 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlTextWriterSetQuoteChar ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterSetIndentString
_TEXT	SEGMENT
_writer$ = 8						; size = 4
_str$ = 12						; size = 4
_xmlTextWriterSetIndentString PROC			; COMDAT

; 4599 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4600 :     if ((writer == NULL) || (!str))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _str$[ebp], 0
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 4601 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 4602 : 
; 4603 :     if (writer->ichar != NULL)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN4@xmlTextWri

; 4604 :         xmlFree(writer->ichar);

	mov	esi, esp
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@xmlTextWri:

; 4605 :     writer->ichar = xmlStrdup(str);

	mov	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_xmlStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+24], eax

; 4606 : 
; 4607 :     if (!writer->ichar)

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+24], 0
	jne	SHORT $LN5@xmlTextWri

; 4608 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 4609 :     else
; 4610 :         return 0;

	xor	eax, eax
$LN1@xmlTextWri:

; 4611 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlTextWriterSetIndentString ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterSetIndent
_TEXT	SEGMENT
_writer$ = 8						; size = 4
_indent$ = 12						; size = 4
_xmlTextWriterSetIndent PROC				; COMDAT

; 4578 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4579 :     if ((writer == NULL) || (indent < 0))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _indent$[ebp], 0
	jge	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 4580 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 4581 : 
; 4582 :     writer->indent = indent;

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR _indent$[ebp]
	mov	DWORD PTR [eax+16], ecx

; 4583 :     writer->doindent = 1;

	mov	edx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [edx+20], 1

; 4584 : 
; 4585 :     return 0;

	xor	eax, eax
$LN1@xmlTextWri:

; 4586 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlTextWriterSetIndent ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTDNotation
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_pubid$ = 16						; size = 4
_sysid$ = 20						; size = 4
_xmlTextWriterWriteDTDNotation PROC			; COMDAT

; 4114 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 4115 :     int count;
; 4116 :     int sum;
; 4117 :     xmlLinkPtr lk;
; 4118 :     xmlTextWriterStackEntry *p;
; 4119 : 
; 4120 :     if (writer == NULL || name == NULL || *name == '\0')

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 4121 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 4122 : 
; 4123 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 4124 :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 4125 :     if (lk == 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 4126 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 4127 :     }
; 4128 : 
; 4129 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 4130 :     if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN7@xmlTextWri

; 4131 :         switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 7
	je	SHORT $LN8@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 8
	je	SHORT $LN12@xmlTextWri
	jmp	SHORT $LN13@xmlTextWri
$LN8@xmlTextWri:

; 4132 :             case XML_TEXTWRITER_DTD:
; 4133 :                 count = xmlOutputBufferWriteString(writer->out, " [");

	push	OFFSET ??_C@_02GBLMOEJC@?5?$FL@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4134 :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 4135 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 4136 :                 sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4137 :                 if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN10@xmlTextWri

; 4138 :                     count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4139 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 4140 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 4141 :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN10@xmlTextWri:

; 4142 :                 }
; 4143 :                 p->state = XML_TEXTWRITER_DTD_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 8
$LN12@xmlTextWri:

; 4144 :                 /* fallthrough */
; 4145 :             case XML_TEXTWRITER_DTD_TEXT:
; 4146 :                 break;

	jmp	SHORT $LN7@xmlTextWri
$LN13@xmlTextWri:

; 4147 :             default:
; 4148 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN7@xmlTextWri:

; 4149 :         }
; 4150 :     }
; 4151 : 
; 4152 :     if (writer->indent) {

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN14@xmlTextWri

; 4153 :         count = xmlTextWriterWriteIndent(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 4154 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN15@xmlTextWri

; 4155 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN15@xmlTextWri:

; 4156 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN14@xmlTextWri:

; 4157 :     }
; 4158 : 
; 4159 :     count = xmlOutputBufferWriteString(writer->out, "<!NOTATION ");

	push	OFFSET ??_C@_0M@IOFINGOM@?$DM?$CBNOTATION?5@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4160 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 4161 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN16@xmlTextWri:

; 4162 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 4163 :     count = xmlOutputBufferWriteString(writer->out, (const char *) name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4164 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 4165 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN17@xmlTextWri:

; 4166 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4167 : 
; 4168 :     if (pubid != 0) {

	cmp	DWORD PTR _pubid$[ebp], 0
	je	$LN18@xmlTextWri

; 4169 :         count = xmlOutputBufferWriteString(writer->out, " PUBLIC ");

	push	OFFSET ??_C@_08GBBLECIH@?5PUBLIC?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4170 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 4171 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN19@xmlTextWri:

; 4172 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4173 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	ecx, DWORD PTR _writer$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4174 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN20@xmlTextWri

; 4175 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN20@xmlTextWri:

; 4176 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 4177 :         count =

	mov	edx, DWORD PTR _pubid$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4178 :             xmlOutputBufferWriteString(writer->out, (const char *) pubid);
; 4179 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN21@xmlTextWri

; 4180 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN21@xmlTextWri:

; 4181 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 4182 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4183 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN22@xmlTextWri

; 4184 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN22@xmlTextWri:

; 4185 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN18@xmlTextWri:

; 4186 :     }
; 4187 : 
; 4188 :     if (sysid != 0) {

	cmp	DWORD PTR _sysid$[ebp], 0
	je	$LN23@xmlTextWri

; 4189 :         if (pubid == 0) {

	cmp	DWORD PTR _pubid$[ebp], 0
	jne	SHORT $LN24@xmlTextWri

; 4190 :             count = xmlOutputBufferWriteString(writer->out, " SYSTEM");

	push	OFFSET ??_C@_07FCENLLFI@?5SYSTEM@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4191 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN25@xmlTextWri

; 4192 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN25@xmlTextWri:

; 4193 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN24@xmlTextWri:

; 4194 :         }
; 4195 :         count = xmlOutputBufferWriteString(writer->out, " ");

	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4196 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN26@xmlTextWri

; 4197 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN26@xmlTextWri:

; 4198 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4199 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	ecx, DWORD PTR _writer$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4200 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN27@xmlTextWri

; 4201 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN27@xmlTextWri:

; 4202 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 4203 :         count =

	mov	edx, DWORD PTR _sysid$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4204 :             xmlOutputBufferWriteString(writer->out, (const char *) sysid);
; 4205 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN28@xmlTextWri

; 4206 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN28@xmlTextWri:

; 4207 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 4208 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4209 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN29@xmlTextWri

; 4210 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN29@xmlTextWri:

; 4211 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN23@xmlTextWri:

; 4212 :     }
; 4213 : 
; 4214 :     count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4215 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN30@xmlTextWri

; 4216 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN30@xmlTextWri:

; 4217 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4218 : 
; 4219 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 4220 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTDNotation ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTDEntity
_TEXT	SEGMENT
_writer$ = 8						; size = 4
_pe$ = 12						; size = 4
_name$ = 16						; size = 4
_pubid$ = 20						; size = 4
_sysid$ = 24						; size = 4
_ndataid$ = 28						; size = 4
_content$ = 32						; size = 4
_xmlTextWriterWriteDTDEntity PROC			; COMDAT

; 3861 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3862 :     if ((content == NULL) && (pubid == NULL) && (sysid == NULL))

	cmp	DWORD PTR _content$[ebp], 0
	jne	SHORT $LN2@xmlTextWri
	cmp	DWORD PTR _pubid$[ebp], 0
	jne	SHORT $LN2@xmlTextWri
	cmp	DWORD PTR _sysid$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3863 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3864 :     if ((pe != 0) && (ndataid != NULL))

	cmp	DWORD PTR _pe$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _ndataid$[ebp], 0
	je	SHORT $LN3@xmlTextWri

; 3865 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 3866 : 
; 3867 :     if ((pubid == NULL) && (sysid == NULL))

	cmp	DWORD PTR _pubid$[ebp], 0
	jne	SHORT $LN4@xmlTextWri
	cmp	DWORD PTR _sysid$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 3868 :         return xmlTextWriterWriteDTDInternalEntity(writer, pe, name,

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pe$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteDTDInternalEntity
	add	esp, 16					; 00000010H
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 3869 :                                                    content);
; 3870 : 
; 3871 :     return xmlTextWriterWriteDTDExternalEntity(writer, pe, name, pubid,

	mov	ecx, DWORD PTR _ndataid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sysid$[ebp]
	push	edx
	mov	eax, DWORD PTR _pubid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pe$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteDTDExternalEntity
	add	esp, 24					; 00000018H
$LN1@xmlTextWri:

; 3872 :                                                sysid, ndataid);
; 3873 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTDEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTDExternalEntityContents
_TEXT	SEGMENT
tv79 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_pubid$ = 12						; size = 4
_sysid$ = 16						; size = 4
_ndataid$ = 20						; size = 4
_xmlTextWriterWriteDTDExternalEntityContents PROC	; COMDAT

; 3983 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3984 :     int count;
; 3985 :     int sum;
; 3986 :     xmlLinkPtr lk;
; 3987 :     xmlTextWriterStackEntry *p;
; 3988 : 
; 3989 :     if (writer == NULL) {

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 3990 :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0EI@DDDMEPLI@xmlTextWriterWriteDTDExternalEn@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3991 :                         "xmlTextWriterWriteDTDExternalEntityContents: xmlTextWriterPtr invalid!\n");
; 3992 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 3993 :     }
; 3994 : 
; 3995 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3996 :     lk = xmlListFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 3997 :     if (lk == 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 3998 :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0HK@MIJHHHOH@xmlTextWriterWriteDTDExternalEn@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3999 :                         "xmlTextWriterWriteDTDExternalEntityContents: you must call xmlTextWriterStartDTDEntity before the call to this function!\n");
; 4000 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 4001 :     }
; 4002 : 
; 4003 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 4004 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 4005 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 4006 : 
; 4007 :     switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv79[ebp], eax
	cmp	DWORD PTR tv79[ebp], 13			; 0000000dH
	je	SHORT $LN7@xmlTextWri
	cmp	DWORD PTR tv79[ebp], 15			; 0000000fH
	je	SHORT $LN8@xmlTextWri
	jmp	SHORT $LN10@xmlTextWri
$LN7@xmlTextWri:

; 4008 :         case XML_TEXTWRITER_DTD_ENTY:
; 4009 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN8@xmlTextWri:

; 4010 :         case XML_TEXTWRITER_DTD_PENT:
; 4011 :             if (ndataid != NULL) {

	cmp	DWORD PTR _ndataid$[ebp], 0
	je	SHORT $LN9@xmlTextWri

; 4012 :                 xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0FM@COPKODIE@xmlTextWriterWriteDTDExternalEn@
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 4013 :                                 "xmlTextWriterWriteDTDExternalEntityContents: notation not allowed with parameter entities!\n");
; 4014 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 4015 :             }
; 4016 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN10@xmlTextWri:

; 4017 :         default:
; 4018 :             xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0HK@MIJHHHOH@xmlTextWriterWriteDTDExternalEn@
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 4019 :                             "xmlTextWriterWriteDTDExternalEntityContents: you must call xmlTextWriterStartDTDEntity before the call to this function!\n");
; 4020 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 4021 :     }
; 4022 : 
; 4023 :     if (pubid != 0) {

	cmp	DWORD PTR _pubid$[ebp], 0
	je	$LN11@xmlTextWri

; 4024 :         if (sysid == 0) {

	cmp	DWORD PTR _sysid$[ebp], 0
	jne	SHORT $LN12@xmlTextWri

; 4025 :             xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0EI@PKOPPIFG@xmlTextWriterWriteDTDExternalEn@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 4026 :                             "xmlTextWriterWriteDTDExternalEntityContents: system identifier needed!\n");
; 4027 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN12@xmlTextWri:

; 4028 :         }
; 4029 : 
; 4030 :         count = xmlOutputBufferWriteString(writer->out, " PUBLIC ");

	push	OFFSET ??_C@_08GBBLECIH@?5PUBLIC?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4031 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 4032 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN13@xmlTextWri:

; 4033 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4034 : 
; 4035 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	ecx, DWORD PTR _writer$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4036 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN14@xmlTextWri

; 4037 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN14@xmlTextWri:

; 4038 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 4039 : 
; 4040 :         count =

	mov	edx, DWORD PTR _pubid$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4041 :             xmlOutputBufferWriteString(writer->out, (const char *) pubid);
; 4042 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN15@xmlTextWri

; 4043 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN15@xmlTextWri:

; 4044 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 4045 : 
; 4046 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4047 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 4048 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN16@xmlTextWri:

; 4049 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN11@xmlTextWri:

; 4050 :     }
; 4051 : 
; 4052 :     if (sysid != 0) {

	cmp	DWORD PTR _sysid$[ebp], 0
	je	$LN17@xmlTextWri

; 4053 :         if (pubid == 0) {

	cmp	DWORD PTR _pubid$[ebp], 0
	jne	SHORT $LN18@xmlTextWri

; 4054 :             count = xmlOutputBufferWriteString(writer->out, " SYSTEM");

	push	OFFSET ??_C@_07FCENLLFI@?5SYSTEM@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4055 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 4056 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN19@xmlTextWri:

; 4057 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN18@xmlTextWri:

; 4058 :         }
; 4059 : 
; 4060 :         count = xmlOutputBufferWriteString(writer->out, " ");

	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4061 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN20@xmlTextWri

; 4062 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN20@xmlTextWri:

; 4063 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4064 : 
; 4065 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	ecx, DWORD PTR _writer$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4066 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN21@xmlTextWri

; 4067 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN21@xmlTextWri:

; 4068 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 4069 : 
; 4070 :         count =

	mov	edx, DWORD PTR _sysid$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4071 :             xmlOutputBufferWriteString(writer->out, (const char *) sysid);
; 4072 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN22@xmlTextWri

; 4073 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN22@xmlTextWri:

; 4074 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 4075 : 
; 4076 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 4077 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN23@xmlTextWri

; 4078 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN23@xmlTextWri:

; 4079 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN17@xmlTextWri:

; 4080 :     }
; 4081 : 
; 4082 :     if (ndataid != NULL) {

	cmp	DWORD PTR _ndataid$[ebp], 0
	je	SHORT $LN24@xmlTextWri

; 4083 :         count = xmlOutputBufferWriteString(writer->out, " NDATA ");

	push	OFFSET ??_C@_07CGHGCOMH@?5NDATA?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4084 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN25@xmlTextWri

; 4085 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN25@xmlTextWri:

; 4086 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 4087 : 
; 4088 :         count =

	mov	ecx, DWORD PTR _ndataid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 4089 :             xmlOutputBufferWriteString(writer->out,
; 4090 :                                        (const char *) ndataid);
; 4091 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN26@xmlTextWri

; 4092 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN26@xmlTextWri:

; 4093 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN24@xmlTextWri:

; 4094 :     }
; 4095 : 
; 4096 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 4097 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTDExternalEntityContents ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTDExternalEntity
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_pe$ = 12						; size = 4
_name$ = 16						; size = 4
_pubid$ = 20						; size = 4
_sysid$ = 24						; size = 4
_ndataid$ = 28						; size = 4
_xmlTextWriterWriteDTDExternalEntity PROC		; COMDAT

; 3937 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3938 :     int count;
; 3939 :     int sum;
; 3940 : 
; 3941 :     if (((pubid == NULL) && (sysid == NULL)))

	cmp	DWORD PTR _pubid$[ebp], 0
	jne	SHORT $LN2@xmlTextWri
	cmp	DWORD PTR _sysid$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3942 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 3943 :     if ((pe != 0) && (ndataid != NULL))

	cmp	DWORD PTR _pe$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _ndataid$[ebp], 0
	je	SHORT $LN3@xmlTextWri

; 3944 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN3@xmlTextWri:

; 3945 : 
; 3946 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3947 :     count = xmlTextWriterStartDTDEntity(writer, pe, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterStartDTDEntity
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 3948 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 3949 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 3950 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 3951 : 
; 3952 :     count =

	mov	ecx, DWORD PTR _ndataid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _sysid$[ebp]
	push	edx
	mov	eax, DWORD PTR _pubid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteDTDExternalEntityContents
	add	esp, 16					; 00000010H
	mov	DWORD PTR _count$[ebp], eax

; 3953 :         xmlTextWriterWriteDTDExternalEntityContents(writer, pubid, sysid,
; 3954 :                                                     ndataid);
; 3955 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN5@xmlTextWri

; 3956 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 3957 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3958 : 
; 3959 :     count = xmlTextWriterEndDTDEntity(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndDTDEntity
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3960 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN6@xmlTextWri

; 3961 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 3962 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3963 : 
; 3964 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3965 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTDExternalEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTDInternalEntity
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_pe$ = 12						; size = 4
_name$ = 16						; size = 4
_content$ = 20						; size = 4
_xmlTextWriterWriteDTDInternalEntity PROC		; COMDAT

; 3891 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3892 :     int count;
; 3893 :     int sum;
; 3894 : 
; 3895 :     if ((name == NULL) || (*name == '\0') || (content == NULL))

	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _content$[ebp], 0
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 3896 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3897 : 
; 3898 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3899 :     count = xmlTextWriterStartDTDEntity(writer, pe, name);

	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _pe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterStartDTDEntity
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 3900 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 3901 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 3902 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3903 : 
; 3904 :     count = xmlTextWriterWriteString(writer, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3905 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 3906 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 3907 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3908 : 
; 3909 :     count = xmlTextWriterEndDTDEntity(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndDTDEntity
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3910 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN6@xmlTextWri

; 3911 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 3912 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3913 : 
; 3914 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3915 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTDInternalEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatDTDInternalEntity
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_pe$ = 12						; size = 4
_name$ = 16						; size = 4
_format$ = 20						; size = 4
_argptr$ = 24						; size = 4
_xmlTextWriterWriteVFormatDTDInternalEntity PROC	; COMDAT

; 3822 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3823 :     int rc;
; 3824 :     xmlChar *buf;
; 3825 : 
; 3826 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3827 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3828 : 
; 3829 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 3830 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 3831 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 3832 : 
; 3833 :     rc = xmlTextWriterWriteDTDInternalEntity(writer, pe, name, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteDTDInternalEntity
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax

; 3834 : 
; 3835 :     xmlFree(buf);

	mov	esi, esp
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3836 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 3837 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatDTDInternalEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatDTDInternalEntity
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_pe$ = 12						; size = 4
_name$ = 16						; size = 4
_format$ = 20						; size = 4
_xmlTextWriterWriteFormatDTDInternalEntity PROC		; COMDAT

; 3791 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3792 :     int rc;
; 3793 :     va_list ap;
; 3794 : 
; 3795 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 3796 : 
; 3797 :     rc = xmlTextWriterWriteVFormatDTDInternalEntity(writer, pe, name,

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pe$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteVFormatDTDInternalEntity
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax

; 3798 :                                                     format, ap);
; 3799 : 
; 3800 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 3801 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 3802 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatDTDInternalEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndDTDEntity
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndDTDEntity PROC				; COMDAT

; 3727 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3728 :     int count;
; 3729 :     int sum;
; 3730 :     xmlLinkPtr lk;
; 3731 :     xmlTextWriterStackEntry *p;
; 3732 : 
; 3733 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 3734 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 3735 : 
; 3736 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3737 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 3738 :     if (lk == 0)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 3739 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 3740 : 
; 3741 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 3742 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 3743 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 3744 : 
; 3745 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 13			; 0000000dH
	je	SHORT $LN9@xmlTextWri
	cmp	DWORD PTR tv73[ebp], 14			; 0000000eH
	je	SHORT $LN7@xmlTextWri
	cmp	DWORD PTR tv73[ebp], 15			; 0000000fH
	je	SHORT $LN9@xmlTextWri
	jmp	SHORT $LN11@xmlTextWri
$LN7@xmlTextWri:

; 3746 :         case XML_TEXTWRITER_DTD_ENTY_TEXT:
; 3747 :             count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	edx, DWORD PTR _writer$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 3748 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 3749 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 3750 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN9@xmlTextWri:

; 3751 :             /* Falls through. */
; 3752 :         case XML_TEXTWRITER_DTD_ENTY:
; 3753 :         case XML_TEXTWRITER_DTD_PENT:
; 3754 :             count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3755 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN10@xmlTextWri

; 3756 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN10@xmlTextWri:

; 3757 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3758 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN11@xmlTextWri:

; 3759 :         default:
; 3760 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3761 :     }
; 3762 : 
; 3763 :     if (writer->indent) {

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN12@xmlTextWri

; 3764 :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3765 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 3766 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN13@xmlTextWri:

; 3767 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN12@xmlTextWri:

; 3768 :     }
; 3769 : 
; 3770 :     xmlListPopFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListPopFront
	add	esp, 4

; 3771 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3772 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndDTDEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartDTDEntity
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_pe$ = 12						; size = 4
_name$ = 16						; size = 4
_xmlTextWriterStartDTDEntity PROC			; COMDAT

; 3628 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3629 :     int count;
; 3630 :     int sum;
; 3631 :     xmlLinkPtr lk;
; 3632 :     xmlTextWriterStackEntry *p;
; 3633 : 
; 3634 :     if (writer == NULL || name == NULL || *name == '\0')

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 3635 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 3636 : 
; 3637 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3638 :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 3639 :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	$LN6@xmlTextWri

; 3640 : 
; 3641 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 3642 :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN6@xmlTextWri

; 3643 :             switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 0
	je	SHORT $LN12@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 7
	je	SHORT $LN8@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 8
	je	SHORT $LN12@xmlTextWri
	jmp	SHORT $LN13@xmlTextWri
$LN8@xmlTextWri:

; 3644 :                 case XML_TEXTWRITER_DTD:
; 3645 :                     count = xmlOutputBufferWriteString(writer->out, " [");

	push	OFFSET ??_C@_02GBLMOEJC@?5?$FL@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3646 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 3647 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 3648 :                     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 3649 :                     if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN10@xmlTextWri

; 3650 :                         count =

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3651 :                             xmlOutputBufferWriteString(writer->out, "\n");
; 3652 :                         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 3653 :                             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 3654 :                         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN10@xmlTextWri:

; 3655 :                     }
; 3656 :                     p->state = XML_TEXTWRITER_DTD_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 8
$LN12@xmlTextWri:

; 3657 :                     /* fallthrough */
; 3658 :                 case XML_TEXTWRITER_DTD_TEXT:
; 3659 :                 case XML_TEXTWRITER_NONE:
; 3660 :                     break;

	jmp	SHORT $LN6@xmlTextWri
$LN13@xmlTextWri:

; 3661 :                 default:
; 3662 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 3663 :             }
; 3664 :         }
; 3665 :     }
; 3666 : 
; 3667 :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 3668 :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 3669 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN14@xmlTextWri

; 3670 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CP@HLOPJJJB@xmlTextWriterStartDTDElement?5?3?5@
	push	2
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3671 :                         "xmlTextWriterStartDTDElement : out of memory!\n");
; 3672 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN14@xmlTextWri:

; 3673 :     }
; 3674 : 
; 3675 :     p->name = xmlStrdup(name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_xmlStrdup
	add	esp, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax

; 3676 :     if (p->name == 0) {

	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN15@xmlTextWri

; 3677 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CP@HLOPJJJB@xmlTextWriterStartDTDElement?5?3?5@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3678 :                         "xmlTextWriterStartDTDElement : out of memory!\n");
; 3679 :         xmlFree(p);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3680 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN15@xmlTextWri:

; 3681 :     }
; 3682 : 
; 3683 :     if (pe != 0)

	cmp	DWORD PTR _pe$[ebp], 0
	je	SHORT $LN16@xmlTextWri

; 3684 :         p->state = XML_TEXTWRITER_DTD_PENT;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], 15			; 0000000fH
	jmp	SHORT $LN17@xmlTextWri
$LN16@xmlTextWri:

; 3685 :     else
; 3686 :         p->state = XML_TEXTWRITER_DTD_ENTY;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+4], 13			; 0000000dH
$LN17@xmlTextWri:

; 3687 : 
; 3688 :     xmlListPushFront(writer->nodes, p);

	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListPushFront
	add	esp, 8

; 3689 : 
; 3690 :     if (writer->indent) {

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN18@xmlTextWri

; 3691 :         count = xmlTextWriterWriteIndent(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3692 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 3693 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN19@xmlTextWri:

; 3694 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN18@xmlTextWri:

; 3695 :     }
; 3696 : 
; 3697 :     count = xmlOutputBufferWriteString(writer->out, "<!ENTITY ");

	push	OFFSET ??_C@_09POADHIMD@?$DM?$CBENTITY?5@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3698 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN20@xmlTextWri

; 3699 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN20@xmlTextWri:

; 3700 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3701 : 
; 3702 :     if (pe != 0) {

	cmp	DWORD PTR _pe$[ebp], 0
	je	SHORT $LN21@xmlTextWri

; 3703 :         count = xmlOutputBufferWriteString(writer->out, "% ");

	push	OFFSET ??_C@_02KLLMIGEE@?$CF?5@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3704 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN22@xmlTextWri

; 3705 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN22@xmlTextWri:

; 3706 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN21@xmlTextWri:

; 3707 :     }
; 3708 : 
; 3709 :     count = xmlOutputBufferWriteString(writer->out, (const char *) name);

	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3710 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN23@xmlTextWri

; 3711 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN23@xmlTextWri:

; 3712 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3713 : 
; 3714 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3715 : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartDTDEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTDAttlist
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_content$ = 16						; size = 4
_xmlTextWriterWriteDTDAttlist PROC			; COMDAT

; 3589 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3590 :     int count;
; 3591 :     int sum;
; 3592 : 
; 3593 :     if (content == NULL)

	cmp	DWORD PTR _content$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3594 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3595 : 
; 3596 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3597 :     count = xmlTextWriterStartDTDAttlist(writer, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterStartDTDAttlist
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3598 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN3@xmlTextWri

; 3599 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 3600 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3601 : 
; 3602 :     count = xmlTextWriterWriteString(writer, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3603 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 3604 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 3605 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3606 : 
; 3607 :     count = xmlTextWriterEndDTDAttlist(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndDTDAttlist
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3608 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 3609 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 3610 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3611 : 
; 3612 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3613 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTDAttlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatDTDAttlist
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_argptr$ = 20						; size = 4
_xmlTextWriterWriteVFormatDTDAttlist PROC		; COMDAT

; 3559 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3560 :     int rc;
; 3561 :     xmlChar *buf;
; 3562 : 
; 3563 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3564 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3565 : 
; 3566 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 3567 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 3568 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 3569 : 
; 3570 :     rc = xmlTextWriterWriteDTDAttlist(writer, name, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteDTDAttlist
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 3571 : 
; 3572 :     xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3573 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 3574 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatDTDAttlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatDTDAttlist
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_xmlTextWriterWriteFormatDTDAttlist PROC		; COMDAT

; 3532 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3533 :     int rc;
; 3534 :     va_list ap;
; 3535 : 
; 3536 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 3537 : 
; 3538 :     rc = xmlTextWriterWriteVFormatDTDAttlist(writer, name, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteVFormatDTDAttlist
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax

; 3539 : 
; 3540 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 3541 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 3542 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatDTDAttlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndDTDAttlist
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndDTDAttlist PROC			; COMDAT

; 3476 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3477 :     int count;
; 3478 :     int sum;
; 3479 :     xmlLinkPtr lk;
; 3480 :     xmlTextWriterStackEntry *p;
; 3481 : 
; 3482 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 3483 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 3484 : 
; 3485 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3486 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 3487 :     if (lk == 0)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 3488 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 3489 : 
; 3490 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 3491 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 3492 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 3493 : 
; 3494 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 11			; 0000000bH
	jl	SHORT $LN9@xmlTextWri
	cmp	DWORD PTR tv73[ebp], 12			; 0000000cH
	jle	SHORT $LN7@xmlTextWri
	jmp	SHORT $LN9@xmlTextWri
$LN7@xmlTextWri:

; 3495 :         case XML_TEXTWRITER_DTD_ATTL:
; 3496 :         case XML_TEXTWRITER_DTD_ATTL_TEXT:
; 3497 :             count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3498 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 3499 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 3500 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3501 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN9@xmlTextWri:

; 3502 :         default:
; 3503 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3504 :     }
; 3505 : 
; 3506 :     if (writer->indent) {

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN10@xmlTextWri

; 3507 :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3508 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 3509 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN11@xmlTextWri:

; 3510 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN10@xmlTextWri:

; 3511 :     }
; 3512 : 
; 3513 :     xmlListPopFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListPopFront
	add	esp, 4

; 3514 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3515 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndDTDAttlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartDTDAttlist
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_xmlTextWriterStartDTDAttlist PROC			; COMDAT

; 3389 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3390 :     int count;
; 3391 :     int sum;
; 3392 :     xmlLinkPtr lk;
; 3393 :     xmlTextWriterStackEntry *p;
; 3394 : 
; 3395 :     if (writer == NULL || name == NULL || *name == '\0')

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 3396 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 3397 : 
; 3398 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3399 :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 3400 :     if (lk == 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 3401 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 3402 :     }
; 3403 : 
; 3404 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 3405 :     if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN7@xmlTextWri

; 3406 :         switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 0
	je	SHORT $LN12@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 7
	je	SHORT $LN8@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 8
	je	SHORT $LN12@xmlTextWri
	jmp	SHORT $LN13@xmlTextWri
$LN8@xmlTextWri:

; 3407 :             case XML_TEXTWRITER_DTD:
; 3408 :                 count = xmlOutputBufferWriteString(writer->out, " [");

	push	OFFSET ??_C@_02GBLMOEJC@?5?$FL@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3409 :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 3410 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 3411 :                 sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 3412 :                 if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN10@xmlTextWri

; 3413 :                     count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3414 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 3415 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 3416 :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN10@xmlTextWri:

; 3417 :                 }
; 3418 :                 p->state = XML_TEXTWRITER_DTD_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 8
$LN12@xmlTextWri:

; 3419 :                 /* fallthrough */
; 3420 :             case XML_TEXTWRITER_DTD_TEXT:
; 3421 :             case XML_TEXTWRITER_NONE:
; 3422 :                 break;

	jmp	SHORT $LN7@xmlTextWri
$LN13@xmlTextWri:

; 3423 :             default:
; 3424 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN7@xmlTextWri:

; 3425 :         }
; 3426 :     }
; 3427 : 
; 3428 :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 3429 :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 3430 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN14@xmlTextWri

; 3431 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CP@EGINGCOH@xmlTextWriterStartDTDAttlist?5?3?5@
	push	2
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3432 :                         "xmlTextWriterStartDTDAttlist : out of memory!\n");
; 3433 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN14@xmlTextWri:

; 3434 :     }
; 3435 : 
; 3436 :     p->name = xmlStrdup(name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_xmlStrdup
	add	esp, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax

; 3437 :     if (p->name == 0) {

	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN15@xmlTextWri

; 3438 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CP@EGINGCOH@xmlTextWriterStartDTDAttlist?5?3?5@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3439 :                         "xmlTextWriterStartDTDAttlist : out of memory!\n");
; 3440 :         xmlFree(p);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3441 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN15@xmlTextWri:

; 3442 :     }
; 3443 :     p->state = XML_TEXTWRITER_DTD_ATTL;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], 11			; 0000000bH

; 3444 : 
; 3445 :     xmlListPushFront(writer->nodes, p);

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPushFront
	add	esp, 8

; 3446 : 
; 3447 :     if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN16@xmlTextWri

; 3448 :         count = xmlTextWriterWriteIndent(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3449 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 3450 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN17@xmlTextWri:

; 3451 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN16@xmlTextWri:

; 3452 :     }
; 3453 : 
; 3454 :     count = xmlOutputBufferWriteString(writer->out, "<!ATTLIST ");

	push	OFFSET ??_C@_0L@NDHICKFH@?$DM?$CBATTLIST?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3455 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN18@xmlTextWri

; 3456 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN18@xmlTextWri:

; 3457 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 3458 :     count = xmlOutputBufferWriteString(writer->out, (const char *) name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3459 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 3460 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN19@xmlTextWri:

; 3461 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3462 : 
; 3463 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3464 : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartDTDAttlist ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTDElement
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_content$ = 16						; size = 4
_xmlTextWriterWriteDTDElement PROC			; COMDAT

; 3352 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3353 :     int count;
; 3354 :     int sum;
; 3355 : 
; 3356 :     if (content == NULL)

	cmp	DWORD PTR _content$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3357 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3358 : 
; 3359 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3360 :     count = xmlTextWriterStartDTDElement(writer, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterStartDTDElement
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3361 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN3@xmlTextWri

; 3362 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 3363 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3364 : 
; 3365 :     count = xmlTextWriterWriteString(writer, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3366 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 3367 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 3368 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 3369 : 
; 3370 :     count = xmlTextWriterEndDTDElement(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndDTDElement
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3371 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 3372 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 3373 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3374 : 
; 3375 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3376 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTDElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatDTDElement
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_argptr$ = 20						; size = 4
_xmlTextWriterWriteVFormatDTDElement PROC		; COMDAT

; 3322 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3323 :     int rc;
; 3324 :     xmlChar *buf;
; 3325 : 
; 3326 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3327 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3328 : 
; 3329 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 3330 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 3331 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 3332 : 
; 3333 :     rc = xmlTextWriterWriteDTDElement(writer, name, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteDTDElement
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 3334 : 
; 3335 :     xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3336 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 3337 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatDTDElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatDTDElement
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_xmlTextWriterWriteFormatDTDElement PROC		; COMDAT

; 3295 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3296 :     int rc;
; 3297 :     va_list ap;
; 3298 : 
; 3299 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 3300 : 
; 3301 :     rc = xmlTextWriterWriteVFormatDTDElement(writer, name, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteVFormatDTDElement
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax

; 3302 : 
; 3303 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 3304 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 3305 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatDTDElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndDTDElement
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndDTDElement PROC			; COMDAT

; 3239 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3240 :     int count;
; 3241 :     int sum;
; 3242 :     xmlLinkPtr lk;
; 3243 :     xmlTextWriterStackEntry *p;
; 3244 : 
; 3245 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 3246 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 3247 : 
; 3248 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3249 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 3250 :     if (lk == 0)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 3251 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 3252 : 
; 3253 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 3254 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 3255 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 3256 : 
; 3257 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 9
	jl	SHORT $LN9@xmlTextWri
	cmp	DWORD PTR tv73[ebp], 10			; 0000000aH
	jle	SHORT $LN7@xmlTextWri
	jmp	SHORT $LN9@xmlTextWri
$LN7@xmlTextWri:

; 3258 :         case XML_TEXTWRITER_DTD_ELEM:
; 3259 :         case XML_TEXTWRITER_DTD_ELEM_TEXT:
; 3260 :             count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3261 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 3262 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 3263 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3264 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN9@xmlTextWri:

; 3265 :         default:
; 3266 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3267 :     }
; 3268 : 
; 3269 :     if (writer->indent) {

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN10@xmlTextWri

; 3270 :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3271 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 3272 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN11@xmlTextWri:

; 3273 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN10@xmlTextWri:

; 3274 :     }
; 3275 : 
; 3276 :     xmlListPopFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListPopFront
	add	esp, 4

; 3277 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3278 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndDTDElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartDTDElement
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_xmlTextWriterStartDTDElement PROC			; COMDAT

; 3152 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3153 :     int count;
; 3154 :     int sum;
; 3155 :     xmlLinkPtr lk;
; 3156 :     xmlTextWriterStackEntry *p;
; 3157 : 
; 3158 :     if (writer == NULL || name == NULL || *name == '\0')

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 3159 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 3160 : 
; 3161 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3162 :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 3163 :     if (lk == 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 3164 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 3165 :     }
; 3166 : 
; 3167 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 3168 :     if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN7@xmlTextWri

; 3169 :         switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 0
	je	SHORT $LN12@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 7
	je	SHORT $LN8@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 8
	je	SHORT $LN12@xmlTextWri
	jmp	SHORT $LN13@xmlTextWri
$LN8@xmlTextWri:

; 3170 :             case XML_TEXTWRITER_DTD:
; 3171 :                 count = xmlOutputBufferWriteString(writer->out, " [");

	push	OFFSET ??_C@_02GBLMOEJC@?5?$FL@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3172 :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 3173 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 3174 :                 sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 3175 :                 if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN10@xmlTextWri

; 3176 :                     count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3177 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 3178 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 3179 :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN10@xmlTextWri:

; 3180 :                 }
; 3181 :                 p->state = XML_TEXTWRITER_DTD_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 8
$LN12@xmlTextWri:

; 3182 :                 /* fallthrough */
; 3183 :             case XML_TEXTWRITER_DTD_TEXT:
; 3184 :             case XML_TEXTWRITER_NONE:
; 3185 :                 break;

	jmp	SHORT $LN7@xmlTextWri
$LN13@xmlTextWri:

; 3186 :             default:
; 3187 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN7@xmlTextWri:

; 3188 :         }
; 3189 :     }
; 3190 : 
; 3191 :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 3192 :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 3193 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN14@xmlTextWri

; 3194 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CP@HLOPJJJB@xmlTextWriterStartDTDElement?5?3?5@
	push	2
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3195 :                         "xmlTextWriterStartDTDElement : out of memory!\n");
; 3196 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN14@xmlTextWri:

; 3197 :     }
; 3198 : 
; 3199 :     p->name = xmlStrdup(name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_xmlStrdup
	add	esp, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax

; 3200 :     if (p->name == 0) {

	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN15@xmlTextWri

; 3201 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CP@HLOPJJJB@xmlTextWriterStartDTDElement?5?3?5@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 3202 :                         "xmlTextWriterStartDTDElement : out of memory!\n");
; 3203 :         xmlFree(p);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3204 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN15@xmlTextWri:

; 3205 :     }
; 3206 :     p->state = XML_TEXTWRITER_DTD_ELEM;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], 9

; 3207 : 
; 3208 :     xmlListPushFront(writer->nodes, p);

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPushFront
	add	esp, 8

; 3209 : 
; 3210 :     if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN16@xmlTextWri

; 3211 :         count = xmlTextWriterWriteIndent(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3212 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 3213 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN17@xmlTextWri:

; 3214 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN16@xmlTextWri:

; 3215 :     }
; 3216 : 
; 3217 :     count = xmlOutputBufferWriteString(writer->out, "<!ELEMENT ");

	push	OFFSET ??_C@_0L@EMLMHHFJ@?$DM?$CBELEMENT?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3218 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN18@xmlTextWri

; 3219 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN18@xmlTextWri:

; 3220 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 3221 :     count = xmlOutputBufferWriteString(writer->out, (const char *) name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3222 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 3223 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN19@xmlTextWri:

; 3224 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3225 : 
; 3226 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3227 : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartDTDElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteDTD
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_pubid$ = 16						; size = 4
_sysid$ = 20						; size = 4
_subset$ = 24						; size = 4
_xmlTextWriterWriteDTD PROC				; COMDAT

; 3118 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3119 :     int count;
; 3120 :     int sum;
; 3121 : 
; 3122 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 3123 :     count = xmlTextWriterStartDTD(writer, name, pubid, sysid);

	mov	eax, DWORD PTR _sysid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pubid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterStartDTD
	add	esp, 16					; 00000010H
	mov	DWORD PTR _count$[ebp], eax

; 3124 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN2@xmlTextWri

; 3125 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3126 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3127 :     if (subset != 0) {

	cmp	DWORD PTR _subset$[ebp], 0
	je	SHORT $LN3@xmlTextWri

; 3128 :         count = xmlTextWriterWriteString(writer, subset);

	mov	edx, DWORD PTR _subset$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 3129 :         if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 3130 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 3131 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN3@xmlTextWri:

; 3132 :     }
; 3133 :     count = xmlTextWriterEndDTD(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndDTD
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3134 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 3135 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 3136 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 3137 : 
; 3138 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3139 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteDTD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatDTD
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_pubid$ = 16						; size = 4
_sysid$ = 20						; size = 4
_format$ = 24						; size = 4
_argptr$ = 28						; size = 4
_xmlTextWriterWriteVFormatDTD PROC			; COMDAT

; 3084 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3085 :     int rc;
; 3086 :     xmlChar *buf;
; 3087 : 
; 3088 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 3089 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 3090 : 
; 3091 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 3092 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 3093 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 3094 : 
; 3095 :     rc = xmlTextWriterWriteDTD(writer, name, pubid, sysid, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _sysid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pubid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteDTD
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax

; 3096 : 
; 3097 :     xmlFree(buf);

	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 3098 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 3099 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatDTD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatDTD
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_pubid$ = 16						; size = 4
_sysid$ = 20						; size = 4
_format$ = 24						; size = 4
_xmlTextWriterWriteFormatDTD PROC			; COMDAT

; 3052 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 3053 :     int rc;
; 3054 :     va_list ap;
; 3055 : 
; 3056 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 3057 : 
; 3058 :     rc = xmlTextWriterWriteVFormatDTD(writer, name, pubid, sysid, format,

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _sysid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pubid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteVFormatDTD
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rc$[ebp], eax

; 3059 :                                       ap);
; 3060 : 
; 3061 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 3062 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 3063 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatDTD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndDTD
_TEXT	SEGMENT
tv74 = -24						; size = 4
_p$ = -20						; size = 4
_lk$ = -16						; size = 4
_sum$ = -12						; size = 4
_count$ = -8						; size = 4
_loop$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndDTD PROC				; COMDAT

; 2967 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2968 :     int loop;
; 2969 :     int count;
; 2970 :     int sum;
; 2971 :     xmlLinkPtr lk;
; 2972 :     xmlTextWriterStackEntry *p;
; 2973 : 
; 2974 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 2975 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 2976 : 
; 2977 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2978 :     loop = 1;

	mov	DWORD PTR _loop$[ebp], 1
$LN2@xmlTextWri:

; 2979 :     while (loop) {

	cmp	DWORD PTR _loop$[ebp], 0
	je	$LN3@xmlTextWri

; 2980 :         lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 2981 :         if (lk == NULL)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN7@xmlTextWri

; 2982 :             break;

	jmp	$LN3@xmlTextWri
$LN7@xmlTextWri:

; 2983 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 2984 :         if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN8@xmlTextWri

; 2985 :             break;

	jmp	$LN3@xmlTextWri
$LN8@xmlTextWri:

; 2986 :         switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR tv74[ebp]
	sub	edx, 7
	mov	DWORD PTR tv74[ebp], edx
	cmp	DWORD PTR tv74[ebp], 9
	ja	$LN18@xmlTextWri
	mov	eax, DWORD PTR tv74[ebp]
	jmp	DWORD PTR $LN22@xmlTextWri[eax*4]
$LN9@xmlTextWri:

; 2987 :             case XML_TEXTWRITER_DTD_TEXT:
; 2988 :                 count = xmlOutputBufferWriteString(writer->out, "]");

	push	OFFSET ??_C@_01LBDDMOBJ@?$FN@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2989 :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN10@xmlTextWri

; 2990 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN10@xmlTextWri:

; 2991 :                 sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN11@xmlTextWri:

; 2992 :                 /* fallthrough */
; 2993 :             case XML_TEXTWRITER_DTD:
; 2994 :                 count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2995 : 
; 2996 :                 if (writer->indent) {

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN12@xmlTextWri

; 2997 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 2998 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN13@xmlTextWri:

; 2999 :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3000 :                     count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax
$LN12@xmlTextWri:

; 3001 :                 }
; 3002 : 
; 3003 :                 xmlListPopFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListPopFront
	add	esp, 4

; 3004 :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN14@xmlTextWri:

; 3005 :             case XML_TEXTWRITER_DTD_ELEM:
; 3006 :             case XML_TEXTWRITER_DTD_ELEM_TEXT:
; 3007 :                 count = xmlTextWriterEndDTDElement(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndDTDElement
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3008 :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN15@xmlTextWri:

; 3009 :             case XML_TEXTWRITER_DTD_ATTL:
; 3010 :             case XML_TEXTWRITER_DTD_ATTL_TEXT:
; 3011 :                 count = xmlTextWriterEndDTDAttlist(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterEndDTDAttlist
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3012 :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN16@xmlTextWri:

; 3013 :             case XML_TEXTWRITER_DTD_ENTY:
; 3014 :             case XML_TEXTWRITER_DTD_PENT:
; 3015 :             case XML_TEXTWRITER_DTD_ENTY_TEXT:
; 3016 :                 count = xmlTextWriterEndDTDEntity(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndDTDEntity
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3017 :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN17@xmlTextWri:

; 3018 :             case XML_TEXTWRITER_COMMENT:
; 3019 :                 count = xmlTextWriterEndComment(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndComment
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 3020 :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN18@xmlTextWri:

; 3021 :             default:
; 3022 :                 loop = 0;

	mov	DWORD PTR _loop$[ebp], 0

; 3023 :                 continue;

	jmp	$LN2@xmlTextWri
$LN4@xmlTextWri:

; 3024 :         }
; 3025 : 
; 3026 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 3027 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN19@xmlTextWri:

; 3028 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 3029 :     }

	jmp	$LN2@xmlTextWri
$LN3@xmlTextWri:

; 3030 : 
; 3031 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 3032 : }

	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@xmlTextWri:
	DD	$LN11@xmlTextWri
	DD	$LN9@xmlTextWri
	DD	$LN14@xmlTextWri
	DD	$LN14@xmlTextWri
	DD	$LN15@xmlTextWri
	DD	$LN15@xmlTextWri
	DD	$LN16@xmlTextWri
	DD	$LN16@xmlTextWri
	DD	$LN16@xmlTextWri
	DD	$LN17@xmlTextWri
_xmlTextWriterEndDTD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartDTD
_TEXT	SEGMENT
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_pubid$ = 16						; size = 4
_sysid$ = 20						; size = 4
_xmlTextWriterStartDTD PROC				; COMDAT

; 2832 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2833 :     int count;
; 2834 :     int sum;
; 2835 :     xmlLinkPtr lk;
; 2836 :     xmlTextWriterStackEntry *p;
; 2837 : 
; 2838 :     if (writer == NULL || name == NULL || *name == '\0')

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 2839 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 2840 : 
; 2841 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2842 :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 2843 :     if ((lk != NULL) && (xmlLinkGetData(lk) != NULL)) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	SHORT $LN4@xmlTextWri
	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@xmlTextWri

; 2844 :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DF@KCNCPLNC@xmlTextWriterStartDTD?5?3?5DTD?5all@
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2845 :                         "xmlTextWriterStartDTD : DTD allowed only in prolog!\n");
; 2846 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 2847 :     }
; 2848 : 
; 2849 :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 2850 :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 2851 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 2852 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CI@CDIDIABN@xmlTextWriterStartDTD?5?3?5out?5of?5@
	push	2
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2853 :                         "xmlTextWriterStartDTD : out of memory!\n");
; 2854 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 2855 :     }
; 2856 : 
; 2857 :     p->name = xmlStrdup(name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	call	_xmlStrdup
	add	esp, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], eax

; 2858 :     if (p->name == 0) {

	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN6@xmlTextWri

; 2859 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CI@CDIDIABN@xmlTextWriterStartDTD?5?3?5out?5of?5@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2860 :                         "xmlTextWriterStartDTD : out of memory!\n");
; 2861 :         xmlFree(p);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2862 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 2863 :     }
; 2864 :     p->state = XML_TEXTWRITER_DTD;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], 7

; 2865 : 
; 2866 :     xmlListPushFront(writer->nodes, p);

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPushFront
	add	esp, 8

; 2867 : 
; 2868 :     count = xmlOutputBufferWriteString(writer->out, "<!DOCTYPE ");

	push	OFFSET ??_C@_0L@JKHDJBPI@?$DM?$CBDOCTYPE?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2869 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN7@xmlTextWri

; 2870 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN7@xmlTextWri:

; 2871 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2872 :     count = xmlOutputBufferWriteString(writer->out, (const char *) name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2873 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 2874 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN8@xmlTextWri:

; 2875 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2876 : 
; 2877 :     if (pubid != 0) {

	cmp	DWORD PTR _pubid$[ebp], 0
	je	$LN9@xmlTextWri

; 2878 :         if (sysid == 0) {

	cmp	DWORD PTR _sysid$[ebp], 0
	jne	SHORT $LN10@xmlTextWri

; 2879 :             xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DD@KKKOOJH@xmlTextWriterStartDTD?5?3?5system?5@
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2880 :                             "xmlTextWriterStartDTD : system identifier needed!\n");
; 2881 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN10@xmlTextWri:

; 2882 :         }
; 2883 : 
; 2884 :         if (writer->indent)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN11@xmlTextWri

; 2885 :             count = xmlOutputBufferWrite(writer->out, 1, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN12@xmlTextWri
$LN11@xmlTextWri:

; 2886 :         else
; 2887 :             count = xmlOutputBufferWrite(writer->out, 1, " ");

	push	OFFSET ??_C@_01CLKCMJKC@?5@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax
$LN12@xmlTextWri:

; 2888 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 2889 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN13@xmlTextWri:

; 2890 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2891 : 
; 2892 :         count = xmlOutputBufferWriteString(writer->out, "PUBLIC ");

	push	OFFSET ??_C@_07GAMBALOD@PUBLIC?5@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2893 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN14@xmlTextWri

; 2894 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN14@xmlTextWri:

; 2895 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2896 : 
; 2897 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 2898 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN15@xmlTextWri

; 2899 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN15@xmlTextWri:

; 2900 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2901 : 
; 2902 :         count =

	mov	ecx, DWORD PTR _pubid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2903 :             xmlOutputBufferWriteString(writer->out, (const char *) pubid);
; 2904 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 2905 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN16@xmlTextWri:

; 2906 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2907 : 
; 2908 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	edx, DWORD PTR _writer$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 2909 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 2910 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN17@xmlTextWri:

; 2911 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN9@xmlTextWri:

; 2912 :     }
; 2913 : 
; 2914 :     if (sysid != 0) {

	cmp	DWORD PTR _sysid$[ebp], 0
	je	$LN18@xmlTextWri

; 2915 :         if (pubid == 0) {

	cmp	DWORD PTR _pubid$[ebp], 0
	jne	$LN19@xmlTextWri

; 2916 :             if (writer->indent)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN21@xmlTextWri

; 2917 :                 count = xmlOutputBufferWrite(writer->out, 1, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN22@xmlTextWri
$LN21@xmlTextWri:

; 2918 :             else
; 2919 :                 count = xmlOutputBufferWrite(writer->out, 1, " ");

	push	OFFSET ??_C@_01CLKCMJKC@?5@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax
$LN22@xmlTextWri:

; 2920 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN23@xmlTextWri

; 2921 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN23@xmlTextWri:

; 2922 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2923 :             count = xmlOutputBufferWriteString(writer->out, "SYSTEM ");

	push	OFFSET ??_C@_07PBLMPJLL@SYSTEM?5@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2924 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN24@xmlTextWri

; 2925 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN24@xmlTextWri:

; 2926 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2927 :         } else {

	jmp	SHORT $LN20@xmlTextWri
$LN19@xmlTextWri:

; 2928 : 			if (writer->indent)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN25@xmlTextWri

; 2929 :             count = xmlOutputBufferWriteString(writer->out, "\n       ");

	push	OFFSET ??_C@_08HBIFNNEL@?6?5?5?5?5?5?5?5@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN26@xmlTextWri
$LN25@xmlTextWri:

; 2930 :             else
; 2931 :                 count = xmlOutputBufferWrite(writer->out, 1, " ");

	push	OFFSET ??_C@_01CLKCMJKC@?5@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax
$LN26@xmlTextWri:

; 2932 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN27@xmlTextWri

; 2933 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN27@xmlTextWri:

; 2934 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN20@xmlTextWri:

; 2935 :         }
; 2936 : 
; 2937 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 2938 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN28@xmlTextWri

; 2939 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN28@xmlTextWri:

; 2940 :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2941 : 
; 2942 :         count =

	mov	ecx, DWORD PTR _sysid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2943 :             xmlOutputBufferWriteString(writer->out, (const char *) sysid);
; 2944 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN29@xmlTextWri

; 2945 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN29@xmlTextWri:

; 2946 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2947 : 
; 2948 :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	edx, DWORD PTR _writer$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 2949 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN30@xmlTextWri

; 2950 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN30@xmlTextWri:

; 2951 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN18@xmlTextWri:

; 2952 :     }
; 2953 : 
; 2954 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2955 : }

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartDTD ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteCDATA
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_content$ = 12						; size = 4
_xmlTextWriterWriteCDATA PROC				; COMDAT

; 2794 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2795 :     int count;
; 2796 :     int sum;
; 2797 : 
; 2798 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2799 :     count = xmlTextWriterStartCDATA(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterStartCDATA
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2800 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN2@xmlTextWri

; 2801 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2802 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2803 :     if (content != 0) {

	cmp	DWORD PTR _content$[ebp], 0
	je	SHORT $LN3@xmlTextWri

; 2804 :         count = xmlTextWriterWriteString(writer, content);

	mov	edx, DWORD PTR _content$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2805 :         if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 2806 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 2807 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN3@xmlTextWri:

; 2808 :     }
; 2809 :     count = xmlTextWriterEndCDATA(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndCDATA
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2810 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 2811 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 2812 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2813 : 
; 2814 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2815 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteCDATA ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatCDATA
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_argptr$ = 16						; size = 4
_xmlTextWriterWriteVFormatCDATA PROC			; COMDAT

; 2766 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2767 :     int rc;
; 2768 :     xmlChar *buf;
; 2769 : 
; 2770 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 2771 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2772 : 
; 2773 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 2774 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 2775 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 2776 : 
; 2777 :     rc = xmlTextWriterWriteCDATA(writer, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteCDATA
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax

; 2778 : 
; 2779 :     xmlFree(buf);

	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2780 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 2781 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatCDATA ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatCDATA
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_xmlTextWriterWriteFormatCDATA PROC			; COMDAT

; 2741 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2742 :     int rc;
; 2743 :     va_list ap;
; 2744 : 
; 2745 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 2746 : 
; 2747 :     rc = xmlTextWriterWriteVFormatCDATA(writer, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteVFormatCDATA
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 2748 : 
; 2749 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 2750 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 2751 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatCDATA ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndCDATA
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndCDATA PROC				; COMDAT

; 2695 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2696 :     int count;
; 2697 :     int sum;
; 2698 :     xmlLinkPtr lk;
; 2699 :     xmlTextWriterStackEntry *p;
; 2700 : 
; 2701 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 2702 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 2703 : 
; 2704 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 2705 :     if (lk == 0)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 2706 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 2707 : 
; 2708 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 2709 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 2710 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 2711 : 
; 2712 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2713 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 6
	je	SHORT $LN7@xmlTextWri
	jmp	SHORT $LN9@xmlTextWri
$LN7@xmlTextWri:

; 2714 :         case XML_TEXTWRITER_CDATA:
; 2715 :             count = xmlOutputBufferWriteString(writer->out, "]]>");

	push	OFFSET ??_C@_03MCHNFBAC@?$FN?$FN?$DO@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2716 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 2717 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 2718 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2719 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN9@xmlTextWri:

; 2720 :         default:
; 2721 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2722 :     }
; 2723 : 
; 2724 :     xmlListPopFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPopFront
	add	esp, 4

; 2725 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2726 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndCDATA ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartCDATA
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterStartCDATA PROC				; COMDAT

; 2616 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2617 :     int count;
; 2618 :     int sum;
; 2619 :     xmlLinkPtr lk;
; 2620 :     xmlTextWriterStackEntry *p;
; 2621 : 
; 2622 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 2623 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 2624 : 
; 2625 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2626 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 2627 :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	$LN5@xmlTextWri

; 2628 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 2629 :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN5@xmlTextWri

; 2630 :             switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 6
	ja	$LN14@xmlTextWri
	mov	edx, DWORD PTR tv73[ebp]
	jmp	DWORD PTR $LN18@xmlTextWri[edx*4]
$LN7@xmlTextWri:

; 2631 :                 case XML_TEXTWRITER_NONE:
; 2632 : 		case XML_TEXTWRITER_TEXT:
; 2633 :                 case XML_TEXTWRITER_PI:
; 2634 :                 case XML_TEXTWRITER_PI_TEXT:
; 2635 :                     break;

	jmp	$LN5@xmlTextWri
$LN8@xmlTextWri:

; 2636 :                 case XML_TEXTWRITER_ATTRIBUTE:
; 2637 :                     count = xmlTextWriterEndAttribute(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2638 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 2639 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 2640 :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN10@xmlTextWri:

; 2641 :                     /* fallthrough */
; 2642 :                 case XML_TEXTWRITER_NAME:
; 2643 :                     /* Output namespace declarations */
; 2644 :                     count = xmlTextWriterOutputNSDecl(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterOutputNSDecl
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2645 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 2646 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 2647 :                     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2648 :                     count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2649 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN12@xmlTextWri

; 2650 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN12@xmlTextWri:

; 2651 :                     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2652 :                     p->state = XML_TEXTWRITER_TEXT;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+4], 3

; 2653 :                     break;

	jmp	SHORT $LN5@xmlTextWri
$LN13@xmlTextWri:

; 2654 :                 case XML_TEXTWRITER_CDATA:
; 2655 :                     xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DO@LGFOPFHE@xmlTextWriterStartCDATA?5?3?5CDATA@
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2656 :                                     "xmlTextWriterStartCDATA : CDATA not allowed in this context!\n");
; 2657 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN14@xmlTextWri:

; 2658 :                 default:
; 2659 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 2660 :             }
; 2661 :         }
; 2662 :     }
; 2663 : 
; 2664 :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 2665 :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 2666 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN15@xmlTextWri

; 2667 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CK@FMBLGDPB@xmlTextWriterStartCDATA?5?3?5out?5o@
	push	2
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2668 :                         "xmlTextWriterStartCDATA : out of memory!\n");
; 2669 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN15@xmlTextWri:

; 2670 :     }
; 2671 : 
; 2672 :     p->name = NULL;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], 0

; 2673 :     p->state = XML_TEXTWRITER_CDATA;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 6

; 2674 : 
; 2675 :     xmlListPushFront(writer->nodes, p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListPushFront
	add	esp, 8

; 2676 : 
; 2677 :     count = xmlOutputBufferWriteString(writer->out, "<![CDATA[");

	push	OFFSET ??_C@_09BLLNCBLF@?$DM?$CB?$FLCDATA?$FL@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2678 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 2679 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN16@xmlTextWri:

; 2680 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2681 : 
; 2682 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2683 : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN18@xmlTextWri:
	DD	$LN7@xmlTextWri
	DD	$LN10@xmlTextWri
	DD	$LN8@xmlTextWri
	DD	$LN7@xmlTextWri
	DD	$LN7@xmlTextWri
	DD	$LN7@xmlTextWri
	DD	$LN13@xmlTextWri
_xmlTextWriterStartCDATA ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWritePI
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_target$ = 12						; size = 4
_content$ = 16						; size = 4
_xmlTextWriterWritePI PROC				; COMDAT

; 2583 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2584 :     int count;
; 2585 :     int sum;
; 2586 : 
; 2587 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2588 :     count = xmlTextWriterStartPI(writer, target);

	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterStartPI
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2589 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN2@xmlTextWri

; 2590 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2591 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2592 :     if (content != 0) {

	cmp	DWORD PTR _content$[ebp], 0
	je	SHORT $LN3@xmlTextWri

; 2593 :         count = xmlTextWriterWriteString(writer, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2594 :         if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 2595 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 2596 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN3@xmlTextWri:

; 2597 :     }
; 2598 :     count = xmlTextWriterEndPI(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndPI
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2599 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 2600 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 2601 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2602 : 
; 2603 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2604 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWritePI ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatPI
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_target$ = 12						; size = 4
_format$ = 16						; size = 4
_argptr$ = 20						; size = 4
_xmlTextWriterWriteVFormatPI PROC			; COMDAT

; 2553 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2554 :     int rc;
; 2555 :     xmlChar *buf;
; 2556 : 
; 2557 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 2558 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2559 : 
; 2560 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 2561 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 2562 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 2563 : 
; 2564 :     rc = xmlTextWriterWritePI(writer, target, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWritePI
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 2565 : 
; 2566 :     xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2567 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 2568 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatPI ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatPI
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_target$ = 12						; size = 4
_format$ = 16						; size = 4
_xmlTextWriterWriteFormatPI PROC			; COMDAT

; 2526 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2527 :     int rc;
; 2528 :     va_list ap;
; 2529 : 
; 2530 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 2531 : 
; 2532 :     rc = xmlTextWriterWriteVFormatPI(writer, target, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _target$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteVFormatPI
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax

; 2533 : 
; 2534 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 2535 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 2536 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatPI ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndPI
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndPI PROC				; COMDAT

; 2471 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2472 :     int count;
; 2473 :     int sum;
; 2474 :     xmlLinkPtr lk;
; 2475 :     xmlTextWriterStackEntry *p;
; 2476 : 
; 2477 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 2478 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 2479 : 
; 2480 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 2481 :     if (lk == 0)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 2482 :         return 0;

	xor	eax, eax
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 2483 : 
; 2484 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 2485 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 2486 :         return 0;

	xor	eax, eax
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 2487 : 
; 2488 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2489 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 4
	jl	SHORT $LN9@xmlTextWri
	cmp	DWORD PTR tv73[ebp], 5
	jle	SHORT $LN7@xmlTextWri
	jmp	SHORT $LN9@xmlTextWri
$LN7@xmlTextWri:

; 2490 :         case XML_TEXTWRITER_PI:
; 2491 :         case XML_TEXTWRITER_PI_TEXT:
; 2492 :             count = xmlOutputBufferWriteString(writer->out, "?>");

	push	OFFSET ??_C@_02GOEMJPDN@?$DP?$DO@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2493 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 2494 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 2495 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2496 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN9@xmlTextWri:

; 2497 :         default:
; 2498 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2499 :     }
; 2500 : 
; 2501 :     if (writer->indent) {

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN10@xmlTextWri

; 2502 :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2503 : 	if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 2504 : 	return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN11@xmlTextWri:

; 2505 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN10@xmlTextWri:

; 2506 :     }
; 2507 : 
; 2508 :     xmlListPopFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListPopFront
	add	esp, 4

; 2509 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2510 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndPI ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartPI
_TEXT	SEGMENT
tv83 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_target$ = 12						; size = 4
_xmlTextWriterStartPI PROC				; COMDAT

; 2375 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2376 :     int count;
; 2377 :     int sum;
; 2378 :     xmlLinkPtr lk;
; 2379 :     xmlTextWriterStackEntry *p;
; 2380 : 
; 2381 :     if ((writer == NULL) || (target == NULL) || (*target == '\0'))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _target$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _target$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 2382 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 2383 : 
; 2384 :     if (xmlStrcasecmp(target, (const xmlChar *) "xml") == 0) {

	push	OFFSET ??_C@_03PJHHNEEI@xml@
	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	call	_xmlStrcasecmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@xmlTextWri

; 2385 :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0FG@KFBLHCOM@xmlTextWriterStartPI?5?3?5target?5n@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2386 :                         "xmlTextWriterStartPI : target name [Xx][Mm][Ll] is reserved for xml standardization!\n");
; 2387 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 2388 :     }
; 2389 : 
; 2390 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2391 :     lk = xmlListFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 2392 :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	$LN7@xmlTextWri

; 2393 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	eax, DWORD PTR _lk$[ebp]
	push	eax
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 2394 :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN7@xmlTextWri

; 2395 :             switch (p->state) {

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv83[ebp], edx
	cmp	DWORD PTR tv83[ebp], 7
	ja	$LN16@xmlTextWri
	mov	eax, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN22@xmlTextWri[eax*4]
$LN9@xmlTextWri:

; 2396 :                 case XML_TEXTWRITER_ATTRIBUTE:
; 2397 :                     count = xmlTextWriterEndAttribute(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2398 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN10@xmlTextWri

; 2399 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN10@xmlTextWri:

; 2400 :                     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN11@xmlTextWri:

; 2401 :                     /* fallthrough */
; 2402 :                 case XML_TEXTWRITER_NAME:
; 2403 :                     /* Output namespace declarations */
; 2404 :                     count = xmlTextWriterOutputNSDecl(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterOutputNSDecl
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2405 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN12@xmlTextWri

; 2406 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN12@xmlTextWri:

; 2407 :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2408 :                     count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2409 :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 2410 :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN13@xmlTextWri:

; 2411 :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2412 :                     p->state = XML_TEXTWRITER_TEXT;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 3

; 2413 :                     break;

	jmp	SHORT $LN7@xmlTextWri
$LN14@xmlTextWri:

; 2414 :                 case XML_TEXTWRITER_NONE:
; 2415 :                 case XML_TEXTWRITER_TEXT:
; 2416 :                 case XML_TEXTWRITER_DTD:
; 2417 :                     break;

	jmp	SHORT $LN7@xmlTextWri
$LN15@xmlTextWri:

; 2418 :                 case XML_TEXTWRITER_PI:
; 2419 :                 case XML_TEXTWRITER_PI_TEXT:
; 2420 :                     xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CD@KBFLMPAO@xmlTextWriterStartPI?5?3?5nested?5P@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2421 :                                     "xmlTextWriterStartPI : nested PI!\n");
; 2422 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN16@xmlTextWri:

; 2423 :                 default:
; 2424 :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN7@xmlTextWri:

; 2425 :             }
; 2426 :         }
; 2427 :     }
; 2428 : 
; 2429 :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 2430 :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 2431 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN17@xmlTextWri

; 2432 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CH@IKGNFAGK@xmlTextWriterStartPI?5?3?5out?5of?5m@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2433 :                         "xmlTextWriterStartPI : out of memory!\n");
; 2434 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN17@xmlTextWri:

; 2435 :     }
; 2436 : 
; 2437 :     p->name = xmlStrdup(target);

	mov	edx, DWORD PTR _target$[ebp]
	push	edx
	call	_xmlStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax

; 2438 :     if (p->name == 0) {

	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN18@xmlTextWri

; 2439 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CH@IKGNFAGK@xmlTextWriterStartPI?5?3?5out?5of?5m@
	push	2
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 2440 :                         "xmlTextWriterStartPI : out of memory!\n");
; 2441 :         xmlFree(p);

	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2442 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN18@xmlTextWri:

; 2443 :     }
; 2444 :     p->state = XML_TEXTWRITER_PI;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 4

; 2445 : 
; 2446 :     xmlListPushFront(writer->nodes, p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListPushFront
	add	esp, 8

; 2447 : 
; 2448 :     count = xmlOutputBufferWriteString(writer->out, "<?");

	push	OFFSET ??_C@_02HFBBBACF@?$DM?$DP@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2449 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 2450 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN19@xmlTextWri:

; 2451 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2452 :     count =

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2453 :         xmlOutputBufferWriteString(writer->out, (const char *) p->name);
; 2454 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN20@xmlTextWri

; 2455 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN20@xmlTextWri:

; 2456 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2457 : 
; 2458 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2459 : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@xmlTextWri:
	DD	$LN14@xmlTextWri
	DD	$LN11@xmlTextWri
	DD	$LN9@xmlTextWri
	DD	$LN14@xmlTextWri
	DD	$LN15@xmlTextWri
	DD	$LN15@xmlTextWri
	DD	$LN16@xmlTextWri
	DD	$LN14@xmlTextWri
_xmlTextWriterStartPI ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteAttributeNS
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_content$ = 24						; size = 4
_xmlTextWriterWriteAttributeNS PROC			; COMDAT

; 2134 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2135 :     int count;
; 2136 :     int sum;
; 2137 : 
; 2138 :     if ((writer == NULL) || (name == NULL) || (*name == '\0'))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 2139 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 2140 : 
; 2141 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2142 :     count = xmlTextWriterStartAttributeNS(writer, prefix, name, namespaceURI);

	mov	edx, DWORD PTR _namespaceURI$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterStartAttributeNS
	add	esp, 16					; 00000010H
	mov	DWORD PTR _count$[ebp], eax

; 2143 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN4@xmlTextWri

; 2144 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 2145 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2146 :     count = xmlTextWriterWriteString(writer, content);

	mov	ecx, DWORD PTR _content$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2147 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN5@xmlTextWri

; 2148 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 2149 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2150 :     count = xmlTextWriterEndAttribute(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2151 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN6@xmlTextWri

; 2152 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 2153 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2154 : 
; 2155 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2156 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteAttributeNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatAttributeNS
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_format$ = 24						; size = 4
_argptr$ = 28						; size = 4
_xmlTextWriterWriteVFormatAttributeNS PROC		; COMDAT

; 2099 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2100 :     int rc;
; 2101 :     xmlChar *buf;
; 2102 : 
; 2103 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 2104 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2105 : 
; 2106 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 2107 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 2108 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 2109 : 
; 2110 :     rc = xmlTextWriterWriteAttributeNS(writer, prefix, name, namespaceURI,

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _namespaceURI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteAttributeNS
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax

; 2111 :                                        buf);
; 2112 : 
; 2113 :     xmlFree(buf);

	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2114 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 2115 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatAttributeNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatAttributeNS
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_format$ = 24						; size = 4
_xmlTextWriterWriteFormatAttributeNS PROC		; COMDAT

; 2067 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2068 :     int rc;
; 2069 :     va_list ap;
; 2070 : 
; 2071 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 2072 : 
; 2073 :     rc = xmlTextWriterWriteVFormatAttributeNS(writer, prefix, name,

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _namespaceURI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteVFormatAttributeNS
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rc$[ebp], eax

; 2074 :                                               namespaceURI, format, ap);
; 2075 : 
; 2076 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 2077 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 2078 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatAttributeNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteAttribute
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_content$ = 16						; size = 4
_xmlTextWriterWriteAttribute PROC			; COMDAT

; 2027 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2028 :     int count;
; 2029 :     int sum;
; 2030 : 
; 2031 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2032 :     count = xmlTextWriterStartAttribute(writer, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterStartAttribute
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2033 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN2@xmlTextWri

; 2034 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2035 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2036 :     count = xmlTextWriterWriteString(writer, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2037 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN3@xmlTextWri

; 2038 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 2039 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2040 :     count = xmlTextWriterEndAttribute(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2041 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN4@xmlTextWri

; 2042 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 2043 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2044 : 
; 2045 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2046 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteAttribute ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatAttribute
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_argptr$ = 20						; size = 4
_xmlTextWriterWriteVFormatAttribute PROC		; COMDAT

; 1997 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1998 :     int rc;
; 1999 :     xmlChar *buf;
; 2000 : 
; 2001 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 2002 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2003 : 
; 2004 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 2005 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 2006 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 2007 : 
; 2008 :     rc = xmlTextWriterWriteAttribute(writer, name, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteAttribute
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 2009 : 
; 2010 :     xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2011 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 2012 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatAttribute ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatAttribute
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_xmlTextWriterWriteFormatAttribute PROC			; COMDAT

; 1970 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1971 :     int rc;
; 1972 :     va_list ap;
; 1973 : 
; 1974 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 1975 : 
; 1976 :     rc = xmlTextWriterWriteVFormatAttribute(writer, name, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteVFormatAttribute
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax

; 1977 : 
; 1978 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 1979 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 1980 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatAttribute ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndAttribute
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndAttribute PROC				; COMDAT

; 1918 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1919 :     int count;
; 1920 :     int sum;
; 1921 :     xmlLinkPtr lk;
; 1922 :     xmlTextWriterStackEntry *p;
; 1923 : 
; 1924 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 1925 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 1926 : 
; 1927 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1928 :     if (lk == 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 1929 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 1930 :     }
; 1931 : 
; 1932 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1933 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 1934 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 1935 :     }
; 1936 : 
; 1937 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1938 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 2
	je	SHORT $LN7@xmlTextWri
	jmp	SHORT $LN9@xmlTextWri
$LN7@xmlTextWri:

; 1939 :         case XML_TEXTWRITER_ATTRIBUTE:
; 1940 :             p->state = XML_TEXTWRITER_NAME;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 1

; 1941 : 
; 1942 :             count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1943 :             if (count < 0) {

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 1944 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 1945 :             }
; 1946 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1947 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN9@xmlTextWri:

; 1948 :         default:
; 1949 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 1950 :     }
; 1951 : 
; 1952 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1953 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndAttribute ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartAttributeNS
_TEXT	SEGMENT
_curns$1 = -40						; size = 4
_nsentry$2 = -32					; size = 12
_p$ = -16						; size = 4
_buf$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_xmlTextWriterStartAttributeNS PROC			; COMDAT

; 1831 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1832 :     int count;
; 1833 :     int sum;
; 1834 :     xmlChar *buf;
; 1835 :     xmlTextWriterNsStackEntry *p;
; 1836 : 
; 1837 :     if ((writer == NULL) || (name == NULL) || (*name == '\0'))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 1838 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 1839 : 
; 1840 :     /* Handle namespace first in case of error */
; 1841 :     if (namespaceURI != 0) {

	cmp	DWORD PTR _namespaceURI$[ebp], 0
	je	$LN4@xmlTextWri

; 1842 :         xmlTextWriterNsStackEntry nsentry, *curns;
; 1843 : 
; 1844 :         buf = xmlStrdup(BAD_CAST "xmlns");

	push	OFFSET ??_C@_05PPEFOGKI@xmlns@
	call	_xmlStrdup
	add	esp, 4
	mov	DWORD PTR _buf$[ebp], eax

; 1845 :         if (prefix != 0) {

	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN5@xmlTextWri

; 1846 :             buf = xmlStrcat(buf, BAD_CAST ":");

	push	OFFSET ??_C@_01JLIPDDHJ@?3@
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 1847 :             buf = xmlStrcat(buf, prefix);

	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
$LN5@xmlTextWri:

; 1848 :         }
; 1849 : 
; 1850 :         nsentry.prefix = buf;

	mov	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR _nsentry$2[ebp], edx

; 1851 :         nsentry.uri = (xmlChar *)namespaceURI;

	mov	eax, DWORD PTR _namespaceURI$[ebp]
	mov	DWORD PTR _nsentry$2[ebp+4], eax

; 1852 :         nsentry.elem = xmlListFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _nsentry$2[ebp+8], eax

; 1853 : 
; 1854 :         curns = (xmlTextWriterNsStackEntry *)xmlListSearch(writer->nsstack,

	lea	eax, DWORD PTR _nsentry$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_xmlListSearch
	add	esp, 8
	mov	DWORD PTR _curns$1[ebp], eax

; 1855 :                                                            (void *)&nsentry);
; 1856 :         if ((curns != NULL)) {

	cmp	DWORD PTR _curns$1[ebp], 0
	je	SHORT $LN6@xmlTextWri

; 1857 :             xmlFree(buf);

	mov	esi, esp
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1858 :             if (xmlStrcmp(curns->uri, namespaceURI) == 0) {

	mov	ecx, DWORD PTR _namespaceURI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _curns$1[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlStrcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@xmlTextWri

; 1859 :                 /* Namespace already defined on element skip */
; 1860 :                 buf = NULL;

	mov	DWORD PTR _buf$[ebp], 0

; 1861 :             } else {

	jmp	SHORT $LN6@xmlTextWri
$LN7@xmlTextWri:

; 1862 :                 /* Prefix mismatch so error out */
; 1863 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 1864 :             }
; 1865 :         }
; 1866 : 
; 1867 :         /* Do not add namespace decl to list - it is already there */
; 1868 :         if (buf != NULL) {

	cmp	DWORD PTR _buf$[ebp], 0
	je	$LN4@xmlTextWri

; 1869 :             p = (xmlTextWriterNsStackEntry *)

	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 1870 :                 xmlMalloc(sizeof(xmlTextWriterNsStackEntry));
; 1871 :             if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN10@xmlTextWri

; 1872 :                 xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0DA@LBMIIMOH@xmlTextWriterStartAttributeNS?5?3@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1873 : 								        "xmlTextWriterStartAttributeNS : out of memory!\n");
; 1874 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN10@xmlTextWri:

; 1875 :             }
; 1876 : 
; 1877 :             p->prefix = buf;

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], eax

; 1878 :             p->uri = xmlStrdup(namespaceURI);

	mov	ecx, DWORD PTR _namespaceURI$[ebp]
	push	ecx
	call	_xmlStrdup
	add	esp, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1879 :             if (p->uri == 0) {

	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN11@xmlTextWri

; 1880 :                 xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0DA@LBMIIMOH@xmlTextWriterStartAttributeNS?5?3@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1881 :                         "xmlTextWriterStartAttributeNS : out of memory!\n");
; 1882 :                 xmlFree(p);

	mov	esi, esp
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1883 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 1884 :             }
; 1885 :             p->elem = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+8], eax

; 1886 : 
; 1887 :             xmlListPushFront(writer->nsstack, p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_xmlListPushFront
	add	esp, 8
$LN4@xmlTextWri:

; 1888 :         }
; 1889 :     }
; 1890 : 
; 1891 :     buf = NULL;

	mov	DWORD PTR _buf$[ebp], 0

; 1892 :     if (prefix != 0) {

	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN12@xmlTextWri

; 1893 :         buf = xmlStrdup(prefix);

	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	call	_xmlStrdup
	add	esp, 4
	mov	DWORD PTR _buf$[ebp], eax

; 1894 :         buf = xmlStrcat(buf, BAD_CAST ":");

	push	OFFSET ??_C@_01JLIPDDHJ@?3@
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
$LN12@xmlTextWri:

; 1895 :     }
; 1896 :     buf = xmlStrcat(buf, name);

	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 1897 : 
; 1898 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1899 :     count = xmlTextWriterStartAttribute(writer, buf);

	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterStartAttribute
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1900 :     xmlFree(buf);

	mov	esi, esp
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1901 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 1902 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN13@xmlTextWri:

; 1903 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 1904 : 
; 1905 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1906 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@xmlTextWri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@xmlTextWri:
	DD	1
	DD	$LN16@xmlTextWri
$LN16@xmlTextWri:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN15@xmlTextWri
$LN15@xmlTextWri:
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
_xmlTextWriterStartAttributeNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartAttribute
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_xmlTextWriterStartAttribute PROC			; COMDAT

; 1763 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1764 :     int count;
; 1765 :     int sum;
; 1766 :     xmlLinkPtr lk;
; 1767 :     xmlTextWriterStackEntry *p;
; 1768 : 
; 1769 :     if ((writer == NULL) || (name == NULL) || (*name == '\0'))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 1770 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 1771 : 
; 1772 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1773 :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1774 :     if (lk == 0)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 1775 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 1776 : 
; 1777 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1778 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN7@xmlTextWri

; 1779 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN7@xmlTextWri:

; 1780 : 
; 1781 :     switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 1
	je	SHORT $LN10@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 2
	je	SHORT $LN8@xmlTextWri
	jmp	$LN15@xmlTextWri
$LN8@xmlTextWri:

; 1782 :         case XML_TEXTWRITER_ATTRIBUTE:
; 1783 :             count = xmlTextWriterEndAttribute(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1784 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 1785 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 1786 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN10@xmlTextWri:

; 1787 :             /* fallthrough */
; 1788 :         case XML_TEXTWRITER_NAME:
; 1789 :             count = xmlOutputBufferWriteString(writer->out, " ");

	push	OFFSET ??_C@_01CLKCMJKC@?5@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1790 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 1791 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 1792 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1793 :             count =

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1794 :                 xmlOutputBufferWriteString(writer->out,
; 1795 :                                            (const char *) name);
; 1796 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN12@xmlTextWri

; 1797 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN12@xmlTextWri:

; 1798 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1799 :             count = xmlOutputBufferWriteString(writer->out, "=");

	push	OFFSET ??_C@_01NEMOKFLO@?$DN@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1800 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 1801 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN13@xmlTextWri:

; 1802 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1803 :             count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	ecx, DWORD PTR _writer$[ebp]
	add	ecx, 28					; 0000001cH
	push	ecx
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1804 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN14@xmlTextWri

; 1805 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN14@xmlTextWri:

; 1806 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 1807 :             p->state = XML_TEXTWRITER_ATTRIBUTE;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 2

; 1808 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN15@xmlTextWri:

; 1809 :         default:
; 1810 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 1811 :     }
; 1812 : 
; 1813 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1814 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartAttribute ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteBinHex
_TEXT	SEGMENT
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_data$ = 12						; size = 4
_start$ = 16						; size = 4
_len$ = 20						; size = 4
_xmlTextWriterWriteBinHex PROC				; COMDAT

; 1718 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1719 :     int count;
; 1720 :     int sum;
; 1721 :     xmlLinkPtr lk;
; 1722 :     xmlTextWriterStackEntry *p;
; 1723 : 
; 1724 :     if ((writer == NULL) || (data == NULL) || (start < 0) || (len < 0))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _data$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _start$[ebp], 0
	jl	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 1725 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 1726 : 
; 1727 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1728 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1729 :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	SHORT $LN4@xmlTextWri

; 1730 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1731 :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN4@xmlTextWri

; 1732 :             count = xmlTextWriterHandleStateDependencies(writer, p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterHandleStateDependencies
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1733 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN6@xmlTextWri

; 1734 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 1735 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN4@xmlTextWri:

; 1736 :         }
; 1737 :     }
; 1738 : 
; 1739 :     if (writer->indent)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@xmlTextWri

; 1740 :         writer->doindent = 0;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN7@xmlTextWri:

; 1741 : 
; 1742 :     count =

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteBinHex
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1743 :         xmlOutputBufferWriteBinHex(writer->out, len,
; 1744 :                                    (unsigned char *) data + start);
; 1745 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 1746 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 1747 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1748 : 
; 1749 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1750 : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteBinHex ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteBase64
_TEXT	SEGMENT
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_data$ = 12						; size = 4
_start$ = 16						; size = 4
_len$ = 20						; size = 4
_xmlTextWriterWriteBase64 PROC				; COMDAT

; 1625 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1626 :     int count;
; 1627 :     int sum;
; 1628 :     xmlLinkPtr lk;
; 1629 :     xmlTextWriterStackEntry *p;
; 1630 : 
; 1631 :     if ((writer == NULL) || (data == NULL) || (start < 0) || (len < 0))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _data$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _start$[ebp], 0
	jl	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 1632 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 1633 : 
; 1634 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1635 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1636 :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	SHORT $LN4@xmlTextWri

; 1637 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1638 :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN4@xmlTextWri

; 1639 :             count = xmlTextWriterHandleStateDependencies(writer, p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterHandleStateDependencies
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1640 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN6@xmlTextWri

; 1641 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 1642 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN4@xmlTextWri:

; 1643 :         }
; 1644 :     }
; 1645 : 
; 1646 :     if (writer->indent)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN7@xmlTextWri

; 1647 :         writer->doindent = 0;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN7@xmlTextWri:

; 1648 : 
; 1649 :     count =

	mov	edx, DWORD PTR _data$[ebp]
	add	edx, DWORD PTR _start$[ebp]
	push	edx
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteBase64
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1650 :         xmlOutputBufferWriteBase64(writer->out, len,
; 1651 :                                    (unsigned char *) data + start);
; 1652 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 1653 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 1654 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1655 : 
; 1656 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1657 : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteBase64 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteString
_TEXT	SEGMENT
tv74 = -24						; size = 4
_buf$ = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_content$ = 12						; size = 4
_xmlTextWriterWriteString PROC				; COMDAT

; 1479 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1480 :     int count;
; 1481 :     int sum;
; 1482 :     xmlLinkPtr lk;
; 1483 :     xmlTextWriterStackEntry *p;
; 1484 :     xmlChar *buf;
; 1485 : 
; 1486 :     if ((writer == NULL) || (content == NULL))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _content$[ebp], 0
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 1487 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 1488 : 
; 1489 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1490 :     buf = (xmlChar *) content;

	mov	eax, DWORD PTR _content$[ebp]
	mov	DWORD PTR _buf$[ebp], eax

; 1491 :     lk = xmlListFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1492 :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	SHORT $LN6@xmlTextWri

; 1493 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	eax, DWORD PTR _lk$[ebp]
	push	eax
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1494 :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN6@xmlTextWri

; 1495 :             switch (p->state) {

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv74[ebp], edx
	cmp	DWORD PTR tv74[ebp], 1
	je	SHORT $LN8@xmlTextWri
	cmp	DWORD PTR tv74[ebp], 2
	je	SHORT $LN9@xmlTextWri
	cmp	DWORD PTR tv74[ebp], 3
	je	SHORT $LN8@xmlTextWri
	jmp	SHORT $LN6@xmlTextWri
$LN8@xmlTextWri:

; 1496 :                 case XML_TEXTWRITER_NAME:
; 1497 :                 case XML_TEXTWRITER_TEXT:
; 1498 : #if 0
; 1499 :                     buf = NULL;
; 1500 : 		    xmlOutputBufferWriteEscape(writer->out, content, NULL);
; 1501 : #endif
; 1502 :                     buf = xmlEncodeSpecialChars(NULL, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	push	0
	call	_xmlEncodeSpecialChars
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 1503 :                     break;

	jmp	SHORT $LN6@xmlTextWri
$LN9@xmlTextWri:

; 1504 :                 case XML_TEXTWRITER_ATTRIBUTE:
; 1505 :                     buf = NULL;

	mov	DWORD PTR _buf$[ebp], 0

; 1506 :                     xmlBufAttrSerializeTxtContent(writer->out->buffer,

	mov	ecx, DWORD PTR _content$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_xmlBufAttrSerializeTxtContent
	add	esp, 16					; 00000010H
$LN6@xmlTextWri:

; 1507 :                                                   writer->doc, NULL, content);
; 1508 :                     break;
; 1509 : 		default:
; 1510 : 		    break;
; 1511 :             }
; 1512 :         }
; 1513 :     }
; 1514 : 
; 1515 :     if (buf != NULL) {

	cmp	DWORD PTR _buf$[ebp], 0
	je	SHORT $LN11@xmlTextWri

; 1516 :         count = xmlTextWriterWriteRaw(writer, buf);

	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteRaw
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1517 : 
; 1518 :         if (buf != content)     /* buf was allocated by us, so free it */

	mov	eax, DWORD PTR _buf$[ebp]
	cmp	eax, DWORD PTR _content$[ebp]
	je	SHORT $LN12@xmlTextWri

; 1519 :             xmlFree(buf);

	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@xmlTextWri:

; 1520 : 
; 1521 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 1522 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN13@xmlTextWri:

; 1523 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN11@xmlTextWri:

; 1524 :     }
; 1525 : 
; 1526 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1527 : }

	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteString ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatString
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_argptr$ = 16						; size = 4
_xmlTextWriterWriteVFormatString PROC			; COMDAT

; 1451 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1452 :     int rc;
; 1453 :     xmlChar *buf;
; 1454 : 
; 1455 :     if ((writer == NULL) || (format == NULL))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 1456 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 1457 : 
; 1458 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 1459 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 1460 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 1461 : 
; 1462 :     rc = xmlTextWriterWriteString(writer, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax

; 1463 : 
; 1464 :     xmlFree(buf);

	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1465 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 1466 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatString ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatString
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_xmlTextWriterWriteFormatString PROC			; COMDAT

; 1423 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1424 :     int rc;
; 1425 :     va_list ap;
; 1426 : 
; 1427 :     if ((writer == NULL) || (format == NULL))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _format$[ebp], 0
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 1428 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 1429 : 
; 1430 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 1431 : 
; 1432 :     rc = xmlTextWriterWriteVFormatString(writer, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteVFormatString
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 1433 : 
; 1434 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 1435 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 1436 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatString ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteRaw
_TEXT	SEGMENT
_writer$ = 8						; size = 4
_content$ = 12						; size = 4
_xmlTextWriterWriteRaw PROC				; COMDAT

; 1406 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1407 :     return xmlTextWriterWriteRawLen(writer, content, xmlStrlen(content));

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	call	_xmlStrlen
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _content$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteRawLen
	add	esp, 12					; 0000000cH

; 1408 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlTextWriterWriteRaw ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteRawLen
_TEXT	SEGMENT
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_content$ = 12						; size = 4
_len$ = 16						; size = 4
_xmlTextWriterWriteRawLen PROC				; COMDAT

; 1353 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1354 :     int count;
; 1355 :     int sum;
; 1356 :     xmlLinkPtr lk;
; 1357 :     xmlTextWriterStackEntry *p;
; 1358 : 
; 1359 :     if (writer == NULL) {

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 1360 :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CM@KBMCGCHN@xmlTextWriterWriteRawLen?5?3?5inva@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1361 :                         "xmlTextWriterWriteRawLen : invalid writer!\n");
; 1362 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 1363 :     }
; 1364 : 
; 1365 :     if ((content == NULL) || (len < 0)) {

	cmp	DWORD PTR _content$[ebp], 0
	je	SHORT $LN4@xmlTextWri
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN3@xmlTextWri
$LN4@xmlTextWri:

; 1366 :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CN@MACOIGNG@xmlTextWriterWriteRawLen?5?3?5inva@
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1367 :                         "xmlTextWriterWriteRawLen : invalid content!\n");
; 1368 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN3@xmlTextWri:

; 1369 :     }
; 1370 : 
; 1371 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1372 :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1373 :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	SHORT $LN5@xmlTextWri

; 1374 :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1375 :         count = xmlTextWriterHandleStateDependencies(writer, p);

	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterHandleStateDependencies
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1376 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN6@xmlTextWri

; 1377 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 1378 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN5@xmlTextWri:

; 1379 :     }
; 1380 : 
; 1381 :     if (writer->indent)

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN7@xmlTextWri

; 1382 :         writer->doindent = 0;

	mov	eax, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [eax+20], 0
$LN7@xmlTextWri:

; 1383 : 
; 1384 :     if (content != NULL) {

	cmp	DWORD PTR _content$[ebp], 0
	je	SHORT $LN8@xmlTextWri

; 1385 :         count =

	mov	ecx, DWORD PTR _content$[ebp]
	push	ecx
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 1386 :             xmlOutputBufferWrite(writer->out, len, (const char *) content);
; 1387 :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 1388 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN9@xmlTextWri:

; 1389 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN8@xmlTextWri:

; 1390 :     }
; 1391 : 
; 1392 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1393 : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteRawLen ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatRaw
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_argptr$ = 16						; size = 4
_xmlTextWriterWriteVFormatRaw PROC			; COMDAT

; 1322 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1323 :     int rc;
; 1324 :     xmlChar *buf;
; 1325 : 
; 1326 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 1327 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 1328 : 
; 1329 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 1330 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 1331 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 1332 : 
; 1333 :     rc = xmlTextWriterWriteRaw(writer, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteRaw
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax

; 1334 : 
; 1335 :     xmlFree(buf);

	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1336 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 1337 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatRaw ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatRaw
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_xmlTextWriterWriteFormatRaw PROC			; COMDAT

; 1297 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1298 :     int rc;
; 1299 :     va_list ap;
; 1300 : 
; 1301 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 1302 : 
; 1303 :     rc = xmlTextWriterWriteVFormatRaw(writer, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteVFormatRaw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 1304 : 
; 1305 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 1306 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 1307 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatRaw ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteElementNS
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_content$ = 24						; size = 4
_xmlTextWriterWriteElementNS PROC			; COMDAT

; 2339 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2340 :     int count;
; 2341 :     int sum;
; 2342 : 
; 2343 :     if ((writer == NULL) || (name == NULL) || (*name == '\0'))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 2344 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 2345 : 
; 2346 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2347 :     count =

	mov	edx, DWORD PTR _namespaceURI$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _prefix$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterStartElementNS
	add	esp, 16					; 00000010H
	mov	DWORD PTR _count$[ebp], eax

; 2348 :         xmlTextWriterStartElementNS(writer, prefix, name, namespaceURI);
; 2349 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN4@xmlTextWri

; 2350 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 2351 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2352 :     count = xmlTextWriterWriteString(writer, content);

	mov	ecx, DWORD PTR _content$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2353 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 2354 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 2355 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 2356 :     count = xmlTextWriterEndElement(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterEndElement
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2357 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN6@xmlTextWri

; 2358 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN6@xmlTextWri:

; 2359 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2360 : 
; 2361 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2362 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteElementNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatElementNS
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_format$ = 24						; size = 4
_argptr$ = 28						; size = 4
_xmlTextWriterWriteVFormatElementNS PROC		; COMDAT

; 2304 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2305 :     int rc;
; 2306 :     xmlChar *buf;
; 2307 : 
; 2308 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 2309 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2310 : 
; 2311 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 2312 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 2313 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 2314 : 
; 2315 :     rc = xmlTextWriterWriteElementNS(writer, prefix, name, namespaceURI,

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _namespaceURI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteElementNS
	add	esp, 20					; 00000014H
	mov	DWORD PTR _rc$[ebp], eax

; 2316 :                                      buf);
; 2317 : 
; 2318 :     xmlFree(buf);

	mov	esi, esp
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2319 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 2320 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatElementNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatElementNS
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_format$ = 24						; size = 4
_xmlTextWriterWriteFormatElementNS PROC			; COMDAT

; 2272 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2273 :     int rc;
; 2274 :     va_list ap;
; 2275 : 
; 2276 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 2277 : 
; 2278 :     rc = xmlTextWriterWriteVFormatElementNS(writer, prefix, name,

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _namespaceURI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _prefix$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteVFormatElementNS
	add	esp, 24					; 00000018H
	mov	DWORD PTR _rc$[ebp], eax

; 2279 :                                             namespaceURI, format, ap);
; 2280 : 
; 2281 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 2282 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 2283 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatElementNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteElement
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_content$ = 16						; size = 4
_xmlTextWriterWriteElement PROC				; COMDAT

; 2230 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2231 :     int count;
; 2232 :     int sum;
; 2233 : 
; 2234 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 2235 :     count = xmlTextWriterStartElement(writer, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterStartElement
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2236 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN2@xmlTextWri

; 2237 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2238 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 2239 :     if (content != NULL) {

	cmp	DWORD PTR _content$[ebp], 0
	je	SHORT $LN3@xmlTextWri

; 2240 : 	count = xmlTextWriterWriteString(writer, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 2241 : 	if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN4@xmlTextWri

; 2242 : 	    return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 2243 : 	sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN3@xmlTextWri:

; 2244 :     }
; 2245 :     count = xmlTextWriterEndElement(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndElement
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 2246 :     if (count == -1)

	cmp	DWORD PTR _count$[ebp], -1
	jne	SHORT $LN5@xmlTextWri

; 2247 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN5@xmlTextWri:

; 2248 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 2249 : 
; 2250 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 2251 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatElement
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_argptr$ = 20						; size = 4
_xmlTextWriterWriteVFormatElement PROC			; COMDAT

; 2200 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2201 :     int rc;
; 2202 :     xmlChar *buf;
; 2203 : 
; 2204 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 2205 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 2206 : 
; 2207 :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	eax, DWORD PTR _argptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _format$[ebp]
	push	ecx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 2208 :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 2209 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 2210 : 
; 2211 :     rc = xmlTextWriterWriteElement(writer, name, buf);

	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteElement
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 2212 : 
; 2213 :     xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2214 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 2215 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatElement
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_format$ = 16						; size = 4
_xmlTextWriterWriteFormatElement PROC			; COMDAT

; 2173 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 2174 :     int rc;
; 2175 :     va_list ap;
; 2176 : 
; 2177 :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 2178 : 
; 2179 :     rc = xmlTextWriterWriteVFormatElement(writer, name, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteVFormatElement
	add	esp, 16					; 00000010H
	mov	DWORD PTR _rc$[ebp], eax

; 2180 : 
; 2181 :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 2182 :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 2183 : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterFullEndElement
_TEXT	SEGMENT
tv73 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterFullEndElement PROC			; COMDAT

; 1211 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1212 :     int count;
; 1213 :     int sum;
; 1214 :     xmlLinkPtr lk;
; 1215 :     xmlTextWriterStackEntry *p;
; 1216 : 
; 1217 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 1218 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 1219 : 
; 1220 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1221 :     if (lk == 0)

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 1222 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 1223 : 
; 1224 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1225 :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 1226 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 1227 : 
; 1228 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1229 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv73[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 1
	je	SHORT $LN9@xmlTextWri
	cmp	DWORD PTR tv73[ebp], 2
	je	SHORT $LN7@xmlTextWri
	cmp	DWORD PTR tv73[ebp], 3
	je	$LN13@xmlTextWri
	jmp	$LN19@xmlTextWri
$LN7@xmlTextWri:

; 1230 :         case XML_TEXTWRITER_ATTRIBUTE:
; 1231 :             count = xmlTextWriterEndAttribute(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1232 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 1233 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN8@xmlTextWri:

; 1234 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN9@xmlTextWri:

; 1235 :             /* fallthrough */
; 1236 :         case XML_TEXTWRITER_NAME:
; 1237 :             /* Output namespace declarations */
; 1238 :             count = xmlTextWriterOutputNSDecl(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterOutputNSDecl
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1239 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN10@xmlTextWri

; 1240 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN10@xmlTextWri:

; 1241 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1242 : 
; 1243 :             count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1244 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 1245 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 1246 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1247 :             if (writer->indent)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN13@xmlTextWri

; 1248 :                 writer->doindent = 0;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+20], 0
$LN13@xmlTextWri:

; 1249 :             /* fallthrough */
; 1250 :         case XML_TEXTWRITER_TEXT:
; 1251 :             if ((writer->indent) && (writer->doindent)) {

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN14@xmlTextWri
	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN14@xmlTextWri

; 1252 :                 count = xmlTextWriterWriteIndent(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1253 :                 sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1254 :                 writer->doindent = 1;

	mov	eax, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [eax+20], 1

; 1255 :             } else

	jmp	SHORT $LN15@xmlTextWri
$LN14@xmlTextWri:

; 1256 :                 writer->doindent = 1;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+20], 1
$LN15@xmlTextWri:

; 1257 :             count = xmlOutputBufferWriteString(writer->out, "</");

	push	OFFSET ??_C@_02DPNDACHE@?$DM?1@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1258 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 1259 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN16@xmlTextWri:

; 1260 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 1261 :             count = xmlOutputBufferWriteString(writer->out,

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1262 :                                                (const char *) p->name);
; 1263 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 1264 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN17@xmlTextWri:

; 1265 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1266 :             count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1267 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN18@xmlTextWri

; 1268 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN18@xmlTextWri:

; 1269 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1270 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN19@xmlTextWri:

; 1271 :         default:
; 1272 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 1273 :     }
; 1274 : 
; 1275 :     if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN20@xmlTextWri

; 1276 :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1277 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN20@xmlTextWri:

; 1278 :     }
; 1279 : 
; 1280 :     xmlListPopFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPopFront
	add	esp, 4

; 1281 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1282 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterFullEndElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndElement
_TEXT	SEGMENT
tv79 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndElement PROC				; COMDAT

; 1119 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1120 :     int count;
; 1121 :     int sum;
; 1122 :     xmlLinkPtr lk;
; 1123 :     xmlTextWriterStackEntry *p;
; 1124 : 
; 1125 :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 1126 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 1127 : 
; 1128 :     lk = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 1129 :     if (lk == 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 1130 :         xmlListDelete(writer->nsstack);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_xmlListDelete
	add	esp, 4

; 1131 :         writer->nsstack = NULL;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 1132 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 1133 :     }
; 1134 : 
; 1135 :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	edx, DWORD PTR _lk$[ebp]
	push	edx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 1136 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 1137 :         xmlListDelete(writer->nsstack);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_xmlListDelete
	add	esp, 4

; 1138 :         writer->nsstack = NULL;

	mov	edx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1139 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 1140 :     }
; 1141 : 
; 1142 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1143 :     switch (p->state) {

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 1
	je	SHORT $LN9@xmlTextWri
	cmp	DWORD PTR tv79[ebp], 2
	je	SHORT $LN7@xmlTextWri
	cmp	DWORD PTR tv79[ebp], 3
	je	$LN13@xmlTextWri
	jmp	$LN19@xmlTextWri
$LN7@xmlTextWri:

; 1144 :         case XML_TEXTWRITER_ATTRIBUTE:
; 1145 :             count = xmlTextWriterEndAttribute(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1146 :             if (count < 0) {

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 1147 :                 xmlListDelete(writer->nsstack);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_xmlListDelete
	add	esp, 4

; 1148 :                 writer->nsstack = NULL;

	mov	edx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1149 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN8@xmlTextWri:

; 1150 :             }
; 1151 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN9@xmlTextWri:

; 1152 :             /* fallthrough */
; 1153 :         case XML_TEXTWRITER_NAME:
; 1154 :             /* Output namespace declarations */
; 1155 :             count = xmlTextWriterOutputNSDecl(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterOutputNSDecl
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1156 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN10@xmlTextWri

; 1157 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN10@xmlTextWri:

; 1158 :             sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1159 : 
; 1160 :             if (writer->indent) /* next element needs indent */

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN11@xmlTextWri

; 1161 :                 writer->doindent = 1;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+20], 1
$LN11@xmlTextWri:

; 1162 :             count = xmlOutputBufferWriteString(writer->out, "/>");

	push	OFFSET ??_C@_02HCGKDMEN@?1?$DO@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1163 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN12@xmlTextWri

; 1164 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN12@xmlTextWri:

; 1165 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 1166 :             break;

	jmp	$LN2@xmlTextWri
$LN13@xmlTextWri:

; 1167 :         case XML_TEXTWRITER_TEXT:
; 1168 :             if ((writer->indent) && (writer->doindent)) {

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN14@xmlTextWri
	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN14@xmlTextWri

; 1169 :                 count = xmlTextWriterWriteIndent(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1170 :                 sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1171 :                 writer->doindent = 1;

	mov	eax, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [eax+20], 1

; 1172 :             } else

	jmp	SHORT $LN15@xmlTextWri
$LN14@xmlTextWri:

; 1173 :                 writer->doindent = 1;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	DWORD PTR [ecx+20], 1
$LN15@xmlTextWri:

; 1174 :             count = xmlOutputBufferWriteString(writer->out, "</");

	push	OFFSET ??_C@_02DPNDACHE@?$DM?1@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1175 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 1176 :                 return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN16@xmlTextWri:

; 1177 :             sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 1178 :             count = xmlOutputBufferWriteString(writer->out,

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1179 :                                                (const char *) p->name);
; 1180 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 1181 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN17@xmlTextWri:

; 1182 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1183 :             count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1184 :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN18@xmlTextWri

; 1185 :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN18@xmlTextWri:

; 1186 :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1187 :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN19@xmlTextWri:

; 1188 :         default:
; 1189 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 1190 :     }
; 1191 : 
; 1192 :     if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN20@xmlTextWri

; 1193 :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1194 :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN20@xmlTextWri:

; 1195 :     }
; 1196 : 
; 1197 :     xmlListPopFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPopFront
	add	esp, 4

; 1198 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1199 : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartElementNS
_TEXT	SEGMENT
_p$1 = -16						; size = 4
_buf$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_prefix$ = 12						; size = 4
_name$ = 16						; size = 4
_namespaceURI$ = 20					; size = 4
_xmlTextWriterStartElementNS PROC			; COMDAT

; 1056 : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 1057 :     int count;
; 1058 :     int sum;
; 1059 :     xmlChar *buf;
; 1060 : 
; 1061 :     if ((writer == NULL) || (name == NULL) || (*name == '\0'))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 1062 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 1063 : 
; 1064 :     buf = NULL;

	mov	DWORD PTR _buf$[ebp], 0

; 1065 :     if (prefix != 0) {

	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN4@xmlTextWri

; 1066 :         buf = xmlStrdup(prefix);

	mov	edx, DWORD PTR _prefix$[ebp]
	push	edx
	call	_xmlStrdup
	add	esp, 4
	mov	DWORD PTR _buf$[ebp], eax

; 1067 :         buf = xmlStrcat(buf, BAD_CAST ":");

	push	OFFSET ??_C@_01JLIPDDHJ@?3@
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
$LN4@xmlTextWri:

; 1068 :     }
; 1069 :     buf = xmlStrcat(buf, name);

	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 1070 : 
; 1071 :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 1072 :     count = xmlTextWriterStartElement(writer, buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterStartElement
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1073 :     xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1074 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN5@xmlTextWri

; 1075 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 1076 :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 1077 : 
; 1078 :     if (namespaceURI != 0) {

	cmp	DWORD PTR _namespaceURI$[ebp], 0
	je	$LN6@xmlTextWri

; 1079 :         xmlTextWriterNsStackEntry *p = (xmlTextWriterNsStackEntry *)

	mov	esi, esp
	push	12					; 0000000cH
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$1[ebp], eax

; 1080 :         xmlMalloc(sizeof(xmlTextWriterNsStackEntry));
; 1081 :         if (p == 0) {

	cmp	DWORD PTR _p$1[ebp], 0
	jne	SHORT $LN7@xmlTextWri

; 1082 :             xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CO@MGJEFOHO@xmlTextWriterStartElementNS?5?3?5o@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1083 :                             "xmlTextWriterStartElementNS : out of memory!\n");
; 1084 :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN7@xmlTextWri:

; 1085 :         }
; 1086 : 
; 1087 :         buf = xmlStrdup(BAD_CAST "xmlns");

	push	OFFSET ??_C@_05PPEFOGKI@xmlns@
	call	_xmlStrdup
	add	esp, 4
	mov	DWORD PTR _buf$[ebp], eax

; 1088 :         if (prefix != 0) {

	cmp	DWORD PTR _prefix$[ebp], 0
	je	SHORT $LN8@xmlTextWri

; 1089 :             buf = xmlStrcat(buf, BAD_CAST ":");

	push	OFFSET ??_C@_01JLIPDDHJ@?3@
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 1090 :             buf = xmlStrcat(buf, prefix);

	mov	eax, DWORD PTR _prefix$[ebp]
	push	eax
	mov	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_xmlStrcat
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax
$LN8@xmlTextWri:

; 1091 :         }
; 1092 : 
; 1093 :         p->prefix = buf;

	mov	edx, DWORD PTR _p$1[ebp]
	mov	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR [edx], eax

; 1094 :         p->uri = xmlStrdup(namespaceURI);

	mov	ecx, DWORD PTR _namespaceURI$[ebp]
	push	ecx
	call	_xmlStrdup
	add	esp, 4
	mov	edx, DWORD PTR _p$1[ebp]
	mov	DWORD PTR [edx+4], eax

; 1095 :         if (p->uri == 0) {

	mov	eax, DWORD PTR _p$1[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN9@xmlTextWri

; 1096 :             xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CO@MGJEFOHO@xmlTextWriterStartElementNS?5?3?5o@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1097 :                             "xmlTextWriterStartElementNS : out of memory!\n");
; 1098 :             xmlFree(p);

	mov	esi, esp
	mov	edx, DWORD PTR _p$1[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1099 :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN9@xmlTextWri:

; 1100 :         }
; 1101 :         p->elem = xmlListFront(writer->nodes);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListFront
	add	esp, 4
	mov	edx, DWORD PTR _p$1[ebp]
	mov	DWORD PTR [edx+8], eax

; 1102 : 
; 1103 :         xmlListPushFront(writer->nsstack, p);

	mov	eax, DWORD PTR _p$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_xmlListPushFront
	add	esp, 8
$LN6@xmlTextWri:

; 1104 :     }
; 1105 : 
; 1106 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1107 : }

	pop	esi
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartElementNS ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartElement
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_name$ = 12						; size = 4
_xmlTextWriterStartElement PROC				; COMDAT

; 957  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 958  :     int count;
; 959  :     int sum;
; 960  :     xmlLinkPtr lk;
; 961  :     xmlTextWriterStackEntry *p;
; 962  : 
; 963  :     if ((writer == NULL) || (name == NULL) || (*name == '\0'))

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN5@xmlTextWri
	mov	eax, DWORD PTR _name$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN4@xmlTextWri
$LN5@xmlTextWri:

; 964  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 965  : 
; 966  :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 967  :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 968  :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	$LN6@xmlTextWri

; 969  :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 970  :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN6@xmlTextWri

; 971  :             switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv76[ebp], ecx
	cmp	DWORD PTR tv76[ebp], 4
	ja	$LN6@xmlTextWri
	mov	edx, DWORD PTR tv76[ebp]
	jmp	DWORD PTR $LN23@xmlTextWri[edx*4]
$LN8@xmlTextWri:

; 972  :                 case XML_TEXTWRITER_PI:
; 973  :                 case XML_TEXTWRITER_PI_TEXT:
; 974  :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri

; 975  :                 case XML_TEXTWRITER_NONE:
; 976  :                     break;

	jmp	$LN6@xmlTextWri
$LN10@xmlTextWri:

; 977  : 				case XML_TEXTWRITER_ATTRIBUTE:
; 978  : 					count = xmlTextWriterEndAttribute(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndAttribute
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 979  : 					if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 980  : 						return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 981  : 					sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN12@xmlTextWri:

; 982  : 					/* fallthrough */
; 983  :                 case XML_TEXTWRITER_NAME:
; 984  :                     /* Output namespace declarations */
; 985  :                     count = xmlTextWriterOutputNSDecl(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterOutputNSDecl
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 986  :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 987  :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN13@xmlTextWri:

; 988  :                     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 989  :                     count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 990  :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN14@xmlTextWri

; 991  :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN14@xmlTextWri:

; 992  :                     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 993  :                     if (writer->indent)

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN15@xmlTextWri

; 994  :                         count =

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax
$LN15@xmlTextWri:

; 995  :                             xmlOutputBufferWriteString(writer->out, "\n");
; 996  :                     p->state = XML_TEXTWRITER_TEXT;

	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx+4], 3
$LN6@xmlTextWri:

; 997  :                     break;
; 998  :                 default:
; 999  :                     break;
; 1000 :             }
; 1001 :         }
; 1002 :     }
; 1003 : 
; 1004 :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 1005 :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 1006 :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN17@xmlTextWri

; 1007 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CM@FINCADKE@xmlTextWriterStartElement?5?3?5out@
	push	2
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1008 :                         "xmlTextWriterStartElement : out of memory!\n");
; 1009 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN17@xmlTextWri:

; 1010 :     }
; 1011 : 
; 1012 :     p->name = xmlStrdup(name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_xmlStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [ecx], eax

; 1013 :     if (p->name == 0) {

	mov	edx, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [edx], 0
	jne	SHORT $LN18@xmlTextWri

; 1014 :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CM@FINCADKE@xmlTextWriterStartElement?5?3?5out@
	push	2
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 1015 :                         "xmlTextWriterStartElement : out of memory!\n");
; 1016 :         xmlFree(p);

	mov	esi, esp
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1017 :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN18@xmlTextWri:

; 1018 :     }
; 1019 :     p->state = XML_TEXTWRITER_NAME;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx+4], 1

; 1020 : 
; 1021 :     xmlListPushFront(writer->nodes, p);

	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListPushFront
	add	esp, 8

; 1022 : 
; 1023 :     if (writer->indent) {

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN19@xmlTextWri

; 1024 :         count = xmlTextWriterWriteIndent(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 1025 :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN19@xmlTextWri:

; 1026 :     }
; 1027 : 
; 1028 :     count = xmlOutputBufferWriteString(writer->out, "<");

	push	OFFSET ??_C@_01MNNFJEPP@?$DM@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1029 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN20@xmlTextWri

; 1030 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN20@xmlTextWri:

; 1031 :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 1032 :     count =

	mov	eax, DWORD PTR _p$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 1033 :         xmlOutputBufferWriteString(writer->out, (const char *) p->name);
; 1034 :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN21@xmlTextWri

; 1035 :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN21@xmlTextWri:

; 1036 :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 1037 : 
; 1038 :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 1039 : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@xmlTextWri:
	DD	$LN12@xmlTextWri
	DD	$LN10@xmlTextWri
	DD	$LN6@xmlTextWri
	DD	$LN8@xmlTextWri
	DD	$LN8@xmlTextWri
_xmlTextWriterStartElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteComment
_TEXT	SEGMENT
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_content$ = 12						; size = 4
_xmlTextWriterWriteComment PROC				; COMDAT

; 925  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 926  :     int count;
; 927  :     int sum;
; 928  : 
; 929  :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 930  :     count = xmlTextWriterStartComment(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterStartComment
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 931  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN2@xmlTextWri

; 932  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 933  :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 934  :     count = xmlTextWriterWriteString(writer, content);

	mov	edx, DWORD PTR _content$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 935  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN3@xmlTextWri

; 936  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 937  :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 938  :     count = xmlTextWriterEndComment(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndComment
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 939  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN4@xmlTextWri

; 940  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN4@xmlTextWri:

; 941  :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 942  : 
; 943  :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 944  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteComment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteVFormatComment
_TEXT	SEGMENT
_buf$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_argptr$ = 16						; size = 4
_xmlTextWriterWriteVFormatComment PROC			; COMDAT

; 894  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 895  :     int rc;
; 896  :     xmlChar *buf;
; 897  : 
; 898  :     if (writer == NULL) {

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlTextWri

; 899  :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DE@JBFCJMHJ@xmlTextWriterWriteVFormatCommen@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 900  :                         "xmlTextWriterWriteVFormatComment : invalid writer!\n");
; 901  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 902  :     }
; 903  : 
; 904  :     buf = xmlTextWriterVSprintf(format, argptr);

	mov	ecx, DWORD PTR _argptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	call	_xmlTextWriterVSprintf
	add	esp, 8
	mov	DWORD PTR _buf$[ebp], eax

; 905  :     if (buf == NULL)

	cmp	DWORD PTR _buf$[ebp], 0
	jne	SHORT $LN3@xmlTextWri

; 906  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN3@xmlTextWri:

; 907  : 
; 908  :     rc = xmlTextWriterWriteComment(writer, buf);

	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterWriteComment
	add	esp, 8
	mov	DWORD PTR _rc$[ebp], eax

; 909  : 
; 910  :     xmlFree(buf);

	mov	esi, esp
	mov	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 911  :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]
$LN1@xmlTextWri:

; 912  : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteVFormatComment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterWriteFormatComment
_TEXT	SEGMENT
_ap$ = -8						; size = 4
_rc$ = -4						; size = 4
_writer$ = 8						; size = 4
_format$ = 12						; size = 4
_xmlTextWriterWriteFormatComment PROC			; COMDAT

; 869  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 870  :     int rc;
; 871  :     va_list ap;
; 872  : 
; 873  :     va_start(ap, format);

	lea	eax, DWORD PTR _format$[ebp+4]
	mov	DWORD PTR _ap$[ebp], eax

; 874  : 
; 875  :     rc = xmlTextWriterWriteVFormatComment(writer, format, ap);

	mov	ecx, DWORD PTR _ap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _format$[ebp]
	push	edx
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterWriteVFormatComment
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _rc$[ebp], eax

; 876  : 
; 877  :     va_end(ap);

	mov	DWORD PTR _ap$[ebp], 0

; 878  :     return rc;

	mov	eax, DWORD PTR _rc$[ebp]

; 879  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterWriteFormatComment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndComment
_TEXT	SEGMENT
tv79 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndComment PROC				; COMDAT

; 810  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 811  :     int count;
; 812  :     int sum;
; 813  :     xmlLinkPtr lk;
; 814  :     xmlTextWriterStackEntry *p;
; 815  : 
; 816  :     if (writer == NULL) {

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 817  :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CL@GJMJAJAF@xmlTextWriterEndComment?5?3?5inval@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 818  :                         "xmlTextWriterEndComment : invalid writer!\n");
; 819  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 820  :     }
; 821  : 
; 822  :     lk = xmlListFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 823  :     if (lk == 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 824  :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DI@MAGHMILC@xmlTextWriterEndComment?5?3?5not?5a@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 825  :                         "xmlTextWriterEndComment : not allowed in this context!\n");
; 826  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 827  :     }
; 828  : 
; 829  :     p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 830  :     if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 831  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 832  : 
; 833  :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 834  :     switch (p->state) {

	mov	edx, DWORD PTR _p$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR tv79[ebp], eax
	cmp	DWORD PTR tv79[ebp], 16			; 00000010H
	je	SHORT $LN7@xmlTextWri
	jmp	SHORT $LN9@xmlTextWri
$LN7@xmlTextWri:

; 835  :         case XML_TEXTWRITER_COMMENT:
; 836  :             count = xmlOutputBufferWriteString(writer->out, "-->");

	push	OFFSET ??_C@_03PNLDJJMO@?9?9?$DO@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 837  :             if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN8@xmlTextWri

; 838  :                 return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN8@xmlTextWri:

; 839  :             sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 840  :             break;

	jmp	SHORT $LN2@xmlTextWri
$LN9@xmlTextWri:

; 841  :         default:
; 842  :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN2@xmlTextWri:

; 843  :     }
; 844  : 
; 845  :     if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN10@xmlTextWri

; 846  :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 847  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 848  :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN11@xmlTextWri:

; 849  :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN10@xmlTextWri:

; 850  :     }
; 851  : 
; 852  :     xmlListPopFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPopFront
	add	esp, 4

; 853  :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 854  : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterEndComment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartComment
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterStartComment PROC				; COMDAT

; 726  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 727  :     int count;
; 728  :     int sum;
; 729  :     xmlLinkPtr lk;
; 730  :     xmlTextWriterStackEntry *p;
; 731  : 
; 732  :     if (writer == NULL) {

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN4@xmlTextWri

; 733  :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CN@DOOOICJG@xmlTextWriterStartComment?5?3?5inv@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 734  :                         "xmlTextWriterStartComment : invalid writer!\n");
; 735  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 736  :     }
; 737  : 
; 738  :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 739  :     lk = xmlListFront(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 740  :     if (lk != 0) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	$LN5@xmlTextWri

; 741  :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	eax, DWORD PTR _lk$[ebp]
	push	eax
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 742  :         if (p != 0) {

	cmp	DWORD PTR _p$[ebp], 0
	je	$LN5@xmlTextWri

; 743  :             switch (p->state) {

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv76[ebp], edx
	cmp	DWORD PTR tv76[ebp], 0
	je	SHORT $LN7@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 1
	je	SHORT $LN8@xmlTextWri
	cmp	DWORD PTR tv76[ebp], 3
	je	SHORT $LN7@xmlTextWri
	jmp	$LN13@xmlTextWri
$LN7@xmlTextWri:

; 744  :                 case XML_TEXTWRITER_TEXT:
; 745  :                 case XML_TEXTWRITER_NONE:
; 746  :                     break;

	jmp	$LN5@xmlTextWri
$LN8@xmlTextWri:

; 747  :                 case XML_TEXTWRITER_NAME:
; 748  :                     /* Output namespace declarations */
; 749  :                     count = xmlTextWriterOutputNSDecl(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterOutputNSDecl
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 750  :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 751  :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 752  :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 753  :                     count = xmlOutputBufferWriteString(writer->out, ">");

	push	OFFSET ??_C@_01PPODPGHN@?$DO@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 754  :                     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN10@xmlTextWri

; 755  :                         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN10@xmlTextWri:

; 756  :                     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 757  :                     if (writer->indent) {

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+16], 0
	je	SHORT $LN11@xmlTextWri

; 758  :                         count =

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 759  :                             xmlOutputBufferWriteString(writer->out, "\n");
; 760  :                         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN12@xmlTextWri

; 761  :                             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN12@xmlTextWri:

; 762  :                         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN11@xmlTextWri:

; 763  :                     }
; 764  :                     p->state = XML_TEXTWRITER_TEXT;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], 3

; 765  :                     break;

	jmp	SHORT $LN5@xmlTextWri
$LN13@xmlTextWri:

; 766  :                 default:
; 767  :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 768  :             }
; 769  :         }
; 770  :     }
; 771  : 
; 772  :     p = (xmlTextWriterStackEntry *)

	mov	esi, esp
	push	8
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _p$[ebp], eax

; 773  :         xmlMalloc(sizeof(xmlTextWriterStackEntry));
; 774  :     if (p == 0) {

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN14@xmlTextWri

; 775  :         xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CM@FINCADKE@xmlTextWriterStartElement?5?3?5out@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 776  :                         "xmlTextWriterStartElement : out of memory!\n");
; 777  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN14@xmlTextWri:

; 778  :     }
; 779  : 
; 780  :     p->name = NULL;

	mov	edx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [edx], 0

; 781  :     p->state = XML_TEXTWRITER_COMMENT;

	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], 16			; 00000010H

; 782  : 
; 783  :     xmlListPushFront(writer->nodes, p);

	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListPushFront
	add	esp, 8

; 784  : 
; 785  :     if (writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN15@xmlTextWri

; 786  :         count = xmlTextWriterWriteIndent(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterWriteIndent
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 787  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 788  :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN16@xmlTextWri:

; 789  :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN15@xmlTextWri:

; 790  :     }
; 791  : 
; 792  :     count = xmlOutputBufferWriteString(writer->out, "<!--");

	push	OFFSET ??_C@_04FFDNBKGC@?$DM?$CB?9?9@
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 793  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 794  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN17@xmlTextWri:

; 795  :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 796  : 
; 797  :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 798  : }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartComment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterEndDocument
_TEXT	SEGMENT
tv76 = -20						; size = 4
_p$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_xmlTextWriterEndDocument PROC				; COMDAT

; 640  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 641  :     int count;
; 642  :     int sum;
; 643  :     xmlLinkPtr lk;
; 644  :     xmlTextWriterStackEntry *p;
; 645  : 
; 646  :     if (writer == NULL) {

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN6@xmlTextWri

; 647  :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CM@MFAOOHEJ@xmlTextWriterEndDocument?5?3?5inva@
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 648  :                         "xmlTextWriterEndDocument : invalid writer!\n");
; 649  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN6@xmlTextWri:

; 650  :     }
; 651  : 
; 652  :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0
$LN2@xmlTextWri:

; 653  :     while ((lk = xmlListFront(writer->nodes)) != NULL) {

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax
	cmp	DWORD PTR _lk$[ebp], 0
	je	$LN3@xmlTextWri

; 654  :         p = (xmlTextWriterStackEntry *) xmlLinkGetData(lk);

	mov	eax, DWORD PTR _lk$[ebp]
	push	eax
	call	_xmlLinkGetData
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax

; 655  :         if (p == 0)

	cmp	DWORD PTR _p$[ebp], 0
	jne	SHORT $LN7@xmlTextWri

; 656  :             break;

	jmp	$LN3@xmlTextWri
$LN7@xmlTextWri:

; 657  :         switch (p->state) {

	mov	ecx, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv76[ebp], edx
	mov	eax, DWORD PTR tv76[ebp]
	sub	eax, 1
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 15			; 0000000fH
	ja	$LN4@xmlTextWri
	mov	ecx, DWORD PTR tv76[ebp]
	movzx	edx, BYTE PTR $LN22@xmlTextWri[ecx]
	jmp	DWORD PTR $LN23@xmlTextWri[edx*4]
$LN8@xmlTextWri:

; 658  :             case XML_TEXTWRITER_NAME:
; 659  :             case XML_TEXTWRITER_ATTRIBUTE:
; 660  :             case XML_TEXTWRITER_TEXT:
; 661  :                 count = xmlTextWriterEndElement(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndElement
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 662  :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN9@xmlTextWri

; 663  :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN9@xmlTextWri:

; 664  :                 sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 665  :                 break;

	jmp	$LN4@xmlTextWri
$LN10@xmlTextWri:

; 666  :             case XML_TEXTWRITER_PI:
; 667  :             case XML_TEXTWRITER_PI_TEXT:
; 668  :                 count = xmlTextWriterEndPI(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndPI
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 669  :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 670  :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 671  :                 sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 672  :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN12@xmlTextWri:

; 673  :             case XML_TEXTWRITER_CDATA:
; 674  :                 count = xmlTextWriterEndCDATA(writer);

	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlTextWriterEndCDATA
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 675  :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN13@xmlTextWri

; 676  :                     return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN13@xmlTextWri:

; 677  :                 sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 678  :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN14@xmlTextWri:

; 679  :             case XML_TEXTWRITER_DTD:
; 680  :             case XML_TEXTWRITER_DTD_TEXT:
; 681  :             case XML_TEXTWRITER_DTD_ELEM:
; 682  :             case XML_TEXTWRITER_DTD_ELEM_TEXT:
; 683  :             case XML_TEXTWRITER_DTD_ATTL:
; 684  :             case XML_TEXTWRITER_DTD_ATTL_TEXT:
; 685  :             case XML_TEXTWRITER_DTD_ENTY:
; 686  :             case XML_TEXTWRITER_DTD_ENTY_TEXT:
; 687  :             case XML_TEXTWRITER_DTD_PENT:
; 688  :                 count = xmlTextWriterEndDTD(writer);

	mov	eax, DWORD PTR _writer$[ebp]
	push	eax
	call	_xmlTextWriterEndDTD
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 689  :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN15@xmlTextWri

; 690  :                     return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN15@xmlTextWri:

; 691  :                 sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 692  :                 break;

	jmp	SHORT $LN4@xmlTextWri
$LN16@xmlTextWri:

; 693  :             case XML_TEXTWRITER_COMMENT:
; 694  :                 count = xmlTextWriterEndComment(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterEndComment
	add	esp, 4
	mov	DWORD PTR _count$[ebp], eax

; 695  :                 if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN17@xmlTextWri

; 696  :                     return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN17@xmlTextWri:

; 697  :                 sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax
$LN4@xmlTextWri:

; 698  :                 break;
; 699  :             default:
; 700  :                 break;
; 701  :         }
; 702  :     }

	jmp	$LN2@xmlTextWri
$LN3@xmlTextWri:

; 703  : 
; 704  :     if (!writer->indent) {

	mov	ecx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN19@xmlTextWri

; 705  :         count = xmlOutputBufferWriteString(writer->out, "\n");

	push	OFFSET ??_C@_01EEMJAFIK@?6@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 706  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN20@xmlTextWri

; 707  :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN20@xmlTextWri:

; 708  :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx
$LN19@xmlTextWri:

; 709  :     }
; 710  : 
; 711  :     sum += xmlTextWriterFlush(writer);

	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlTextWriterFlush
	add	esp, 4
	add	eax, DWORD PTR _sum$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 712  : 
; 713  :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 714  : }

	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@xmlTextWri:
	DD	$LN8@xmlTextWri
	DD	$LN10@xmlTextWri
	DD	$LN12@xmlTextWri
	DD	$LN14@xmlTextWri
	DD	$LN16@xmlTextWri
$LN22@xmlTextWri:
	DB	0
	DB	0
	DB	0
	DB	1
	DB	1
	DB	2
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	4
_xmlTextWriterEndDocument ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlTextWriterStartDocument
_TEXT	SEGMENT
_encoder$ = -16						; size = 4
_lk$ = -12						; size = 4
_sum$ = -8						; size = 4
_count$ = -4						; size = 4
_writer$ = 8						; size = 4
_version$ = 12						; size = 4
_encoding$ = 16						; size = 4
_standalone$ = 20					; size = 4
_xmlTextWriterStartDocument PROC			; COMDAT

; 521  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 522  :     int count;
; 523  :     int sum;
; 524  :     xmlLinkPtr lk;
; 525  :     xmlCharEncodingHandlerPtr encoder;
; 526  : 
; 527  :     if ((writer == NULL) || (writer->out == NULL)) {

	cmp	DWORD PTR _writer$[ebp], 0
	je	SHORT $LN3@xmlTextWri
	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN2@xmlTextWri
$LN3@xmlTextWri:

; 528  :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CO@KMFPACDM@xmlTextWriterStartDocument?5?3?5in@
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 529  :                         "xmlTextWriterStartDocument : invalid writer!\n");
; 530  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN2@xmlTextWri:

; 531  :     }
; 532  : 
; 533  :     lk = xmlListFront(writer->nodes);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListFront
	add	esp, 4
	mov	DWORD PTR _lk$[ebp], eax

; 534  :     if ((lk != NULL) && (xmlLinkGetData(lk) != NULL)) {

	cmp	DWORD PTR _lk$[ebp], 0
	je	SHORT $LN4@xmlTextWri
	mov	ecx, DWORD PTR _lk$[ebp]
	push	ecx
	call	_xmlLinkGetData
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@xmlTextWri

; 535  :         xmlWriterErrMsg(writer, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DL@JOCNHFIJ@xmlTextWriterStartDocument?5?3?5no@
	push	1
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 536  :                         "xmlTextWriterStartDocument : not allowed in this context!\n");
; 537  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN4@xmlTextWri:

; 538  :     }
; 539  : 
; 540  :     encoder = NULL;

	mov	DWORD PTR _encoder$[ebp], 0

; 541  :     if (encoding != NULL) {

	cmp	DWORD PTR _encoding$[ebp], 0
	je	SHORT $LN5@xmlTextWri

; 542  :         encoder = xmlFindCharEncodingHandler(encoding);

	mov	eax, DWORD PTR _encoding$[ebp]
	push	eax
	call	_xmlFindCharEncodingHandler
	add	esp, 4
	mov	DWORD PTR _encoder$[ebp], eax

; 543  :         if (encoder == NULL) {

	cmp	DWORD PTR _encoder$[ebp], 0
	jne	SHORT $LN5@xmlTextWri

; 544  :             xmlWriterErrMsg(writer, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CN@ODOCGFDE@xmlTextWriterStartDocument?5?3?5ou@
	push	2
	mov	ecx, DWORD PTR _writer$[ebp]
	push	ecx
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 545  :                             "xmlTextWriterStartDocument : out of memory!\n");
; 546  :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN5@xmlTextWri:

; 547  :         }
; 548  :     }
; 549  : 
; 550  :     writer->out->encoder = encoder;

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _encoder$[ebp]
	mov	DWORD PTR [eax+12], ecx

; 551  :     if (encoder != NULL) {

	cmp	DWORD PTR _encoder$[ebp], 0
	je	SHORT $LN7@xmlTextWri

; 552  : 	if (writer->out->conv == NULL) {

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN9@xmlTextWri

; 553  : 	    writer->out->conv = xmlBufCreateSize(4000);

	push	4000					; 00000fa0H
	call	_xmlBufCreateSize
	add	esp, 4
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+20], eax
$LN9@xmlTextWri:

; 554  : 	}
; 555  :         xmlCharEncOutput(writer->out, 1);

	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlCharEncOutput
	add	esp, 8

; 556  :         if ((writer->doc != NULL) && (writer->doc->encoding == NULL))

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	SHORT $LN10@xmlTextWri
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	cmp	DWORD PTR [ecx+60], 0
	jne	SHORT $LN10@xmlTextWri

; 557  :             writer->doc->encoding = xmlStrdup((xmlChar *)writer->out->encoder->name);

	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlStrdup
	add	esp, 4
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	DWORD PTR [edx+60], eax
$LN10@xmlTextWri:

; 558  :     } else

	jmp	SHORT $LN8@xmlTextWri
$LN7@xmlTextWri:

; 559  :         writer->out->conv = NULL;

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [ecx+20], 0
$LN8@xmlTextWri:

; 560  : 
; 561  :     sum = 0;

	mov	DWORD PTR _sum$[ebp], 0

; 562  :     count = xmlOutputBufferWriteString(writer->out, "<?xml version=");

	push	OFFSET ??_C@_0P@CNJADHFP@?$DM?$DPxml?5version?$DN@
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 563  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN11@xmlTextWri

; 564  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN11@xmlTextWri:

; 565  :     sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 566  :     count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	edx, DWORD PTR _writer$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 567  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN12@xmlTextWri

; 568  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN12@xmlTextWri:

; 569  :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 570  :     if (version != 0)

	cmp	DWORD PTR _version$[ebp], 0
	je	SHORT $LN13@xmlTextWri

; 571  :         count = xmlOutputBufferWriteString(writer->out, version);

	mov	eax, DWORD PTR _version$[ebp]
	push	eax
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN14@xmlTextWri
$LN13@xmlTextWri:

; 572  :     else
; 573  :         count = xmlOutputBufferWriteString(writer->out, "1.0");

	push	OFFSET ??_C@_03HLLJOCDO@1?40@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax
$LN14@xmlTextWri:

; 574  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN15@xmlTextWri

; 575  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN15@xmlTextWri:

; 576  :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 577  :     count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 578  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN16@xmlTextWri

; 579  :         return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN16@xmlTextWri:

; 580  :     sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 581  :     if (writer->out->encoder != 0) {

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	DWORD PTR [edx+12], 0
	je	$LN17@xmlTextWri

; 582  :         count = xmlOutputBufferWriteString(writer->out, " encoding=");

	push	OFFSET ??_C@_0L@GJNPICMJ@?5encoding?$DN@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 583  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN18@xmlTextWri

; 584  :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN18@xmlTextWri:

; 585  :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 586  :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 587  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN19@xmlTextWri

; 588  :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN19@xmlTextWri:

; 589  :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 590  :         count =

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 591  :             xmlOutputBufferWriteString(writer->out,
; 592  :                                        writer->out->encoder->name);
; 593  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN20@xmlTextWri

; 594  :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN20@xmlTextWri:

; 595  :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 596  :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	edx, DWORD PTR _writer$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 597  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN21@xmlTextWri

; 598  :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN21@xmlTextWri:

; 599  :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN17@xmlTextWri:

; 600  :     }
; 601  : 
; 602  :     if (standalone != 0) {

	cmp	DWORD PTR _standalone$[ebp], 0
	je	$LN22@xmlTextWri

; 603  :         count = xmlOutputBufferWriteString(writer->out, " standalone=");

	push	OFFSET ??_C@_0N@BGGHLCGN@?5standalone?$DN@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 604  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN23@xmlTextWri

; 605  :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN23@xmlTextWri:

; 606  :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 607  :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	eax, DWORD PTR _writer$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	push	1
	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 608  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN24@xmlTextWri

; 609  :             return -1;

	or	eax, -1
	jmp	$LN1@xmlTextWri
$LN24@xmlTextWri:

; 610  :         sum += count;

	mov	eax, DWORD PTR _sum$[ebp]
	add	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], eax

; 611  :         count = xmlOutputBufferWriteString(writer->out, standalone);

	mov	ecx, DWORD PTR _standalone$[ebp]
	push	ecx
	mov	edx, DWORD PTR _writer$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 612  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN25@xmlTextWri

; 613  :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN25@xmlTextWri:

; 614  :         sum += count;

	mov	ecx, DWORD PTR _sum$[ebp]
	add	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], ecx

; 615  :         count = xmlOutputBufferWrite(writer->out, 1, &writer->qchar);

	mov	edx, DWORD PTR _writer$[ebp]
	add	edx, 28					; 0000001cH
	push	edx
	push	1
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWrite
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _count$[ebp], eax

; 616  :         if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN26@xmlTextWri

; 617  :             return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN26@xmlTextWri:

; 618  :         sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx
$LN22@xmlTextWri:

; 619  :     }
; 620  : 
; 621  :     count = xmlOutputBufferWriteString(writer->out, "?>\n");

	push	OFFSET ??_C@_03KCOJOIAE@?$DP?$DO?6@
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_xmlOutputBufferWriteString
	add	esp, 8
	mov	DWORD PTR _count$[ebp], eax

; 622  :     if (count < 0)

	cmp	DWORD PTR _count$[ebp], 0
	jge	SHORT $LN27@xmlTextWri

; 623  :         return -1;

	or	eax, -1
	jmp	SHORT $LN1@xmlTextWri
$LN27@xmlTextWri:

; 624  :     sum += count;

	mov	edx, DWORD PTR _sum$[ebp]
	add	edx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _sum$[ebp], edx

; 625  : 
; 626  :     return sum;

	mov	eax, DWORD PTR _sum$[ebp]
$LN1@xmlTextWri:

; 627  : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlTextWriterStartDocument ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlFreeTextWriter
_TEXT	SEGMENT
_writer$ = 8						; size = 4
_xmlFreeTextWriter PROC					; COMDAT

; 478  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 479  :     if (writer == NULL)

	cmp	DWORD PTR _writer$[ebp], 0
	jne	SHORT $LN2@xmlFreeTex

; 480  :         return;

	jmp	$LN1@xmlFreeTex
$LN2@xmlFreeTex:

; 481  : 
; 482  :     if (writer->out != NULL)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@xmlFreeTex

; 483  :         xmlOutputBufferClose(writer->out);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_xmlOutputBufferClose
	add	esp, 4
$LN3@xmlFreeTex:

; 484  : 
; 485  :     if (writer->nodes != NULL)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN4@xmlFreeTex

; 486  :         xmlListDelete(writer->nodes);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_xmlListDelete
	add	esp, 4
$LN4@xmlFreeTex:

; 487  : 
; 488  :     if (writer->nsstack != NULL)

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN5@xmlFreeTex

; 489  :         xmlListDelete(writer->nsstack);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_xmlListDelete
	add	esp, 4
$LN5@xmlFreeTex:

; 490  : 
; 491  :     if (writer->ctxt != NULL) {

	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN6@xmlFreeTex

; 492  :         if ((writer->ctxt->myDoc != NULL) && (writer->no_doc_free == 0)) {

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	cmp	DWORD PTR [edx+8], 0
	je	SHORT $LN7@xmlFreeTex
	mov	eax, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [eax+36], 0
	jne	SHORT $LN7@xmlFreeTex

; 493  : 	    xmlFreeDoc(writer->ctxt->myDoc);

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_xmlFreeDoc
	add	esp, 4

; 494  : 	    writer->ctxt->myDoc = NULL;

	mov	ecx, DWORD PTR _writer$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [edx+8], 0
$LN7@xmlFreeTex:

; 495  : 	}
; 496  :         xmlFreeParserCtxt(writer->ctxt);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_xmlFreeParserCtxt
	add	esp, 4
$LN6@xmlFreeTex:

; 497  :     }
; 498  : 
; 499  :     if (writer->doc != NULL)

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	SHORT $LN8@xmlFreeTex

; 500  :         xmlFreeDoc(writer->doc);

	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	call	_xmlFreeDoc
	add	esp, 4
$LN8@xmlFreeTex:

; 501  : 
; 502  :     if (writer->ichar != NULL)

	mov	edx, DWORD PTR _writer$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN9@xmlFreeTex

; 503  :         xmlFree(writer->ichar);

	mov	esi, esp
	mov	eax, DWORD PTR _writer$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@xmlFreeTex:

; 504  :     xmlFree(writer);

	mov	esi, esp
	mov	edx, DWORD PTR _writer$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@xmlFreeTex:

; 505  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlFreeTextWriter ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlNewTextWriterTree
_TEXT	SEGMENT
_ctxt$ = -144						; size = 4
_saxHandler$ = -136					; size = 128
_ret$ = -4						; size = 4
_doc$ = 8						; size = 4
_node$ = 12						; size = 4
_compression$ = 16					; size = 4
_xmlNewTextWriterTree PROC				; COMDAT

; 424  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	edi
	lea	edi, DWORD PTR [ebp-144]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 425  :     xmlTextWriterPtr ret;
; 426  :     xmlSAXHandler saxHandler;
; 427  :     xmlParserCtxtPtr ctxt;
; 428  : 
; 429  :     if (doc == NULL) {

	cmp	DWORD PTR _doc$[ebp], 0
	jne	SHORT $LN2@xmlNewText

; 430  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CP@PFMBJEMH@xmlNewTextWriterTree?5?3?5invalid?5@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 431  :                         "xmlNewTextWriterTree : invalid document tree!\n");
; 432  :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlNewText
$LN2@xmlNewText:

; 433  :     }
; 434  : 
; 435  :     memset(&saxHandler, '\0', sizeof(saxHandler));

	push	128					; 00000080H
	push	0
	lea	eax, DWORD PTR _saxHandler$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 436  :     xmlSAX2InitDefaultSAXHandler(&saxHandler, 1);

	push	1
	lea	ecx, DWORD PTR _saxHandler$[ebp]
	push	ecx
	call	_xmlSAX2InitDefaultSAXHandler
	add	esp, 8

; 437  :     saxHandler.startDocument = xmlTextWriterStartDocumentCallback;

	mov	DWORD PTR _saxHandler$[ebp+48], OFFSET _xmlTextWriterStartDocumentCallback

; 438  :     saxHandler.startElement = xmlSAX2StartElement;

	mov	DWORD PTR _saxHandler$[ebp+56], OFFSET _xmlSAX2StartElement

; 439  :     saxHandler.endElement = xmlSAX2EndElement;

	mov	DWORD PTR _saxHandler$[ebp+60], OFFSET _xmlSAX2EndElement

; 440  : 
; 441  :     ctxt = xmlCreatePushParserCtxt(&saxHandler, NULL, NULL, 0, NULL);

	push	0
	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _saxHandler$[ebp]
	push	edx
	call	_xmlCreatePushParserCtxt
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ctxt$[ebp], eax

; 442  :     if (ctxt == NULL) {

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN3@xmlNewText

; 443  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DJ@MHFIEMJE@xmlNewTextWriterDoc?5?3?5error?5at?5@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 444  :                         "xmlNewTextWriterDoc : error at xmlCreatePushParserCtxt!\n");
; 445  :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlNewText
$LN3@xmlNewText:

; 446  :     }
; 447  :     /*
; 448  :      * For some reason this seems to completely break if node names
; 449  :      * are interned.
; 450  :      */
; 451  :     ctxt->dictNames = 0;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+364], 0

; 452  : 
; 453  :     ret = xmlNewTextWriterPushParser(ctxt, compression);

	mov	ecx, DWORD PTR _compression$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNewTextWriterPushParser
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax

; 454  :     if (ret == NULL) {

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN4@xmlNewText

; 455  :         xmlFreeParserCtxt(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlFreeParserCtxt
	add	esp, 4

; 456  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DM@HKPAOPJL@xmlNewTextWriterDoc?5?3?5error?5at?5@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 457  :                         "xmlNewTextWriterDoc : error at xmlNewTextWriterPushParser!\n");
; 458  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN4@xmlNewText:

; 459  :     }
; 460  : 
; 461  :     ctxt->myDoc = doc;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _doc$[ebp]
	mov	DWORD PTR [ecx+8], edx

; 462  :     ctxt->node = node;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _node$[ebp]
	mov	DWORD PTR [eax+52], ecx

; 463  :     ret->no_doc_free = 1;

	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+36], 1

; 464  : 
; 465  :     xmlSetDocCompressMode(doc, compression);

	mov	eax, DWORD PTR _compression$[ebp]
	push	eax
	mov	ecx, DWORD PTR _doc$[ebp]
	push	ecx
	call	_xmlSetDocCompressMode
	add	esp, 8

; 466  : 
; 467  :     return ret;

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlNewText:

; 468  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@xmlNewText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 144				; 00000090H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@xmlNewText:
	DD	1
	DD	$LN7@xmlNewText
$LN7@xmlNewText:
	DD	-136					; ffffff78H
	DD	128					; 00000080H
	DD	$LN6@xmlNewText
$LN6@xmlNewText:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_xmlNewTextWriterTree ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlNewTextWriterDoc
_TEXT	SEGMENT
_ctxt$ = -144						; size = 4
_saxHandler$ = -136					; size = 128
_ret$ = -4						; size = 4
_doc$ = 8						; size = 4
_compression$ = 12					; size = 4
_xmlNewTextWriterDoc PROC				; COMDAT

; 361  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 144				; 00000090H
	push	edi
	lea	edi, DWORD PTR [ebp-144]
	mov	ecx, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 362  :     xmlTextWriterPtr ret;
; 363  :     xmlSAXHandler saxHandler;
; 364  :     xmlParserCtxtPtr ctxt;
; 365  : 
; 366  :     memset(&saxHandler, '\0', sizeof(saxHandler));

	push	128					; 00000080H
	push	0
	lea	eax, DWORD PTR _saxHandler$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 367  :     xmlSAX2InitDefaultSAXHandler(&saxHandler, 1);

	push	1
	lea	ecx, DWORD PTR _saxHandler$[ebp]
	push	ecx
	call	_xmlSAX2InitDefaultSAXHandler
	add	esp, 8

; 368  :     saxHandler.startDocument = xmlTextWriterStartDocumentCallback;

	mov	DWORD PTR _saxHandler$[ebp+48], OFFSET _xmlTextWriterStartDocumentCallback

; 369  :     saxHandler.startElement = xmlSAX2StartElement;

	mov	DWORD PTR _saxHandler$[ebp+56], OFFSET _xmlSAX2StartElement

; 370  :     saxHandler.endElement = xmlSAX2EndElement;

	mov	DWORD PTR _saxHandler$[ebp+60], OFFSET _xmlSAX2EndElement

; 371  : 
; 372  :     ctxt = xmlCreatePushParserCtxt(&saxHandler, NULL, NULL, 0, NULL);

	push	0
	push	0
	push	0
	push	0
	lea	edx, DWORD PTR _saxHandler$[ebp]
	push	edx
	call	_xmlCreatePushParserCtxt
	add	esp, 20					; 00000014H
	mov	DWORD PTR _ctxt$[ebp], eax

; 373  :     if (ctxt == NULL) {

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN2@xmlNewText

; 374  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DJ@MHFIEMJE@xmlNewTextWriterDoc?5?3?5error?5at?5@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 375  :                 "xmlNewTextWriterDoc : error at xmlCreatePushParserCtxt!\n");
; 376  :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlNewText
$LN2@xmlNewText:

; 377  :     }
; 378  :     /*
; 379  :      * For some reason this seems to completely break if node names
; 380  :      * are interned.
; 381  :      */
; 382  :     ctxt->dictNames = 0;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+364], 0

; 383  : 
; 384  :     ctxt->myDoc = xmlNewDoc(BAD_CAST XML_DEFAULT_VERSION);

	push	OFFSET ??_C@_03HLLJOCDO@1?40@
	call	_xmlNewDoc
	add	esp, 4
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 385  :     if (ctxt->myDoc == NULL) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN3@xmlNewText

; 386  :         xmlFreeParserCtxt(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlFreeParserCtxt
	add	esp, 4

; 387  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CL@MKPGDELP@xmlNewTextWriterDoc?5?3?5error?5at?5@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 388  :                         "xmlNewTextWriterDoc : error at xmlNewDoc!\n");
; 389  :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlNewText
$LN3@xmlNewText:

; 390  :     }
; 391  : 
; 392  :     ret = xmlNewTextWriterPushParser(ctxt, compression);

	mov	ecx, DWORD PTR _compression$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNewTextWriterPushParser
	add	esp, 8
	mov	DWORD PTR _ret$[ebp], eax

; 393  :     if (ret == NULL) {

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN4@xmlNewText

; 394  :         xmlFreeDoc(ctxt->myDoc);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_xmlFreeDoc
	add	esp, 4

; 395  :         xmlFreeParserCtxt(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlFreeParserCtxt
	add	esp, 4

; 396  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DM@HKPAOPJL@xmlNewTextWriterDoc?5?3?5error?5at?5@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 397  :                 "xmlNewTextWriterDoc : error at xmlNewTextWriterPushParser!\n");
; 398  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN4@xmlNewText:

; 399  :     }
; 400  : 
; 401  :     xmlSetDocCompressMode(ctxt->myDoc, compression);

	mov	eax, DWORD PTR _compression$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_xmlSetDocCompressMode
	add	esp, 8

; 402  : 
; 403  :     if (doc != NULL) {

	cmp	DWORD PTR _doc$[ebp], 0
	je	SHORT $LN5@xmlNewText

; 404  :         *doc = ctxt->myDoc;

	mov	eax, DWORD PTR _doc$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx

; 405  : 	ret->no_doc_free = 1;

	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax+36], 1
$LN5@xmlNewText:

; 406  :     }
; 407  : 
; 408  :     return ret;

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlNewText:

; 409  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@xmlNewText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 144				; 00000090H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@xmlNewText:
	DD	1
	DD	$LN8@xmlNewText
$LN8@xmlNewText:
	DD	-136					; ffffff78H
	DD	128					; 00000080H
	DD	$LN7@xmlNewText
$LN7@xmlNewText:
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	72					; 00000048H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_xmlNewTextWriterDoc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlNewTextWriterPushParser
_TEXT	SEGMENT
_out$ = -8						; size = 4
_ret$ = -4						; size = 4
_ctxt$ = 8						; size = 4
_compression$ = 12					; size = 4
_xmlNewTextWriterPushParser PROC			; COMDAT

; 318  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 319  :     xmlTextWriterPtr ret;
; 320  :     xmlOutputBufferPtr out;
; 321  : 
; 322  :     if (ctxt == NULL) {

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN2@xmlNewText

; 323  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0CP@MDJJPOLB@xmlNewTextWriterPushParser?5?3?5in@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 324  :                         "xmlNewTextWriterPushParser : invalid context!\n");
; 325  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN2@xmlNewText:

; 326  :     }
; 327  : 
; 328  :     out = xmlOutputBufferCreateIO(xmlTextWriterWriteDocCallback,

	push	0
	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	push	OFFSET _xmlTextWriterCloseDocCallback
	push	OFFSET _xmlTextWriterWriteDocCallback
	call	_xmlOutputBufferCreateIO
	add	esp, 16					; 00000010H
	mov	DWORD PTR _out$[ebp], eax

; 329  :                                   xmlTextWriterCloseDocCallback,
; 330  :                                   (void *) ctxt, NULL);
; 331  :     if (out == NULL) {

	cmp	DWORD PTR _out$[ebp], 0
	jne	SHORT $LN3@xmlNewText

; 332  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0EA@BHKIBNFO@xmlNewTextWriterPushParser?5?3?5er@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 333  :                         "xmlNewTextWriterPushParser : error at xmlOutputBufferCreateIO!\n");
; 334  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN3@xmlNewText:

; 335  :     }
; 336  : 
; 337  :     ret = xmlNewTextWriter(out);

	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_xmlNewTextWriter
	add	esp, 4
	mov	DWORD PTR _ret$[ebp], eax

; 338  :     if (ret == NULL) {

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN4@xmlNewText

; 339  :         xmlWriterErrMsg(NULL, XML_ERR_INTERNAL_ERROR,

	push	OFFSET ??_C@_0DJ@DOJNHAEH@xmlNewTextWriterPushParser?5?3?5er@
	push	1
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 340  :                         "xmlNewTextWriterPushParser : error at xmlNewTextWriter!\n");
; 341  :         xmlOutputBufferClose(out);

	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_xmlOutputBufferClose
	add	esp, 4

; 342  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN4@xmlNewText:

; 343  :     }
; 344  : 
; 345  :     ret->ctxt = ctxt;

	mov	eax, DWORD PTR _ret$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+32], ecx

; 346  : 
; 347  :     return ret;

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlNewText:

; 348  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNewTextWriterPushParser ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlNewTextWriterMemory
_TEXT	SEGMENT
_out$ = -8						; size = 4
_ret$ = -4						; size = 4
_buf$ = 8						; size = 4
_compression$ = 12					; size = 4
_xmlNewTextWriterMemory PROC				; COMDAT

; 279  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 280  :     xmlTextWriterPtr ret;
; 281  :     xmlOutputBufferPtr out;
; 282  : 
; 283  : /*::todo handle compression */
; 284  :     out = xmlOutputBufferCreateBuffer(buf, NULL);

	push	0
	mov	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_xmlOutputBufferCreateBuffer
	add	esp, 8
	mov	DWORD PTR _out$[ebp], eax

; 285  : 
; 286  :     if (out == NULL) {

	cmp	DWORD PTR _out$[ebp], 0
	jne	SHORT $LN2@xmlNewText

; 287  :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CJ@HOKLKMGC@xmlNewTextWriterMemory?5?3?5out?5of@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 288  :                         "xmlNewTextWriterMemory : out of memory!\n");
; 289  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN2@xmlNewText:

; 290  :     }
; 291  : 
; 292  :     ret = xmlNewTextWriter(out);

	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	call	_xmlNewTextWriter
	add	esp, 4
	mov	DWORD PTR _ret$[ebp], eax

; 293  :     if (ret == NULL) {

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN3@xmlNewText

; 294  :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CJ@HOKLKMGC@xmlNewTextWriterMemory?5?3?5out?5of@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 295  :                         "xmlNewTextWriterMemory : out of memory!\n");
; 296  :         xmlOutputBufferClose(out);

	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_xmlOutputBufferClose
	add	esp, 4

; 297  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN3@xmlNewText:

; 298  :     }
; 299  : 
; 300  :     return ret;

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlNewText:

; 301  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNewTextWriterMemory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlNewTextWriterFilename
_TEXT	SEGMENT
_out$ = -8						; size = 4
_ret$ = -4						; size = 4
_uri$ = 8						; size = 4
_compression$ = 12					; size = 4
_xmlNewTextWriterFilename PROC				; COMDAT

; 243  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 244  :     xmlTextWriterPtr ret;
; 245  :     xmlOutputBufferPtr out;
; 246  : 
; 247  :     out = xmlOutputBufferCreateFilename(uri, NULL, compression);

	mov	eax, DWORD PTR _compression$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _uri$[ebp]
	push	ecx
	call	_xmlOutputBufferCreateFilename
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _out$[ebp], eax

; 248  :     if (out == NULL) {

	cmp	DWORD PTR _out$[ebp], 0
	jne	SHORT $LN2@xmlNewText

; 249  :         xmlWriterErrMsg(NULL, XML_IO_EIO,

	push	OFFSET ??_C@_0CM@BPKCIIPG@xmlNewTextWriterFilename?5?3?5cann@
	push	1516					; 000005ecH
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 250  :                         "xmlNewTextWriterFilename : cannot open uri\n");
; 251  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN2@xmlNewText:

; 252  :     }
; 253  : 
; 254  :     ret = xmlNewTextWriter(out);

	mov	edx, DWORD PTR _out$[ebp]
	push	edx
	call	_xmlNewTextWriter
	add	esp, 4
	mov	DWORD PTR _ret$[ebp], eax

; 255  :     if (ret == NULL) {

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN3@xmlNewText

; 256  :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CL@DOKHFPFK@xmlNewTextWriterFilename?5?3?5out?5@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 257  :                         "xmlNewTextWriterFilename : out of memory!\n");
; 258  :         xmlOutputBufferClose(out);

	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	_xmlOutputBufferClose
	add	esp, 4

; 259  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN3@xmlNewText:

; 260  :     }
; 261  : 
; 262  :     ret->indent = 0;

	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+16], 0

; 263  :     ret->doindent = 0;

	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+20], 0

; 264  :     return ret;

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlNewText:

; 265  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNewTextWriterFilename ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xmlwriter.c
;	COMDAT _xmlNewTextWriter
_TEXT	SEGMENT
_ret$ = -4						; size = 4
_out$ = 8						; size = 4
_xmlNewTextWriter PROC					; COMDAT

; 182  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __DA396148_xmlwriter@c
	call	@__CheckForDebuggerJustMyCode@4

; 183  :     xmlTextWriterPtr ret;
; 184  : 
; 185  :     ret = (xmlTextWriterPtr) xmlMalloc(sizeof(xmlTextWriter));

	mov	esi, esp
	push	44					; 0000002cH
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 186  :     if (ret == NULL) {

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN2@xmlNewText

; 187  :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CD@BLMOIHCP@xmlNewTextWriter?5?3?5out?5of?5memor@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 188  :                         "xmlNewTextWriter : out of memory!\n");
; 189  :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlNewText
$LN2@xmlNewText:

; 190  :     }
; 191  :     memset(ret, 0, (size_t) sizeof(xmlTextWriter));

	push	44					; 0000002cH
	push	0
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 192  : 
; 193  :     ret->nodes = xmlListCreate(xmlFreeTextWriterStackEntry,

	push	OFFSET _xmlCmpTextWriterStackEntry
	push	OFFSET _xmlFreeTextWriterStackEntry
	call	_xmlListCreate
	add	esp, 8
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 194  :                                xmlCmpTextWriterStackEntry);
; 195  :     if (ret->nodes == NULL) {

	mov	edx, DWORD PTR _ret$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN3@xmlNewText

; 196  :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CD@BLMOIHCP@xmlNewTextWriter?5?3?5out?5of?5memor@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 197  :                         "xmlNewTextWriter : out of memory!\n");
; 198  :         xmlFree(ret);

	mov	esi, esp
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 199  :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlNewText
$LN3@xmlNewText:

; 200  :     }
; 201  : 
; 202  :     ret->nsstack = xmlListCreate(xmlFreeTextWriterNsStackEntry,

	push	OFFSET _xmlCmpTextWriterNsStackEntry
	push	OFFSET _xmlFreeTextWriterNsStackEntry
	call	_xmlListCreate
	add	esp, 8
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 203  :                                  xmlCmpTextWriterNsStackEntry);
; 204  :     if (ret->nsstack == NULL) {

	mov	edx, DWORD PTR _ret$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN4@xmlNewText

; 205  :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CD@BLMOIHCP@xmlNewTextWriter?5?3?5out?5of?5memor@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 206  :                         "xmlNewTextWriter : out of memory!\n");
; 207  :         xmlListDelete(ret->nodes);

	mov	eax, DWORD PTR _ret$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_xmlListDelete
	add	esp, 4

; 208  :         xmlFree(ret);

	mov	esi, esp
	mov	edx, DWORD PTR _ret$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 209  :         return NULL;

	xor	eax, eax
	jmp	$LN1@xmlNewText
$LN4@xmlNewText:

; 210  :     }
; 211  : 
; 212  :     ret->out = out;

	mov	eax, DWORD PTR _ret$[ebp]
	mov	ecx, DWORD PTR _out$[ebp]
	mov	DWORD PTR [eax], ecx

; 213  :     ret->ichar = xmlStrdup(BAD_CAST " ");

	push	OFFSET ??_C@_01CLKCMJKC@?5@
	call	_xmlStrdup
	add	esp, 4
	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+24], eax

; 214  :     ret->qchar = '"';

	mov	eax, DWORD PTR _ret$[ebp]
	mov	BYTE PTR [eax+28], 34			; 00000022H

; 215  : 
; 216  :     if (!ret->ichar) {

	mov	ecx, DWORD PTR _ret$[ebp]
	cmp	DWORD PTR [ecx+24], 0
	jne	SHORT $LN5@xmlNewText

; 217  :         xmlListDelete(ret->nodes);

	mov	edx, DWORD PTR _ret$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	_xmlListDelete
	add	esp, 4

; 218  :         xmlListDelete(ret->nsstack);

	mov	ecx, DWORD PTR _ret$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_xmlListDelete
	add	esp, 4

; 219  :         xmlFree(ret);

	mov	esi, esp
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 220  :         xmlWriterErrMsg(NULL, XML_ERR_NO_MEMORY,

	push	OFFSET ??_C@_0CD@BLMOIHCP@xmlNewTextWriter?5?3?5out?5of?5memor@
	push	2
	push	0
	call	_xmlWriterErrMsg
	add	esp, 12					; 0000000cH

; 221  :                         "xmlNewTextWriter : out of memory!\n");
; 222  :         return NULL;

	xor	eax, eax
	jmp	SHORT $LN1@xmlNewText
$LN5@xmlNewText:

; 223  :     }
; 224  : 
; 225  :     ret->doc = xmlNewDoc(NULL);

	push	0
	call	_xmlNewDoc
	add	esp, 4
	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+40], eax

; 226  : 
; 227  :     ret->no_doc_free = 0;

	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+36], 0

; 228  : 
; 229  :     return ret;

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlNewText:

; 230  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNewTextWriter ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __2CC6E67D_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
