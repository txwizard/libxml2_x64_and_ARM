; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\nanoftp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_xmlMalloc:DWORD
COMM	_xmlMallocAtomic:DWORD
COMM	_xmlRealloc:DWORD
COMM	_xmlFree:DWORD
COMM	_xmlMemStrdup:DWORD
COMM	_forbiddenExp:DWORD
COMM	_emptyExp:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__188180DA_corecrt_math@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__7B7A869E_ctype@h DB 01H
__457DD326_basetsd@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__194286D1_winsock2@h DB 01H
__D940C302_ws2ipdef@h DB 01H
__6E172A35_ws2tcpip@h DB 01H
__331E732B_malloc@h DB 01H
__D1B760F5_wspiapi@h DB 01H
__D3ED00D9_nanoftp@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	___local_stdio_scanf_options
PUBLIC	_snprintf
PUBLIC	_sscanf
PUBLIC	_xmlNanoFTPInit
PUBLIC	_xmlNanoFTPCleanup
PUBLIC	_xmlNanoFTPNewCtxt
PUBLIC	_xmlNanoFTPFreeCtxt
PUBLIC	_xmlNanoFTPConnectTo
PUBLIC	_xmlNanoFTPOpen
PUBLIC	_xmlNanoFTPConnect
PUBLIC	_xmlNanoFTPClose
PUBLIC	_xmlNanoFTPQuit
PUBLIC	_xmlNanoFTPScanProxy
PUBLIC	_xmlNanoFTPProxy
PUBLIC	_xmlNanoFTPUpdateURL
PUBLIC	_xmlNanoFTPGetResponse
PUBLIC	_xmlNanoFTPCheckResponse
PUBLIC	_xmlNanoFTPCwd
PUBLIC	_xmlNanoFTPDele
PUBLIC	_xmlNanoFTPGetConnection
PUBLIC	_xmlNanoFTPCloseConnection
PUBLIC	_xmlNanoFTPList
PUBLIC	_xmlNanoFTPGetSocket
PUBLIC	_xmlNanoFTPGet
PUBLIC	_xmlNanoFTPRead
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_08BOGLDIEC@no_proxy@			; `string'
PUBLIC	??_C@_09FLGENLMF@ftp_proxy@			; `string'
PUBLIC	??_C@_09KECINPKO@FTP_PROXY@			; `string'
PUBLIC	??_C@_0P@CAEEHGAA@ftp_proxy_user@		; `string'
PUBLIC	??_C@_0BD@DKAPHOHE@ftp_proxy_password@		; `string'
PUBLIC	??_C@_01KMDKNFGN@?1@				; `string'
PUBLIC	??_C@_03LMDBDBEG@ftp@				; `string'
PUBLIC	??_C@_0O@FGOLBKPK@Syntax?5Error?6@		; `string'
PUBLIC	??_C@_0BH@FLMMHHFH@allocating?5FTP?5context@	; `string'
PUBLIC	??_C@_0M@KMFGCEDE@recv?5failed@			; `string'
PUBLIC	??_C@_06LGNCCACI@select@			; `string'
PUBLIC	??_C@_0BB@PKBEHKHF@USER?5anonymous?$AN?6@	; `string'
PUBLIC	??_C@_09FIJAECMI@USER?5?$CFs?$AN?6@		; `string'
PUBLIC	??_C@_0M@EADLIJBM@send?5failed@			; `string'
PUBLIC	??_C@_0BC@JNJBALOJ@PASS?5anonymous?$EA?$AN?6@	; `string'
PUBLIC	??_C@_09CACMNAGD@PASS?5?$CFs?$AN?6@		; `string'
PUBLIC	??_C@_06FIMJICNC@QUIT?$AN?6@			; `string'
PUBLIC	??_C@_0BF@FEIPFPME@gethostbyname?5failed@	; `string'
PUBLIC	??_C@_0BP@HGBHAFPD@gethostbyname?5address?5mismatch@ ; `string'
PUBLIC	??_C@_0O@FPJGNADN@socket?5failed@		; `string'
PUBLIC	??_C@_0BO@NKBHOJOC@Failed?5to?5create?5a?5connection@ ; `string'
PUBLIC	??_C@_09HOAIGJJF@SITE?5?$CFs?$AN?6@		; `string'
PUBLIC	??_C@_0BE@OGNKDKIM@USER?5anonymous?$EA?$CFs?$AN?6@ ; `string'
PUBLIC	??_C@_0N@NGBGKMKP@USER?5?$CFs?$EA?$CFs?$AN?6@	; `string'
PUBLIC	??_C@_0CK@GIDKJDCD@FTP?5server?5asking?5for?5ACCNT?5on?5@ ; `string'
PUBLIC	??_C@_08JEHOKOMP@CWD?5?$CFs?$AN?6@		; `string'
PUBLIC	??_C@_09PCBACKIO@DELE?5?$CFs?$AN?6@		; `string'
PUBLIC	??_C@_06OGKAIOED@PASV?$AN?6@			; `string'
PUBLIC	??_C@_0BC@GDCBJEOP@?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu@ ; `string'
PUBLIC	??_C@_0BI@FEMCDLGO@Invalid?5answer?5to?5PASV?6@	; `string'
PUBLIC	??_C@_0CD@LJAJBLLL@Failed?5to?5create?5a?5data?5connect@ ; `string'
PUBLIC	??_C@_0M@NNJMLKEI@bind?5failed@			; `string'
PUBLIC	??_C@_0O@MHKNJCGE@listen?5failed@		; `string'
PUBLIC	??_C@_0BJ@FJLKMNPA@PORT?5?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?$AN?6@ ; `string'
PUBLIC	??_C@_05KBOMEDGA@total@				; `string'
PUBLIC	??_C@_09PLPJIOKF@LIST?5?9L?$AN?6@		; `string'
PUBLIC	??_C@_0N@MNMMLKJL@LIST?5?9L?5?$CFs?$AN?6@	; `string'
PUBLIC	??_C@_04IFMDBHHF@recv@				; `string'
PUBLIC	??_C@_08NFILCCME@TYPE?5I?$AN?6@			; `string'
PUBLIC	??_C@_09NFIHFDPP@RETR?5?$CFs?$AN?6@		; `string'
PUBLIC	??_C@_06FNAPNHDD@ftp?3?1?1@			; `string'
EXTRN	_xmlStrndup:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	___xmlIOErr:PROC
EXTRN	_strchr:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__getenv:PROC
EXTRN	___xmlSimpleError:PROC
EXTRN	_xmlParseURIRaw:PROC
EXTRN	_xmlURIUnescapeString:PROC
EXTRN	_xmlFreeURI:PROC
EXTRN	__imp__bind@12:PROC
EXTRN	__imp__closesocket@4:PROC
EXTRN	__imp__connect@12:PROC
EXTRN	__imp__getsockname@12:PROC
EXTRN	__imp__htons@4:PROC
EXTRN	__imp__listen@8:PROC
EXTRN	__imp__recv@16:PROC
EXTRN	__imp__select@20:PROC
EXTRN	__imp__send@16:PROC
EXTRN	__imp__socket@12:PROC
EXTRN	__imp__gethostbyname@4:PROC
EXTRN	__imp__WSAStartup@8:PROC
EXTRN	__imp__WSACleanup@0:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__chkstk:PROC
EXTRN	_memcpy:PROC
EXTRN	_memmove:PROC
EXTRN	_memset:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_initialized DD	01H DUP (?)
_proxy	DD	01H DUP (?)
_proxyPort DD	01H DUP (?)
_proxyUser DD	01H DUP (?)
_proxyPasswd DD	01H DUP (?)
_proxyType DD	01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_06FNAPNHDD@ftp?3?1?1@
CONST	SEGMENT
??_C@_06FNAPNHDD@ftp?3?1?1@ DB 'ftp://', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NFIHFDPP@RETR?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_09NFIHFDPP@RETR?5?$CFs?$AN?6@ DB 'RETR %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NFILCCME@TYPE?5I?$AN?6@
CONST	SEGMENT
??_C@_08NFILCCME@TYPE?5I?$AN?6@ DB 'TYPE I', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IFMDBHHF@recv@
CONST	SEGMENT
??_C@_04IFMDBHHF@recv@ DB 'recv', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MNMMLKJL@LIST?5?9L?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_0N@MNMMLKJL@LIST?5?9L?5?$CFs?$AN?6@ DB 'LIST -L %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09PLPJIOKF@LIST?5?9L?$AN?6@
CONST	SEGMENT
??_C@_09PLPJIOKF@LIST?5?9L?$AN?6@ DB 'LIST -L', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05KBOMEDGA@total@
CONST	SEGMENT
??_C@_05KBOMEDGA@total@ DB 'total', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FJLKMNPA@PORT?5?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?$AN?6@
CONST	SEGMENT
??_C@_0BJ@FJLKMNPA@PORT?5?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?$AN?6@ DB 'P'
	DB	'ORT %d,%d,%d,%d,%d,%d', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MHKNJCGE@listen?5failed@
CONST	SEGMENT
??_C@_0O@MHKNJCGE@listen?5failed@ DB 'listen failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NNJMLKEI@bind?5failed@
CONST	SEGMENT
??_C@_0M@NNJMLKEI@bind?5failed@ DB 'bind failed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@LJAJBLLL@Failed?5to?5create?5a?5data?5connect@
CONST	SEGMENT
??_C@_0CD@LJAJBLLL@Failed?5to?5create?5a?5data?5connect@ DB 'Failed to cr'
	DB	'eate a data connection', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FEMCDLGO@Invalid?5answer?5to?5PASV?6@
CONST	SEGMENT
??_C@_0BI@FEMCDLGO@Invalid?5answer?5to?5PASV?6@ DB 'Invalid answer to PAS'
	DB	'V', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GDCBJEOP@?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu@
CONST	SEGMENT
??_C@_0BC@GDCBJEOP@?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu@ DB '%u,%u,%u'
	DB	',%u,%u,%u', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_06OGKAIOED@PASV?$AN?6@
CONST	SEGMENT
??_C@_06OGKAIOED@PASV?$AN?6@ DB 'PASV', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PCBACKIO@DELE?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_09PCBACKIO@DELE?5?$CFs?$AN?6@ DB 'DELE %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JEHOKOMP@CWD?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_08JEHOKOMP@CWD?5?$CFs?$AN?6@ DB 'CWD %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@GIDKJDCD@FTP?5server?5asking?5for?5ACCNT?5on?5@
CONST	SEGMENT
??_C@_0CK@GIDKJDCD@FTP?5server?5asking?5for?5ACCNT?5on?5@ DB 'FTP server '
	DB	'asking for ACCNT on anonymous', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NGBGKMKP@USER?5?$CFs?$EA?$CFs?$AN?6@
CONST	SEGMENT
??_C@_0N@NGBGKMKP@USER?5?$CFs?$EA?$CFs?$AN?6@ DB 'USER %s@%s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OGNKDKIM@USER?5anonymous?$EA?$CFs?$AN?6@
CONST	SEGMENT
??_C@_0BE@OGNKDKIM@USER?5anonymous?$EA?$CFs?$AN?6@ DB 'USER anonymous@%s', 0dH
	DB	0aH, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09HOAIGJJF@SITE?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_09HOAIGJJF@SITE?5?$CFs?$AN?6@ DB 'SITE %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NKBHOJOC@Failed?5to?5create?5a?5connection@
CONST	SEGMENT
??_C@_0BO@NKBHOJOC@Failed?5to?5create?5a?5connection@ DB 'Failed to creat'
	DB	'e a connection', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FPJGNADN@socket?5failed@
CONST	SEGMENT
??_C@_0O@FPJGNADN@socket?5failed@ DB 'socket failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@HGBHAFPD@gethostbyname?5address?5mismatch@
CONST	SEGMENT
??_C@_0BP@HGBHAFPD@gethostbyname?5address?5mismatch@ DB 'gethostbyname ad'
	DB	'dress mismatch', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FEIPFPME@gethostbyname?5failed@
CONST	SEGMENT
??_C@_0BF@FEIPFPME@gethostbyname?5failed@ DB 'gethostbyname failed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06FIMJICNC@QUIT?$AN?6@
CONST	SEGMENT
??_C@_06FIMJICNC@QUIT?$AN?6@ DB 'QUIT', 0dH, 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CACMNAGD@PASS?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_09CACMNAGD@PASS?5?$CFs?$AN?6@ DB 'PASS %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JNJBALOJ@PASS?5anonymous?$EA?$AN?6@
CONST	SEGMENT
??_C@_0BC@JNJBALOJ@PASS?5anonymous?$EA?$AN?6@ DB 'PASS anonymous@', 0dH, 0aH
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EADLIJBM@send?5failed@
CONST	SEGMENT
??_C@_0M@EADLIJBM@send?5failed@ DB 'send failed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FIJAECMI@USER?5?$CFs?$AN?6@
CONST	SEGMENT
??_C@_09FIJAECMI@USER?5?$CFs?$AN?6@ DB 'USER %s', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PKBEHKHF@USER?5anonymous?$AN?6@
CONST	SEGMENT
??_C@_0BB@PKBEHKHF@USER?5anonymous?$AN?6@ DB 'USER anonymous', 0dH, 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06LGNCCACI@select@
CONST	SEGMENT
??_C@_06LGNCCACI@select@ DB 'select', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KMFGCEDE@recv?5failed@
CONST	SEGMENT
??_C@_0M@KMFGCEDE@recv?5failed@ DB 'recv failed', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FLMMHHFH@allocating?5FTP?5context@
CONST	SEGMENT
??_C@_0BH@FLMMHHFH@allocating?5FTP?5context@ DB 'allocating FTP context', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FGOLBKPK@Syntax?5Error?6@
CONST	SEGMENT
??_C@_0O@FGOLBKPK@Syntax?5Error?6@ DB 'Syntax Error', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03LMDBDBEG@ftp@
CONST	SEGMENT
??_C@_03LMDBDBEG@ftp@ DB 'ftp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01KMDKNFGN@?1@
CONST	SEGMENT
??_C@_01KMDKNFGN@?1@ DB '/', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DKAPHOHE@ftp_proxy_password@
CONST	SEGMENT
??_C@_0BD@DKAPHOHE@ftp_proxy_password@ DB 'ftp_proxy_password', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CAEEHGAA@ftp_proxy_user@
CONST	SEGMENT
??_C@_0P@CAEEHGAA@ftp_proxy_user@ DB 'ftp_proxy_user', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KECINPKO@FTP_PROXY@
CONST	SEGMENT
??_C@_09KECINPKO@FTP_PROXY@ DB 'FTP_PROXY', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FLGENLMF@ftp_proxy@
CONST	SEGMENT
??_C@_09FLGENLMF@ftp_proxy@ DB 'ftp_proxy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08BOGLDIEC@no_proxy@
CONST	SEGMENT
??_C@_08BOGLDIEC@no_proxy@ DB 'no_proxy', 00H		; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPParseList
_TEXT	SEGMENT
_i$ = -264						; size = 4
_links$ = -260						; size = 4
_size$ = -256						; size = 4
_day$ = -252						; size = 4
_hour$ = -248						; size = 4
_minute$ = -244						; size = 4
_year$ = -240						; size = 4
_month$ = -232						; size = 4
_group$ = -220						; size = 11
_owner$ = -200						; size = 11
_attrib$ = -180						; size = 11
_filename$ = -160					; size = 151
_cur$ = -4						; size = 4
_list$ = 8						; size = 4
_callback$ = 12						; size = 4
_userData$ = 16						; size = 4
_xmlNanoFTPParseList PROC				; COMDAT

; 1598 : xmlNanoFTPParseList(const char *list, ftpListCallback callback, void *userData) {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1599 :     const char *cur = list;

	mov	eax, DWORD PTR _list$[ebp]
	mov	DWORD PTR _cur$[ebp], eax

; 1600 :     char filename[151];
; 1601 :     char attrib[11];
; 1602 :     char owner[11];
; 1603 :     char group[11];
; 1604 :     char month[4];
; 1605 :     int year = 0;

	mov	DWORD PTR _year$[ebp], 0

; 1606 :     int minute = 0;

	mov	DWORD PTR _minute$[ebp], 0

; 1607 :     int hour = 0;

	mov	DWORD PTR _hour$[ebp], 0

; 1608 :     int day = 0;

	mov	DWORD PTR _day$[ebp], 0

; 1609 :     unsigned long size = 0;

	mov	DWORD PTR _size$[ebp], 0

; 1610 :     int links = 0;

	mov	DWORD PTR _links$[ebp], 0

; 1611 :     int i;
; 1612 : 
; 1613 :     if (!strncmp(cur, "total", 5)) {

	mov	esi, esp
	push	5
	push	OFFSET ??_C@_05KBOMEDGA@total@
	mov	ecx, DWORD PTR _cur$[ebp]
	push	ecx
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	$LN50@xmlNanoFTP

; 1614 :         cur += 5;

	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 5
	mov	DWORD PTR _cur$[ebp], edx
$LN2@xmlNanoFTP:

; 1615 : 	while (*cur == ' ') cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN4@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx
	jmp	SHORT $LN2@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1616 : 	while ((*cur >= '0') && (*cur <= '9'))

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 48					; 00000030H
	jl	SHORT $LN6@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN6@xmlNanoFTP

; 1617 : 	    links = (links * 10) + (*cur++ - '0');

	imul	ecx, DWORD PTR _links$[ebp], 10
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	DWORD PTR _links$[ebp], ecx
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx
	jmp	SHORT $LN4@xmlNanoFTP
$LN6@xmlNanoFTP:

; 1618 : 	while ((*cur == ' ') || (*cur == '\n')  || (*cur == '\r'))

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN52@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN52@xmlNanoFTP
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 13					; 0000000dH
	jne	SHORT $LN7@xmlNanoFTP
$LN52@xmlNanoFTP:

; 1619 : 	    cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN6@xmlNanoFTP
$LN7@xmlNanoFTP:

; 1620 : 	return(cur - list);

	mov	eax, DWORD PTR _cur$[ebp]
	sub	eax, DWORD PTR _list$[ebp]
	jmp	$LN1@xmlNanoFTP
	jmp	$LN51@xmlNanoFTP
$LN50@xmlNanoFTP:

; 1621 :     } else if (*list == '+') {

	mov	ecx, DWORD PTR _list$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 43					; 0000002bH
	jne	SHORT $LN8@xmlNanoFTP

; 1622 : 	return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP

; 1623 :     } else {

	jmp	$LN51@xmlNanoFTP
$LN8@xmlNanoFTP:

; 1624 : 	while ((*cur == ' ') || (*cur == '\n')  || (*cur == '\r'))

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN55@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN55@xmlNanoFTP
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 13					; 0000000dH
	jne	SHORT $LN9@xmlNanoFTP
$LN55@xmlNanoFTP:

; 1625 : 	    cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN8@xmlNanoFTP
$LN9@xmlNanoFTP:

; 1626 : 	if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN56@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN56@xmlNanoFTP:

; 1627 : 	i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN10@xmlNanoFTP:

; 1628 : 	while (*cur != ' ') {

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN11@xmlNanoFTP

; 1629 : 	    if (i < 10)

	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN57@xmlNanoFTP

; 1630 : 		attrib[i++] = *cur;

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _attrib$[ebp+edx], cl
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN57@xmlNanoFTP:

; 1631 : 	    cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax

; 1632 : 	    if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN58@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN58@xmlNanoFTP:

; 1633 : 	}

	jmp	SHORT $LN10@xmlNanoFTP
$LN11@xmlNanoFTP:

; 1634 : 	attrib[10] = 0;

	mov	eax, 1
	imul	ecx, eax, 10
	mov	BYTE PTR _attrib$[ebp+ecx], 0
$LN12@xmlNanoFTP:

; 1635 : 	while (*cur == ' ') cur++;

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN13@xmlNanoFTP
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN12@xmlNanoFTP
$LN13@xmlNanoFTP:

; 1636 : 	if (*cur == 0) return(0);

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN14@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN14@xmlNanoFTP:

; 1637 : 	while ((*cur >= '0') && (*cur <= '9'))

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 48					; 00000030H
	jl	SHORT $LN16@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 57					; 00000039H
	jg	SHORT $LN16@xmlNanoFTP

; 1638 : 	    links = (links * 10) + (*cur++ - '0');

	imul	edx, DWORD PTR _links$[ebp], 10
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	lea	edx, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _links$[ebp], edx
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN14@xmlNanoFTP
$LN16@xmlNanoFTP:

; 1639 : 	while (*cur == ' ') cur++;

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN17@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN16@xmlNanoFTP
$LN17@xmlNanoFTP:

; 1640 : 	if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN60@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN60@xmlNanoFTP:

; 1641 : 	i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN18@xmlNanoFTP:

; 1642 : 	while (*cur != ' ') {

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN19@xmlNanoFTP

; 1643 : 	    if (i < 10)

	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN61@xmlNanoFTP

; 1644 : 		owner[i++] = *cur;

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _owner$[ebp+edx], cl
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN61@xmlNanoFTP:

; 1645 : 	    cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax

; 1646 : 	    if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN62@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN62@xmlNanoFTP:

; 1647 : 	}

	jmp	SHORT $LN18@xmlNanoFTP
$LN19@xmlNanoFTP:

; 1648 : 	owner[i] = 0;

	mov	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR _owner$[ebp+eax], 0
$LN20@xmlNanoFTP:

; 1649 : 	while (*cur == ' ') cur++;

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN21@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN20@xmlNanoFTP
$LN21@xmlNanoFTP:

; 1650 : 	if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN63@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN63@xmlNanoFTP:

; 1651 : 	i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN22@xmlNanoFTP:

; 1652 : 	while (*cur != ' ') {

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	je	SHORT $LN23@xmlNanoFTP

; 1653 : 	    if (i < 10)

	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN64@xmlNanoFTP

; 1654 : 		group[i++] = *cur;

	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _cur$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _group$[ebp+edx], cl
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN64@xmlNanoFTP:

; 1655 : 	    cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax

; 1656 : 	    if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN65@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN65@xmlNanoFTP:

; 1657 : 	}

	jmp	SHORT $LN22@xmlNanoFTP
$LN23@xmlNanoFTP:

; 1658 : 	group[i] = 0;

	mov	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR _group$[ebp+eax], 0
$LN24@xmlNanoFTP:

; 1659 : 	while (*cur == ' ') cur++;

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN25@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN24@xmlNanoFTP
$LN25@xmlNanoFTP:

; 1660 : 	if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN26@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN26@xmlNanoFTP:

; 1661 : 	while ((*cur >= '0') && (*cur <= '9'))

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 48					; 00000030H
	jl	SHORT $LN28@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN28@xmlNanoFTP

; 1662 : 	    size = (size * 10) + (*cur++ - '0');

	imul	ecx, DWORD PTR _size$[ebp], 10
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	DWORD PTR _size$[ebp], ecx
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx
	jmp	SHORT $LN26@xmlNanoFTP
$LN28@xmlNanoFTP:

; 1663 : 	while (*cur == ' ') cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN29@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx
	jmp	SHORT $LN28@xmlNanoFTP
$LN29@xmlNanoFTP:

; 1664 : 	if (*cur == 0) return(0);

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN67@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN67@xmlNanoFTP:

; 1665 : 	i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN30@xmlNanoFTP:

; 1666 : 	while (*cur != ' ') {

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 32					; 00000020H
	je	SHORT $LN31@xmlNanoFTP

; 1667 : 	    if (i < 3)

	cmp	DWORD PTR _i$[ebp], 3
	jge	SHORT $LN68@xmlNanoFTP

; 1668 : 		month[i++] = *cur;

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _cur$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _month$[ebp+ecx], al
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN68@xmlNanoFTP:

; 1669 : 	    cur++;

	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx

; 1670 : 	    if (*cur == 0) return(0);

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN69@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN69@xmlNanoFTP:

; 1671 : 	}

	jmp	SHORT $LN30@xmlNanoFTP
$LN31@xmlNanoFTP:

; 1672 : 	month[i] = 0;

	mov	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _month$[ebp+edx], 0
$LN32@xmlNanoFTP:

; 1673 : 	while (*cur == ' ') cur++;

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 32					; 00000020H
	jne	SHORT $LN33@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx
	jmp	SHORT $LN32@xmlNanoFTP
$LN33@xmlNanoFTP:

; 1674 : 	if (*cur == 0) return(0);

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN34@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN34@xmlNanoFTP:

; 1675 :         while ((*cur >= '0') && (*cur <= '9'))

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN36@xmlNanoFTP
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 57					; 00000039H
	jg	SHORT $LN36@xmlNanoFTP

; 1676 : 	    day = (day * 10) + (*cur++ - '0');

	imul	eax, DWORD PTR _day$[ebp], 10
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	lea	eax, DWORD PTR [eax+edx-48]
	mov	DWORD PTR _day$[ebp], eax
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN34@xmlNanoFTP
$LN36@xmlNanoFTP:

; 1677 : 	while (*cur == ' ') cur++;

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN37@xmlNanoFTP
	mov	ecx, DWORD PTR _cur$[ebp]
	add	ecx, 1
	mov	DWORD PTR _cur$[ebp], ecx
	jmp	SHORT $LN36@xmlNanoFTP
$LN37@xmlNanoFTP:

; 1678 : 	if (*cur == 0) return(0);

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	test	eax, eax
	jne	SHORT $LN71@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN71@xmlNanoFTP:

; 1679 : 	if ((cur[1] == 0) || (cur[2] == 0)) return(0);

	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	je	SHORT $LN73@xmlNanoFTP
	mov	ecx, 1
	shl	ecx, 1
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	test	eax, eax
	jne	SHORT $LN72@xmlNanoFTP
$LN73@xmlNanoFTP:
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN72@xmlNanoFTP:

; 1680 : 	if ((cur[1] == ':') || (cur[2] == ':')) {

	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 58					; 0000003aH
	je	SHORT $LN38@xmlNanoFTP
	mov	ecx, 1
	shl	ecx, 1
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx+ecx]
	cmp	eax, 58					; 0000003aH
	jne	$LN42@xmlNanoFTP
$LN38@xmlNanoFTP:

; 1681 : 	    while ((*cur >= '0') && (*cur <= '9'))

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 48					; 00000030H
	jl	SHORT $LN39@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 57					; 00000039H
	jg	SHORT $LN39@xmlNanoFTP

; 1682 : 		hour = (hour * 10) + (*cur++ - '0');

	imul	edx, DWORD PTR _hour$[ebp], 10
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	lea	edx, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _hour$[ebp], edx
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN38@xmlNanoFTP
$LN39@xmlNanoFTP:

; 1683 : 	    if (*cur == ':') cur++;

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 58					; 0000003aH
	jne	SHORT $LN40@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
$LN40@xmlNanoFTP:

; 1684 : 	    while ((*cur >= '0') && (*cur <= '9'))

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 48					; 00000030H
	jl	SHORT $LN41@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 57					; 00000039H
	jg	SHORT $LN41@xmlNanoFTP

; 1685 : 		minute = (minute * 10) + (*cur++ - '0');

	imul	edx, DWORD PTR _minute$[ebp], 10
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	lea	edx, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _minute$[ebp], edx
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN40@xmlNanoFTP
$LN41@xmlNanoFTP:

; 1686 : 	} else {

	jmp	SHORT $LN44@xmlNanoFTP
$LN42@xmlNanoFTP:

; 1687 : 	    while ((*cur >= '0') && (*cur <= '9'))

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 48					; 00000030H
	jl	SHORT $LN44@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 57					; 00000039H
	jg	SHORT $LN44@xmlNanoFTP

; 1688 : 		year = (year * 10) + (*cur++ - '0');

	imul	edx, DWORD PTR _year$[ebp], 10
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	lea	edx, DWORD PTR [edx+ecx-48]
	mov	DWORD PTR _year$[ebp], edx
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN42@xmlNanoFTP
$LN44@xmlNanoFTP:

; 1689 : 	}
; 1690 : 	while (*cur == ' ') cur++;

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 32					; 00000020H
	jne	SHORT $LN45@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	add	eax, 1
	mov	DWORD PTR _cur$[ebp], eax
	jmp	SHORT $LN44@xmlNanoFTP
$LN45@xmlNanoFTP:

; 1691 : 	if (*cur == 0) return(0);

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN78@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN78@xmlNanoFTP:

; 1692 : 	i = 0;

	mov	DWORD PTR _i$[ebp], 0
$LN46@xmlNanoFTP:

; 1693 : 	while ((*cur != '\n')  && (*cur != '\r')) {

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN47@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN47@xmlNanoFTP

; 1694 : 	    if (i < 150)

	cmp	DWORD PTR _i$[ebp], 150			; 00000096H
	jge	SHORT $LN79@xmlNanoFTP

; 1695 : 		filename[i++] = *cur;

	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _cur$[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR _filename$[ebp+ecx], al
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
$LN79@xmlNanoFTP:

; 1696 : 	    cur++;

	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx

; 1697 : 	    if (*cur == 0) return(0);

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN80@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN80@xmlNanoFTP:

; 1698 : 	}

	jmp	SHORT $LN46@xmlNanoFTP
$LN47@xmlNanoFTP:

; 1699 : 	filename[i] = 0;

	mov	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _filename$[ebp+edx], 0

; 1700 : 	if ((*cur != '\n') && (*cur != '\r'))

	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN48@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN48@xmlNanoFTP

; 1701 : 	    return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN48@xmlNanoFTP:

; 1702 : 	while ((*cur == '\n')  || (*cur == '\r'))

	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN82@xmlNanoFTP
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	jne	SHORT $LN51@xmlNanoFTP
$LN82@xmlNanoFTP:

; 1703 : 	    cur++;

	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx
	jmp	SHORT $LN48@xmlNanoFTP
$LN51@xmlNanoFTP:

; 1704 :     }
; 1705 :     if (callback != NULL) {

	cmp	DWORD PTR _callback$[ebp], 0
	je	SHORT $LN83@xmlNanoFTP

; 1706 :         callback(userData, filename, attrib, owner, group, size, links,

	mov	esi, esp
	mov	eax, DWORD PTR _minute$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hour$[ebp]
	push	ecx
	mov	edx, DWORD PTR _day$[ebp]
	push	edx
	lea	eax, DWORD PTR _month$[ebp]
	push	eax
	mov	ecx, DWORD PTR _year$[ebp]
	push	ecx
	mov	edx, DWORD PTR _links$[ebp]
	push	edx
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _group$[ebp]
	push	ecx
	lea	edx, DWORD PTR _owner$[ebp]
	push	edx
	lea	eax, DWORD PTR _attrib$[ebp]
	push	eax
	lea	ecx, DWORD PTR _filename$[ebp]
	push	ecx
	mov	edx, DWORD PTR _userData$[ebp]
	push	edx
	call	DWORD PTR _callback$[ebp]
	add	esp, 48					; 00000030H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN83@xmlNanoFTP:

; 1707 : 		 year, month, day, hour, minute);
; 1708 :     }
; 1709 :     return(cur - list);

	mov	eax, DWORD PTR _cur$[ebp]
	sub	eax, DWORD PTR _list$[ebp]
$LN1@xmlNanoFTP:

; 1710 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN91@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN91@xmlNanoFTP:
	DD	5
	DD	$LN90@xmlNanoFTP
$LN90@xmlNanoFTP:
	DD	-160					; ffffff60H
	DD	151					; 00000097H
	DD	$LN85@xmlNanoFTP
	DD	-180					; ffffff4cH
	DD	11					; 0000000bH
	DD	$LN86@xmlNanoFTP
	DD	-200					; ffffff38H
	DD	11					; 0000000bH
	DD	$LN87@xmlNanoFTP
	DD	-220					; ffffff24H
	DD	11					; 0000000bH
	DD	$LN88@xmlNanoFTP
	DD	-232					; ffffff18H
	DD	4
	DD	$LN89@xmlNanoFTP
$LN89@xmlNanoFTP:
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN88@xmlNanoFTP:
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	0
$LN87@xmlNanoFTP:
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN86@xmlNanoFTP:
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	98					; 00000062H
	DB	0
$LN85@xmlNanoFTP:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_xmlNanoFTPParseList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPSendPasswd
_TEXT	SEGMENT
tv78 = -236						; size = 4
tv136 = -229						; size = 1
tv133 = -228						; size = 4
tv130 = -224						; size = 4
_res$ = -220						; size = 4
_len$ = -216						; size = 4
_buf$ = -208						; size = 200
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPSendPasswd PROC				; COMDAT

; 785  : xmlNanoFTPSendPasswd(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 786  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 787  :     char buf[200];
; 788  :     int len;
; 789  :     int res;
; 790  : 
; 791  :     if (ctxt->passwd == NULL)

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	jne	SHORT $LN2@xmlNanoFTP

; 792  : 	snprintf(buf, sizeof(buf), "PASS anonymous@\r\n");

	push	OFFSET ??_C@_0BC@JNJBALOJ@PASS?5anonymous?$EA?$AN?6@
	push	200					; 000000c8H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_snprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN3@xmlNanoFTP
$LN2@xmlNanoFTP:

; 793  :     else
; 794  : 	snprintf(buf, sizeof(buf), "PASS %s\r\n", ctxt->passwd);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	push	OFFSET ??_C@_09CACMNAGD@PASS?5?$CFs?$AN?6@
	push	200					; 000000c8H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_snprintf
	add	esp, 16					; 00000010H
$LN3@xmlNanoFTP:

; 795  :     buf[sizeof(buf) - 1] = 0;

	mov	eax, 1
	imul	ecx, eax, 199
	mov	BYTE PTR _buf$[ebp+ecx], 0

; 796  :     len = strlen(buf);

	lea	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv130[ebp], edx
	mov	eax, DWORD PTR tv130[ebp]
	add	eax, 1
	mov	DWORD PTR tv133[ebp], eax
$LL6@xmlNanoFTP:
	mov	ecx, DWORD PTR tv130[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv136[ebp], dl
	add	DWORD PTR tv130[ebp], 1
	cmp	BYTE PTR tv136[ebp], 0
	jne	SHORT $LL6@xmlNanoFTP
	mov	eax, DWORD PTR tv130[ebp]
	sub	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _len$[ebp], ecx

; 797  : #ifdef DEBUG_FTP
; 798  :     xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 799  : #endif
; 800  :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 801  :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN4@xmlNanoFTP

; 802  : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 803  : 	return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 804  :     }
; 805  :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 806  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@xmlNanoFTP:
	DD	1
	DD	$LN8@xmlNanoFTP
$LN8@xmlNanoFTP:
	DD	-208					; ffffff30H
	DD	200					; 000000c8H
	DD	$LN7@xmlNanoFTP
$LN7@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPSendPasswd ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPSendUser
_TEXT	SEGMENT
tv78 = -236						; size = 4
tv136 = -229						; size = 1
tv133 = -228						; size = 4
tv130 = -224						; size = 4
_res$ = -220						; size = 4
_len$ = -216						; size = 4
_buf$ = -208						; size = 200
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPSendUser PROC				; COMDAT

; 757  : xmlNanoFTPSendUser(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 758  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 759  :     char buf[200];
; 760  :     int len;
; 761  :     int res;
; 762  : 
; 763  :     if (ctxt->user == NULL)

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN2@xmlNanoFTP

; 764  : 	snprintf(buf, sizeof(buf), "USER anonymous\r\n");

	push	OFFSET ??_C@_0BB@PKBEHKHF@USER?5anonymous?$AN?6@
	push	200					; 000000c8H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_snprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN3@xmlNanoFTP
$LN2@xmlNanoFTP:

; 765  :     else
; 766  : 	snprintf(buf, sizeof(buf), "USER %s\r\n", ctxt->user);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	OFFSET ??_C@_09FIJAECMI@USER?5?$CFs?$AN?6@
	push	200					; 000000c8H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_snprintf
	add	esp, 16					; 00000010H
$LN3@xmlNanoFTP:

; 767  :     buf[sizeof(buf) - 1] = 0;

	mov	eax, 1
	imul	ecx, eax, 199
	mov	BYTE PTR _buf$[ebp+ecx], 0

; 768  :     len = strlen(buf);

	lea	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv130[ebp], edx
	mov	eax, DWORD PTR tv130[ebp]
	add	eax, 1
	mov	DWORD PTR tv133[ebp], eax
$LL6@xmlNanoFTP:
	mov	ecx, DWORD PTR tv130[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv136[ebp], dl
	add	DWORD PTR tv130[ebp], 1
	cmp	BYTE PTR tv136[ebp], 0
	jne	SHORT $LL6@xmlNanoFTP
	mov	eax, DWORD PTR tv130[ebp]
	sub	eax, DWORD PTR tv133[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	mov	DWORD PTR _len$[ebp], ecx

; 769  : #ifdef DEBUG_FTP
; 770  :     xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 771  : #endif
; 772  :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 773  :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN4@xmlNanoFTP

; 774  : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 775  : 	return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 776  :     }
; 777  :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 778  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@xmlNanoFTP:
	DD	1
	DD	$LN8@xmlNanoFTP
$LN8@xmlNanoFTP:
	DD	-208					; ffffff30H
	DD	200					; 000000c8H
	DD	$LN7@xmlNanoFTP
$LN7@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPSendUser ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPReadResponse
_TEXT	SEGMENT
_cur$ = -24						; size = 4
_res$ = -20						; size = 4
_len$ = -16						; size = 4
_end$ = -12						; size = 4
_ptr$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPReadResponse PROC				; COMDAT

; 640  : xmlNanoFTPReadResponse(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 641  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 642  :     char *ptr, *end;
; 643  :     int len;
; 644  :     int res = -1, cur = -1;

	mov	DWORD PTR _res$[ebp], -1
	mov	DWORD PTR _cur$[ebp], -1

; 645  : 
; 646  :     if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN9@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	jne	SHORT $get_more$20
$LN9@xmlNanoFTP:
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$get_more$20:

; 647  : 
; 648  : get_more:
; 649  :     /*
; 650  :      * Assumes everything up to controlBuf[controlBufIndex] has been read
; 651  :      * and analyzed.
; 652  :      */
; 653  :     len = xmlNanoFTPGetMore(ctx);

	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlNanoFTPGetMore
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax

; 654  :     if (len < 0) {

	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN10@xmlNanoFTP

; 655  :         return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN10@xmlNanoFTP:

; 656  :     }
; 657  :     if ((ctxt->controlBufUsed == 0) && (len == 0)) {

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax+1092], 0
	jne	SHORT $LN11@xmlNanoFTP
	cmp	DWORD PTR _len$[ebp], 0
	jne	SHORT $LN11@xmlNanoFTP

; 658  :         return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN11@xmlNanoFTP:

; 659  :     }
; 660  :     ptr = &ctxt->controlBuf[ctxt->controlBufIndex];

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+1088]
	mov	eax, DWORD PTR _ctxt$[ebp]
	lea	ecx, DWORD PTR [eax+edx+60]
	mov	DWORD PTR _ptr$[ebp], ecx

; 661  :     end = &ctxt->controlBuf[ctxt->controlBufUsed];

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+1092]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	lea	edx, DWORD PTR [ecx+eax+60]
	mov	DWORD PTR _end$[ebp], edx
$LN2@xmlNanoFTP:

; 662  : 
; 663  : #ifdef DEBUG_FTP
; 664  :     xmlGenericError(xmlGenericErrorContext,
; 665  : 	    "\n<<<\n%s\n--\n", ptr);
; 666  : #endif
; 667  :     while (ptr < end) {

	mov	eax, DWORD PTR _ptr$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jae	$LN3@xmlNanoFTP

; 668  :         cur = xmlNanoFTPParseResponse(ptr, end - ptr);

	mov	ecx, DWORD PTR _end$[ebp]
	sub	ecx, DWORD PTR _ptr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ptr$[ebp]
	push	edx
	call	_xmlNanoFTPParseResponse
	add	esp, 8
	mov	DWORD PTR _cur$[ebp], eax

; 669  : 	if (cur > 0) {

	cmp	DWORD PTR _cur$[ebp], 0
	jle	SHORT $LN6@xmlNanoFTP

; 670  : 	    /*
; 671  : 	     * Successfully scanned the control code, scratch
; 672  : 	     * till the end of the line, but keep the index to be
; 673  : 	     * able to analyze the result if needed.
; 674  : 	     */
; 675  : 	    res = cur;

	mov	eax, DWORD PTR _cur$[ebp]
	mov	DWORD PTR _res$[ebp], eax

; 676  : 	    ptr += 3;

	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 3
	mov	DWORD PTR _ptr$[ebp], ecx

; 677  : 	    ctxt->controlBufAnswer = ptr - ctxt->controlBuf;

	mov	edx, DWORD PTR _ctxt$[ebp]
	add	edx, 60					; 0000003cH
	mov	eax, DWORD PTR _ptr$[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+1096], eax
$LN4@xmlNanoFTP:

; 678  : 	    while ((ptr < end) && (*ptr != '\n')) ptr++;

	mov	edx, DWORD PTR _ptr$[ebp]
	cmp	edx, DWORD PTR _end$[ebp]
	jae	SHORT $LN5@xmlNanoFTP
	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN5@xmlNanoFTP
	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx
	jmp	SHORT $LN4@xmlNanoFTP
$LN5@xmlNanoFTP:

; 679  : 	    if (*ptr == '\n') ptr++;

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN13@xmlNanoFTP
	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx
$LN13@xmlNanoFTP:

; 680  : 	    if (*ptr == '\r') ptr++;

	mov	eax, DWORD PTR _ptr$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	jne	SHORT $LN14@xmlNanoFTP
	mov	edx, DWORD PTR _ptr$[ebp]
	add	edx, 1
	mov	DWORD PTR _ptr$[ebp], edx
$LN14@xmlNanoFTP:

; 681  : 	    break;

	jmp	SHORT $LN3@xmlNanoFTP
$LN6@xmlNanoFTP:

; 682  : 	}
; 683  : 	while ((ptr < end) && (*ptr != '\n')) ptr++;

	mov	eax, DWORD PTR _ptr$[ebp]
	cmp	eax, DWORD PTR _end$[ebp]
	jae	SHORT $LN7@xmlNanoFTP
	mov	ecx, DWORD PTR _ptr$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN7@xmlNanoFTP
	mov	eax, DWORD PTR _ptr$[ebp]
	add	eax, 1
	mov	DWORD PTR _ptr$[ebp], eax
	jmp	SHORT $LN6@xmlNanoFTP
$LN7@xmlNanoFTP:

; 684  : 	if (ptr >= end) {

	mov	ecx, DWORD PTR _ptr$[ebp]
	cmp	ecx, DWORD PTR _end$[ebp]
	jb	SHORT $LN15@xmlNanoFTP

; 685  : 	    ctxt->controlBufIndex = ctxt->controlBufUsed;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+1092]
	mov	DWORD PTR [edx+1088], ecx

; 686  : 	    goto get_more;

	jmp	$get_more$20
$LN15@xmlNanoFTP:

; 687  : 	}
; 688  : 	if (*ptr != '\r') ptr++;

	mov	edx, DWORD PTR _ptr$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN16@xmlNanoFTP
	mov	ecx, DWORD PTR _ptr$[ebp]
	add	ecx, 1
	mov	DWORD PTR _ptr$[ebp], ecx
$LN16@xmlNanoFTP:

; 689  :     }

	jmp	$LN2@xmlNanoFTP
$LN3@xmlNanoFTP:

; 690  : 
; 691  :     if (res < 0) goto get_more;

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN17@xmlNanoFTP
	jmp	$get_more$20
$LN17@xmlNanoFTP:

; 692  :     ctxt->controlBufIndex = ptr - ctxt->controlBuf;

	mov	edx, DWORD PTR _ctxt$[ebp]
	add	edx, 60					; 0000003cH
	mov	eax, DWORD PTR _ptr$[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+1088], eax

; 693  : #ifdef DEBUG_FTP
; 694  :     ptr = &ctxt->controlBuf[ctxt->controlBufIndex];
; 695  :     xmlGenericError(xmlGenericErrorContext, "\n---\n%s\n--\n", ptr);
; 696  : #endif
; 697  : 
; 698  : #ifdef DEBUG_FTP
; 699  :     xmlGenericError(xmlGenericErrorContext, "Got %d\n", res);
; 700  : #endif
; 701  :     return(res / 100);

	mov	eax, DWORD PTR _res$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
$LN1@xmlNanoFTP:

; 702  : }

	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPReadResponse ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPGetMore
_TEXT	SEGMENT
_size$ = -12						; size = 4
_len$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPGetMore PROC					; COMDAT

; 560  : xmlNanoFTPGetMore(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 561  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 562  :     int len;
; 563  :     int size;
; 564  : 
; 565  :     if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN3@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	jne	SHORT $LN2@xmlNanoFTP
$LN3@xmlNanoFTP:
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 566  : 
; 567  :     if ((ctxt->controlBufIndex < 0) || (ctxt->controlBufIndex > FTP_BUF_SIZE)) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+1088], 0
	jl	SHORT $LN5@xmlNanoFTP
	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax+1088], 1024		; 00000400H
	jle	SHORT $LN4@xmlNanoFTP
$LN5@xmlNanoFTP:

; 568  : #ifdef DEBUG_FTP
; 569  :         xmlGenericError(xmlGenericErrorContext,
; 570  : 		"xmlNanoFTPGetMore : controlBufIndex = %d\n",
; 571  : 		ctxt->controlBufIndex);
; 572  : #endif
; 573  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 574  :     }
; 575  : 
; 576  :     if ((ctxt->controlBufUsed < 0) || (ctxt->controlBufUsed > FTP_BUF_SIZE)) {

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+1092], 0
	jl	SHORT $LN7@xmlNanoFTP
	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+1092], 1024		; 00000400H
	jle	SHORT $LN6@xmlNanoFTP
$LN7@xmlNanoFTP:

; 577  : #ifdef DEBUG_FTP
; 578  :         xmlGenericError(xmlGenericErrorContext,
; 579  : 		"xmlNanoFTPGetMore : controlBufUsed = %d\n",
; 580  : 		ctxt->controlBufUsed);
; 581  : #endif
; 582  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 583  :     }
; 584  :     if (ctxt->controlBufIndex > ctxt->controlBufUsed) {

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+1088]
	cmp	edx, DWORD PTR [ecx+1092]
	jle	SHORT $LN8@xmlNanoFTP

; 585  : #ifdef DEBUG_FTP
; 586  :         xmlGenericError(xmlGenericErrorContext,
; 587  : 		"xmlNanoFTPGetMore : controlBufIndex > controlBufUsed %d > %d\n",
; 588  : 	       ctxt->controlBufIndex, ctxt->controlBufUsed);
; 589  : #endif
; 590  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN8@xmlNanoFTP:

; 591  :     }
; 592  : 
; 593  :     /*
; 594  :      * First pack the control buffer
; 595  :      */
; 596  :     if (ctxt->controlBufIndex > 0) {

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax+1088], 0
	jle	SHORT $LN9@xmlNanoFTP

; 597  : 	memmove(&ctxt->controlBuf[0], &ctxt->controlBuf[ctxt->controlBufIndex],

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [ecx+1092]
	sub	eax, DWORD PTR [edx+1088]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+1088]
	mov	eax, DWORD PTR _ctxt$[ebp]
	lea	ecx, DWORD PTR [eax+edx+60]
	push	ecx
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _ctxt$[ebp]
	lea	edx, DWORD PTR [ecx+eax+60]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 598  : 		ctxt->controlBufUsed - ctxt->controlBufIndex);
; 599  : 	ctxt->controlBufUsed -= ctxt->controlBufIndex;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [eax+1092]
	sub	edx, DWORD PTR [ecx+1088]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+1092], edx

; 600  : 	ctxt->controlBufIndex = 0;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+1088], 0
$LN9@xmlNanoFTP:

; 601  :     }
; 602  :     size = FTP_BUF_SIZE - ctxt->controlBufUsed;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, 1024				; 00000400H
	sub	eax, DWORD PTR [edx+1092]
	mov	DWORD PTR _size$[ebp], eax

; 603  :     if (size == 0) {

	jne	SHORT $LN10@xmlNanoFTP

; 604  : #ifdef DEBUG_FTP
; 605  :         xmlGenericError(xmlGenericErrorContext,
; 606  : 		"xmlNanoFTPGetMore : buffer full %d \n", ctxt->controlBufUsed);
; 607  : #endif
; 608  : 	return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN10@xmlNanoFTP:

; 609  :     }
; 610  : 
; 611  :     /*
; 612  :      * Read the amount left on the control connection
; 613  :      */
; 614  :     if ((len = recv(ctxt->controlFd, &ctxt->controlBuf[ctxt->controlBufIndex],
; 615  : 		    size, 0)) < 0) {

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+1088]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	lea	edx, DWORD PTR [ecx+eax+60]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__recv@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN11@xmlNanoFTP

; 616  : 	__xmlIOErr(XML_FROM_FTP, 0, "recv failed");

	push	OFFSET ??_C@_0M@KMFGCEDE@recv?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 617  : 	closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 618  :         ctxt->controlFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 619  :         return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN11@xmlNanoFTP:

; 620  :     }
; 621  : #ifdef DEBUG_FTP
; 622  :     xmlGenericError(xmlGenericErrorContext,
; 623  : 	    "xmlNanoFTPGetMore : read %d [%d - %d]\n", len,
; 624  : 	   ctxt->controlBufUsed, ctxt->controlBufUsed + len);
; 625  : #endif
; 626  :     ctxt->controlBufUsed += len;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+1092]
	add	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+1092], ecx

; 627  :     ctxt->controlBuf[ctxt->controlBufUsed] = 0;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+1092]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	BYTE PTR [edx+ecx+60], 0

; 628  : 
; 629  :     return(len);

	mov	eax, DWORD PTR _len$[ebp]
$LN1@xmlNanoFTP:

; 630  : }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPGetMore ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPParseResponse
_TEXT	SEGMENT
_val$ = -4						; size = 4
_buf$ = 8						; size = 4
_len$ = 12						; size = 4
_xmlNanoFTPParseResponse PROC				; COMDAT

; 528  : xmlNanoFTPParseResponse(char *buf, int len) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 529  :     int val = 0;

	mov	DWORD PTR _val$[ebp], 0

; 530  : 
; 531  :     if (len < 3) return(-1);

	cmp	DWORD PTR _len$[ebp], 3
	jge	SHORT $LN2@xmlNanoFTP
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 532  :     if ((*buf >= '0') && (*buf <= '9'))

	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 48					; 00000030H
	jl	SHORT $LN3@xmlNanoFTP
	mov	edx, DWORD PTR _buf$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN3@xmlNanoFTP

; 533  :         val = val * 10 + (*buf - '0');

	imul	ecx, DWORD PTR _val$[ebp], 10
	mov	edx, DWORD PTR _buf$[ebp]
	movsx	eax, BYTE PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	DWORD PTR _val$[ebp], ecx
	jmp	SHORT $LN4@xmlNanoFTP
$LN3@xmlNanoFTP:

; 534  :     else
; 535  :         return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 536  :     buf++;

	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx

; 537  :     if ((*buf >= '0') && (*buf <= '9'))

	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 48					; 00000030H
	jl	SHORT $LN5@xmlNanoFTP
	mov	edx, DWORD PTR _buf$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN5@xmlNanoFTP

; 538  :         val = val * 10 + (*buf - '0');

	imul	ecx, DWORD PTR _val$[ebp], 10
	mov	edx, DWORD PTR _buf$[ebp]
	movsx	eax, BYTE PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	DWORD PTR _val$[ebp], ecx
	jmp	SHORT $LN6@xmlNanoFTP
$LN5@xmlNanoFTP:

; 539  :     else
; 540  :         return(0);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 541  :     buf++;

	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx

; 542  :     if ((*buf >= '0') && (*buf <= '9'))

	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 48					; 00000030H
	jl	SHORT $LN7@xmlNanoFTP
	mov	edx, DWORD PTR _buf$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 57					; 00000039H
	jg	SHORT $LN7@xmlNanoFTP

; 543  :         val = val * 10 + (*buf - '0');

	imul	ecx, DWORD PTR _val$[ebp], 10
	mov	edx, DWORD PTR _buf$[ebp]
	movsx	eax, BYTE PTR [edx]
	lea	ecx, DWORD PTR [ecx+eax-48]
	mov	DWORD PTR _val$[ebp], ecx
	jmp	SHORT $LN8@xmlNanoFTP
$LN7@xmlNanoFTP:

; 544  :     else
; 545  :         return(0);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN8@xmlNanoFTP:

; 546  :     buf++;

	mov	edx, DWORD PTR _buf$[ebp]
	add	edx, 1
	mov	DWORD PTR _buf$[ebp], edx

; 547  :     if (*buf == '-')

	mov	eax, DWORD PTR _buf$[ebp]
	movsx	ecx, BYTE PTR [eax]
	cmp	ecx, 45					; 0000002dH
	jne	SHORT $LN9@xmlNanoFTP

; 548  :         return(-val);

	mov	eax, DWORD PTR _val$[ebp]
	neg	eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN9@xmlNanoFTP:

; 549  :     return(val);

	mov	eax, DWORD PTR _val$[ebp]
$LN1@xmlNanoFTP:

; 550  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPParseResponse ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPScanURL
_TEXT	SEGMENT
_cptr$1 = -12						; size = 4
_uri$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_URL$ = 12						; size = 4
_xmlNanoFTPScanURL PROC					; COMDAT

; 293  : xmlNanoFTPScanURL(void *ctx, const char *URL) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 294  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 295  :     xmlURIPtr uri;
; 296  : 
; 297  :     /*
; 298  :      * Clear any existing data from the context
; 299  :      */
; 300  :     if (ctxt->protocol != NULL) {

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN2@xmlNanoFTP

; 301  :         xmlFree(ctxt->protocol);

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 302  : 	ctxt->protocol = NULL;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx], 0
$LN2@xmlNanoFTP:

; 303  :     }
; 304  :     if (ctxt->hostname != NULL) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+4], 0
	je	SHORT $LN3@xmlNanoFTP

; 305  :         xmlFree(ctxt->hostname);

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 306  : 	ctxt->hostname = NULL;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+4], 0
$LN3@xmlNanoFTP:

; 307  :     }
; 308  :     if (ctxt->path != NULL) {

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN4@xmlNanoFTP

; 309  :         xmlFree(ctxt->path);

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 310  : 	ctxt->path = NULL;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN4@xmlNanoFTP:

; 311  :     }
; 312  :     if (URL == NULL) return;

	cmp	DWORD PTR _URL$[ebp], 0
	jne	SHORT $LN5@xmlNanoFTP
	jmp	$LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 313  : 
; 314  :     uri = xmlParseURIRaw(URL, 1);

	push	1
	mov	ecx, DWORD PTR _URL$[ebp]
	push	ecx
	call	_xmlParseURIRaw
	add	esp, 8
	mov	DWORD PTR _uri$[ebp], eax

; 315  :     if (uri == NULL)

	cmp	DWORD PTR _uri$[ebp], 0
	jne	SHORT $LN6@xmlNanoFTP

; 316  : 	return;

	jmp	$LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 317  : 
; 318  :     if ((uri->scheme == NULL) || (uri->server == NULL)) {

	mov	edx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN8@xmlNanoFTP
	mov	eax, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN7@xmlNanoFTP
$LN8@xmlNanoFTP:

; 319  : 	xmlFreeURI(uri);

	mov	ecx, DWORD PTR _uri$[ebp]
	push	ecx
	call	_xmlFreeURI
	add	esp, 4

; 320  : 	return;

	jmp	$LN1@xmlNanoFTP
$LN7@xmlNanoFTP:

; 321  :     }
; 322  : 
; 323  :     ctxt->protocol = xmlMemStrdup(uri->scheme);

	mov	esi, esp
	mov	edx, DWORD PTR _uri$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx], eax

; 324  :     ctxt->hostname = xmlMemStrdup(uri->server);

	mov	esi, esp
	mov	edx, DWORD PTR _uri$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 325  :     if (uri->path != NULL)

	mov	edx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [edx+24], 0
	je	SHORT $LN9@xmlNanoFTP

; 326  : 	ctxt->path = xmlMemStrdup(uri->path);

	mov	esi, esp
	mov	eax, DWORD PTR _uri$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+12], eax
	jmp	SHORT $LN10@xmlNanoFTP
$LN9@xmlNanoFTP:

; 327  :     else
; 328  : 	ctxt->path = xmlMemStrdup("/");

	mov	esi, esp
	push	OFFSET ??_C@_01KMDKNFGN@?1@
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN10@xmlNanoFTP:

; 329  :     if (uri->port != 0)

	mov	edx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN11@xmlNanoFTP

; 330  : 	ctxt->port = uri->port;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR _uri$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+8], edx
$LN11@xmlNanoFTP:

; 331  : 
; 332  :     if (uri->user != NULL) {

	mov	eax, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN12@xmlNanoFTP

; 333  : 	char *cptr;
; 334  : 	if ((cptr=strchr(uri->user, ':')) == NULL)

	push	58					; 0000003aH
	mov	ecx, DWORD PTR _uri$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	call	_strchr
	add	esp, 8
	mov	DWORD PTR _cptr$1[ebp], eax
	cmp	DWORD PTR _cptr$1[ebp], 0
	jne	SHORT $LN13@xmlNanoFTP

; 335  : 	    ctxt->user = xmlMemStrdup(uri->user);

	mov	esi, esp
	mov	eax, DWORD PTR _uri$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+16], eax
	jmp	SHORT $LN12@xmlNanoFTP
$LN13@xmlNanoFTP:

; 336  : 	else {
; 337  : 	    ctxt->user = (char *)xmlStrndup((xmlChar *)uri->user,

	mov	eax, DWORD PTR _uri$[ebp]
	mov	ecx, DWORD PTR _cptr$1[ebp]
	sub	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _uri$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_xmlStrndup
	add	esp, 8
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+16], eax

; 338  : 			    (cptr - uri->user));
; 339  : 	    ctxt->passwd = xmlMemStrdup(cptr+1);

	mov	edx, DWORD PTR _cptr$1[ebp]
	add	edx, 1
	mov	esi, esp
	push	edx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+20], eax
$LN12@xmlNanoFTP:

; 340  : 	}
; 341  :     }
; 342  : 
; 343  :     xmlFreeURI(uri);

	mov	edx, DWORD PTR _uri$[ebp]
	push	edx
	call	_xmlFreeURI
	add	esp, 4
$LN1@xmlNanoFTP:

; 344  : 
; 345  : }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPScanURL ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlFTPErrMemory
_TEXT	SEGMENT
_extra$ = 8						; size = 4
_xmlFTPErrMemory PROC					; COMDAT

; 167  : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 168  :     __xmlSimpleError(XML_FROM_FTP, XML_ERR_NO_MEMORY, NULL, NULL, extra);

	mov	eax, DWORD PTR _extra$[ebp]
	push	eax
	push	0
	push	0
	push	2
	push	9
	call	___xmlSimpleError
	add	esp, 20					; 00000014H

; 169  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlFTPErrMemory ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPRead
_TEXT	SEGMENT
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_dest$ = 12						; size = 4
_len$ = 16						; size = 4
_xmlNanoFTPRead PROC					; COMDAT

; 1969 : xmlNanoFTPRead(void *ctx, void *dest, int len) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1970 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1971 : 
; 1972 :     if (ctx == NULL) return(-1);

	cmp	DWORD PTR _ctx$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP
	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 1973 :     if (ctxt->dataFd == INVALID_SOCKET) return(0);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+48], -1
	jne	SHORT $LN3@xmlNanoFTP
	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN3@xmlNanoFTP:

; 1974 :     if (dest == NULL) return(-1);

	cmp	DWORD PTR _dest$[ebp], 0
	jne	SHORT $LN4@xmlNanoFTP
	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1975 :     if (len <= 0) return(0);

	cmp	DWORD PTR _len$[ebp], 0
	jg	SHORT $LN5@xmlNanoFTP
	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 1976 : 
; 1977 :     len = recv(ctxt->dataFd, dest, len, 0);

	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	mov	eax, DWORD PTR _dest$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__recv@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax

; 1978 :     if (len <= 0) {

	cmp	DWORD PTR _len$[ebp], 0
	jg	SHORT $LN6@xmlNanoFTP

; 1979 : 	if (len < 0)

	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN7@xmlNanoFTP

; 1980 : 	    __xmlIOErr(XML_FROM_FTP, 0, "recv failed");

	push	OFFSET ??_C@_0M@KMFGCEDE@recv?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH
$LN7@xmlNanoFTP:

; 1981 : 	xmlNanoFTPCloseConnection(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPCloseConnection
	add	esp, 4
$LN6@xmlNanoFTP:

; 1982 :     }
; 1983 : #ifdef DEBUG_FTP
; 1984 :     xmlGenericError(xmlGenericErrorContext, "Recvd %d bytes\n", len);
; 1985 : #endif
; 1986 :     return(len);

	mov	eax, DWORD PTR _len$[ebp]
$LN1@xmlNanoFTP:

; 1987 : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPRead ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPGet
_TEXT	SEGMENT
___i$1 = -4404						; size = 4
_tv$ = -4396						; size = 8
_rfd$ = -4380						; size = 260
_res$ = -4116						; size = 4
_len$ = -4112						; size = 4
_buf$ = -4104						; size = 4096
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_callback$ = 12						; size = 4
_userData$ = 16						; size = 4
_filename$ = 20						; size = 4
_xmlNanoFTPGet PROC					; COMDAT

; 1902 : 	      const char *filename) {

	push	ebp
	mov	ebp, esp
	mov	eax, 4404				; 00001134H
	call	__chkstk
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4404]
	mov	ecx, 1101				; 0000044dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1903 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1904 :     char buf[4096];
; 1905 :     int len = 0, res;

	mov	DWORD PTR _len$[ebp], 0

; 1906 :     fd_set rfd;
; 1907 :     struct timeval tv;
; 1908 : 
; 1909 :     if (ctxt == NULL) return(-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN11@xmlNanoFTP
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN11@xmlNanoFTP:

; 1910 :     if ((filename == NULL) && (ctxt->path == NULL))

	cmp	DWORD PTR _filename$[ebp], 0
	jne	SHORT $LN12@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN12@xmlNanoFTP

; 1911 : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN12@xmlNanoFTP:

; 1912 :     if (callback == NULL)

	cmp	DWORD PTR _callback$[ebp], 0
	jne	SHORT $LN13@xmlNanoFTP

; 1913 : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN13@xmlNanoFTP:

; 1914 :     if (xmlNanoFTPGetSocket(ctxt, filename) == INVALID_SOCKET)

	mov	edx, DWORD PTR _filename$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPGetSocket
	add	esp, 8
	cmp	eax, -1
	jne	SHORT $LN4@xmlNanoFTP

; 1915 : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1916 : 
; 1917 :     do {
; 1918 : 	tv.tv_sec = 1;

	mov	DWORD PTR _tv$[ebp], 1

; 1919 : 	tv.tv_usec = 0;

	mov	DWORD PTR _tv$[ebp+4], 0

; 1920 : 	FD_ZERO(&rfd);

	mov	DWORD PTR _rfd$[ebp], 0
$LN7@xmlNanoFTP:

; 1921 : 	FD_SET(ctxt->dataFd, &rfd);

	mov	DWORD PTR ___i$1[ebp], 0
	jmp	SHORT $LN10@xmlNanoFTP
$LN8@xmlNanoFTP:
	mov	ecx, DWORD PTR ___i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR ___i$1[ebp], ecx
$LN10@xmlNanoFTP:
	mov	edx, DWORD PTR ___i$1[ebp]
	cmp	edx, DWORD PTR _rfd$[ebp]
	jae	SHORT $LN9@xmlNanoFTP
	mov	eax, DWORD PTR ___i$1[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _rfd$[ebp+eax*4+4]
	cmp	edx, DWORD PTR [ecx+48]
	jne	SHORT $LN15@xmlNanoFTP
	jmp	SHORT $LN9@xmlNanoFTP
$LN15@xmlNanoFTP:
	jmp	SHORT $LN8@xmlNanoFTP
$LN9@xmlNanoFTP:
	mov	eax, DWORD PTR ___i$1[ebp]
	cmp	eax, DWORD PTR _rfd$[ebp]
	jne	SHORT $LN5@xmlNanoFTP
	cmp	DWORD PTR _rfd$[ebp], 64		; 00000040H
	jae	SHORT $LN5@xmlNanoFTP
	mov	ecx, DWORD PTR ___i$1[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR _rfd$[ebp+ecx*4+4], eax
	mov	ecx, DWORD PTR _rfd$[ebp]
	add	ecx, 1
	mov	DWORD PTR _rfd$[ebp], ecx
$LN5@xmlNanoFTP:
	xor	edx, edx
	jne	SHORT $LN7@xmlNanoFTP

; 1922 : 	res = select(ctxt->dataFd + 1, &rfd, NULL, NULL, &tv);

	mov	esi, esp
	lea	eax, DWORD PTR _tv$[ebp]
	push	eax
	push	0
	push	0
	lea	ecx, DWORD PTR _rfd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	add	eax, 1
	push	eax
	call	DWORD PTR __imp__select@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1923 : 	if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN18@xmlNanoFTP

; 1924 : #ifdef DEBUG_FTP
; 1925 : 	    perror("select");
; 1926 : #endif
; 1927 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+48], -1

; 1928 : 	    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN18@xmlNanoFTP:

; 1929 : 	}
; 1930 : 	if (res == 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jne	$LN19@xmlNanoFTP

; 1931 : 	    res = xmlNanoFTPCheckResponse(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPCheckResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1932 : 	    if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN20@xmlNanoFTP

; 1933 : 		closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1934 : 		ctxt->dataFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1935 : 		return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN20@xmlNanoFTP:

; 1936 : 	    }
; 1937 : 	    if (res == 2) {

	cmp	DWORD PTR _res$[ebp], 2
	jne	SHORT $LN21@xmlNanoFTP

; 1938 : 		closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1939 : 		return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN21@xmlNanoFTP:

; 1940 : 	    }
; 1941 : 
; 1942 : 	    continue;

	jmp	$LN2@xmlNanoFTP
$LN19@xmlNanoFTP:

; 1943 : 	}
; 1944 : 	if ((len = recv(ctxt->dataFd, buf, sizeof(buf), 0)) < 0) {

	mov	esi, esp
	push	0
	push	4096					; 00001000H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__recv@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN22@xmlNanoFTP

; 1945 : 	    __xmlIOErr(XML_FROM_FTP, 0, "recv failed");

	push	OFFSET ??_C@_0M@KMFGCEDE@recv?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1946 : 	    callback(userData, buf, len);

	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _userData$[ebp]
	push	edx
	call	DWORD PTR _callback$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1947 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1948 : 	    return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN22@xmlNanoFTP:

; 1949 : 	}
; 1950 : 	callback(userData, buf, len);

	mov	esi, esp
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _userData$[ebp]
	push	edx
	call	DWORD PTR _callback$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@xmlNanoFTP:

; 1951 :     } while (len != 0);

	cmp	DWORD PTR _len$[ebp], 0
	jne	$LN4@xmlNanoFTP

; 1952 : 
; 1953 :     return(xmlNanoFTPCloseConnection(ctxt));

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPCloseConnection
	add	esp, 4
$LN1@xmlNanoFTP:

; 1954 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 4404				; 00001134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN28@xmlNanoFTP:
	DD	3
	DD	$LN27@xmlNanoFTP
$LN27@xmlNanoFTP:
	DD	-4104					; ffffeff8H
	DD	4096					; 00001000H
	DD	$LN24@xmlNanoFTP
	DD	-4380					; ffffeee4H
	DD	260					; 00000104H
	DD	$LN25@xmlNanoFTP
	DD	-4396					; ffffeed4H
	DD	8
	DD	$LN26@xmlNanoFTP
$LN26@xmlNanoFTP:
	DB	116					; 00000074H
	DB	118					; 00000076H
	DB	0
$LN25@xmlNanoFTP:
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$LN24@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPGet ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPGetSocket
_TEXT	SEGMENT
tv144 = -352						; size = 4
tv222 = -345						; size = 1
tv219 = -344						; size = 4
tv216 = -340						; size = 4
tv78 = -336						; size = 4
tv183 = -329						; size = 1
tv180 = -328						; size = 4
tv177 = -324						; size = 4
_len$ = -320						; size = 4
_res$ = -316						; size = 4
_buf$ = -308						; size = 300
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_filename$ = 12						; size = 4
_xmlNanoFTPGetSocket PROC				; COMDAT

; 1836 : xmlNanoFTPGetSocket(void *ctx, const char *filename) {

	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1837 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1838 :     char buf[300];
; 1839 :     int res, len;
; 1840 :     if (ctx == NULL)

	cmp	DWORD PTR _ctx$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP

; 1841 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 1842 :     if ((filename == NULL) && (ctxt->path == NULL))

	cmp	DWORD PTR _filename$[ebp], 0
	jne	SHORT $LN3@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN3@xmlNanoFTP

; 1843 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN3@xmlNanoFTP:

; 1844 :     ctxt->dataFd = xmlNanoFTPGetConnection(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPGetConnection
	add	esp, 4
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 1845 :     if (ctxt->dataFd == INVALID_SOCKET)

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+48], -1
	jne	SHORT $LN4@xmlNanoFTP

; 1846 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1847 : 
; 1848 :     snprintf(buf, sizeof(buf), "TYPE I\r\n");

	push	OFFSET ??_C@_08NFILCCME@TYPE?5I?$AN?6@
	push	300					; 0000012cH
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_snprintf
	add	esp, 12					; 0000000cH

; 1849 :     len = strlen(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv177[ebp], ecx
	mov	edx, DWORD PTR tv177[ebp]
	add	edx, 1
	mov	DWORD PTR tv180[ebp], edx
$LL12@xmlNanoFTP:
	mov	eax, DWORD PTR tv177[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv183[ebp], cl
	add	DWORD PTR tv177[ebp], 1
	cmp	BYTE PTR tv183[ebp], 0
	jne	SHORT $LL12@xmlNanoFTP
	mov	edx, DWORD PTR tv177[ebp]
	sub	edx, DWORD PTR tv180[ebp]
	mov	DWORD PTR tv78[ebp], edx
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR _len$[ebp], eax

; 1850 : #ifdef DEBUG_FTP
; 1851 :     xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1852 : #endif
; 1853 :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1854 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN5@xmlNanoFTP

; 1855 : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1856 : 	closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1857 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 1858 :     }
; 1859 :     res = xmlNanoFTPReadResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPReadResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1860 :     if (res != 2) {

	cmp	DWORD PTR _res$[ebp], 2
	je	SHORT $LN6@xmlNanoFTP

; 1861 : 	closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1862 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 1863 :     }
; 1864 :     if (filename == NULL)

	cmp	DWORD PTR _filename$[ebp], 0
	jne	SHORT $LN7@xmlNanoFTP

; 1865 : 	snprintf(buf, sizeof(buf), "RETR %s\r\n", ctxt->path);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	push	OFFSET ??_C@_09NFIHFDPP@RETR?5?$CFs?$AN?6@
	push	300					; 0000012cH
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_snprintf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN8@xmlNanoFTP
$LN7@xmlNanoFTP:

; 1866 :     else
; 1867 : 	snprintf(buf, sizeof(buf), "RETR %s\r\n", filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_09NFIHFDPP@RETR?5?$CFs?$AN?6@
	push	300					; 0000012cH
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_snprintf
	add	esp, 16					; 00000010H
$LN8@xmlNanoFTP:

; 1868 :     buf[sizeof(buf) - 1] = 0;

	mov	edx, 1
	imul	eax, edx, 299
	mov	BYTE PTR _buf$[ebp+eax], 0

; 1869 :     len = strlen(buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv216[ebp], ecx
	mov	edx, DWORD PTR tv216[ebp]
	add	edx, 1
	mov	DWORD PTR tv219[ebp], edx
$LL13@xmlNanoFTP:
	mov	eax, DWORD PTR tv216[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv222[ebp], cl
	add	DWORD PTR tv216[ebp], 1
	cmp	BYTE PTR tv222[ebp], 0
	jne	SHORT $LL13@xmlNanoFTP
	mov	edx, DWORD PTR tv216[ebp]
	sub	edx, DWORD PTR tv219[ebp]
	mov	DWORD PTR tv144[ebp], edx
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR _len$[ebp], eax

; 1870 : #ifdef DEBUG_FTP
; 1871 :     xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1872 : #endif
; 1873 :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1874 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN9@xmlNanoFTP

; 1875 : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1876 : 	closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1877 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN9@xmlNanoFTP:

; 1878 :     }
; 1879 :     res = xmlNanoFTPReadResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPReadResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1880 :     if (res != 1) {

	cmp	DWORD PTR _res$[ebp], 1
	je	SHORT $LN10@xmlNanoFTP

; 1881 : 	closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1882 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN10@xmlNanoFTP:

; 1883 :     }
; 1884 :     return(ctxt->dataFd);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [eax+48]
$LN1@xmlNanoFTP:

; 1885 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@xmlNanoFTP:
	DD	1
	DD	$LN15@xmlNanoFTP
$LN15@xmlNanoFTP:
	DD	-308					; fffffeccH
	DD	300					; 0000012cH
	DD	$LN14@xmlNanoFTP
$LN14@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPGetSocket ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPList
_TEXT	SEGMENT
tv133 = -4704						; size = 4
tv281 = -4697						; size = 1
tv278 = -4696						; size = 4
tv275 = -4692						; size = 4
___i$1 = -4688						; size = 4
___i$2 = -4684						; size = 4
_tv$ = -4676						; size = 8
_efd$ = -4660						; size = 260
_rfd$ = -4392						; size = 260
_base$ = -4128						; size = 4
_indx$ = -4124						; size = 4
_res$ = -4120						; size = 4
_len$ = -4116						; size = 4
_buf$ = -4108						; size = 4097
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_callback$ = 12						; size = 4
_userData$ = 16						; size = 4
_filename$ = 20						; size = 4
_xmlNanoFTPList PROC					; COMDAT

; 1727 : 	       const char *filename) {

	push	ebp
	mov	ebp, esp
	mov	eax, 4704				; 00001260H
	call	__chkstk
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-4704]
	mov	ecx, 1176				; 00000498H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1728 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1729 :     char buf[4096 + 1];
; 1730 :     int len, res;
; 1731 :     int indx = 0, base;

	mov	DWORD PTR _indx$[ebp], 0

; 1732 :     fd_set rfd, efd;
; 1733 :     struct timeval tv;
; 1734 : 
; 1735 :     if (ctxt == NULL) return (-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN20@xmlNanoFTP
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN20@xmlNanoFTP:

; 1736 :     if (filename == NULL) {

	cmp	DWORD PTR _filename$[ebp], 0
	jne	SHORT $LN21@xmlNanoFTP

; 1737 :         if (xmlNanoFTPCwd(ctxt, ctxt->path) < 1)

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPCwd
	add	esp, 8
	cmp	eax, 1
	jge	SHORT $LN23@xmlNanoFTP

; 1738 : 	    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN23@xmlNanoFTP:

; 1739 : 	ctxt->dataFd = xmlNanoFTPGetConnection(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPGetConnection
	add	esp, 4
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], eax

; 1740 : 	if (ctxt->dataFd == INVALID_SOCKET)

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax+48], -1
	jne	SHORT $LN24@xmlNanoFTP

; 1741 : 	    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN24@xmlNanoFTP:

; 1742 : 	snprintf(buf, sizeof(buf), "LIST -L\r\n");

	push	OFFSET ??_C@_09PLPJIOKF@LIST?5?9L?$AN?6@
	push	4097					; 00001001H
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_snprintf
	add	esp, 12					; 0000000cH

; 1743 :     } else {

	jmp	SHORT $LN22@xmlNanoFTP
$LN21@xmlNanoFTP:

; 1744 : 	if (filename[0] != '/') {

	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _filename$[ebp]
	movsx	edx, BYTE PTR [ecx+eax]
	cmp	edx, 47					; 0000002fH
	je	SHORT $LN25@xmlNanoFTP

; 1745 : 	    if (xmlNanoFTPCwd(ctxt, ctxt->path) < 1)

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPCwd
	add	esp, 8
	cmp	eax, 1
	jge	SHORT $LN25@xmlNanoFTP

; 1746 : 		return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN25@xmlNanoFTP:

; 1747 : 	}
; 1748 : 	ctxt->dataFd = xmlNanoFTPGetConnection(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPGetConnection
	add	esp, 4
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], eax

; 1749 : 	if (ctxt->dataFd == INVALID_SOCKET)

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+48], -1
	jne	SHORT $LN27@xmlNanoFTP

; 1750 : 	    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN27@xmlNanoFTP:

; 1751 : 	snprintf(buf, sizeof(buf), "LIST -L %s\r\n", filename);

	mov	eax, DWORD PTR _filename$[ebp]
	push	eax
	push	OFFSET ??_C@_0N@MNMMLKJL@LIST?5?9L?5?$CFs?$AN?6@
	push	4097					; 00001001H
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	call	_snprintf
	add	esp, 16					; 00000010H
$LN22@xmlNanoFTP:

; 1752 :     }
; 1753 :     buf[sizeof(buf) - 1] = 0;

	mov	edx, 1
	shl	edx, 12					; 0000000cH
	mov	BYTE PTR _buf$[ebp+edx], 0

; 1754 :     len = strlen(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv275[ebp], eax
	mov	ecx, DWORD PTR tv275[ebp]
	add	ecx, 1
	mov	DWORD PTR tv278[ebp], ecx
$LL42@xmlNanoFTP:
	mov	edx, DWORD PTR tv275[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv281[ebp], al
	add	DWORD PTR tv275[ebp], 1
	cmp	BYTE PTR tv281[ebp], 0
	jne	SHORT $LL42@xmlNanoFTP
	mov	ecx, DWORD PTR tv275[ebp]
	sub	ecx, DWORD PTR tv278[ebp]
	mov	DWORD PTR tv133[ebp], ecx
	mov	edx, DWORD PTR tv133[ebp]
	mov	DWORD PTR _len$[ebp], edx

; 1755 : #ifdef DEBUG_FTP
; 1756 :     xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1757 : #endif
; 1758 :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1759 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN28@xmlNanoFTP

; 1760 : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1761 : 	closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+48], -1

; 1762 : 	return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	$LN1@xmlNanoFTP
$LN28@xmlNanoFTP:

; 1763 :     }
; 1764 :     res = xmlNanoFTPReadResponse(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPReadResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1765 :     if (res != 1) {

	cmp	DWORD PTR _res$[ebp], 1
	je	SHORT $LN4@xmlNanoFTP

; 1766 : 	closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1767 : 	return(-res);

	mov	eax, DWORD PTR _res$[ebp]
	neg	eax
	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1768 :     }
; 1769 : 
; 1770 :     do {
; 1771 : 	tv.tv_sec = 1;

	mov	DWORD PTR _tv$[ebp], 1

; 1772 : 	tv.tv_usec = 0;

	mov	DWORD PTR _tv$[ebp+4], 0

; 1773 : 	FD_ZERO(&rfd);

	mov	DWORD PTR _rfd$[ebp], 0
$LN7@xmlNanoFTP:

; 1774 : 	FD_SET(ctxt->dataFd, &rfd);

	mov	DWORD PTR ___i$2[ebp], 0
	jmp	SHORT $LN10@xmlNanoFTP
$LN8@xmlNanoFTP:
	mov	edx, DWORD PTR ___i$2[ebp]
	add	edx, 1
	mov	DWORD PTR ___i$2[ebp], edx
$LN10@xmlNanoFTP:
	mov	eax, DWORD PTR ___i$2[ebp]
	cmp	eax, DWORD PTR _rfd$[ebp]
	jae	SHORT $LN9@xmlNanoFTP
	mov	ecx, DWORD PTR ___i$2[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _rfd$[ebp+ecx*4+4]
	cmp	eax, DWORD PTR [edx+48]
	jne	SHORT $LN30@xmlNanoFTP
	jmp	SHORT $LN9@xmlNanoFTP
$LN30@xmlNanoFTP:
	jmp	SHORT $LN8@xmlNanoFTP
$LN9@xmlNanoFTP:
	mov	ecx, DWORD PTR ___i$2[ebp]
	cmp	ecx, DWORD PTR _rfd$[ebp]
	jne	SHORT $LN5@xmlNanoFTP
	cmp	DWORD PTR _rfd$[ebp], 64		; 00000040H
	jae	SHORT $LN5@xmlNanoFTP
	mov	edx, DWORD PTR ___i$2[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _rfd$[ebp+edx*4+4], ecx
	mov	edx, DWORD PTR _rfd$[ebp]
	add	edx, 1
	mov	DWORD PTR _rfd$[ebp], edx
$LN5@xmlNanoFTP:
	xor	eax, eax
	jne	SHORT $LN7@xmlNanoFTP

; 1775 : 	FD_ZERO(&efd);

	mov	DWORD PTR _efd$[ebp], 0
$LN13@xmlNanoFTP:

; 1776 : 	FD_SET(ctxt->dataFd, &efd);

	mov	DWORD PTR ___i$1[ebp], 0
	jmp	SHORT $LN16@xmlNanoFTP
$LN14@xmlNanoFTP:
	mov	ecx, DWORD PTR ___i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR ___i$1[ebp], ecx
$LN16@xmlNanoFTP:
	mov	edx, DWORD PTR ___i$1[ebp]
	cmp	edx, DWORD PTR _efd$[ebp]
	jae	SHORT $LN15@xmlNanoFTP
	mov	eax, DWORD PTR ___i$1[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _efd$[ebp+eax*4+4]
	cmp	edx, DWORD PTR [ecx+48]
	jne	SHORT $LN33@xmlNanoFTP
	jmp	SHORT $LN15@xmlNanoFTP
$LN33@xmlNanoFTP:
	jmp	SHORT $LN14@xmlNanoFTP
$LN15@xmlNanoFTP:
	mov	eax, DWORD PTR ___i$1[ebp]
	cmp	eax, DWORD PTR _efd$[ebp]
	jne	SHORT $LN11@xmlNanoFTP
	cmp	DWORD PTR _efd$[ebp], 64		; 00000040H
	jae	SHORT $LN11@xmlNanoFTP
	mov	ecx, DWORD PTR ___i$1[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	DWORD PTR _efd$[ebp+ecx*4+4], eax
	mov	ecx, DWORD PTR _efd$[ebp]
	add	ecx, 1
	mov	DWORD PTR _efd$[ebp], ecx
$LN11@xmlNanoFTP:
	xor	edx, edx
	jne	SHORT $LN13@xmlNanoFTP

; 1777 : 	res = select(ctxt->dataFd + 1, &rfd, NULL, &efd, &tv);

	mov	esi, esp
	lea	eax, DWORD PTR _tv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _efd$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _rfd$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	add	ecx, 1
	push	ecx
	call	DWORD PTR __imp__select@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1778 : 	if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN36@xmlNanoFTP

; 1779 : #ifdef DEBUG_FTP
; 1780 : 	    perror("select");
; 1781 : #endif
; 1782 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1783 : 	    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN36@xmlNanoFTP:

; 1784 : 	}
; 1785 : 	if (res == 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jne	$LN37@xmlNanoFTP

; 1786 : 	    res = xmlNanoFTPCheckResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPCheckResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1787 : 	    if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN38@xmlNanoFTP

; 1788 : 		closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1789 : 		ctxt->dataFd = INVALID_SOCKET;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+48], -1

; 1790 : 		return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN38@xmlNanoFTP:

; 1791 : 	    }
; 1792 : 	    if (res == 2) {

	cmp	DWORD PTR _res$[ebp], 2
	jne	SHORT $LN39@xmlNanoFTP

; 1793 : 		closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+48], -1

; 1794 : 		return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN39@xmlNanoFTP:

; 1795 : 	    }
; 1796 : 
; 1797 : 	    continue;

	jmp	$LN2@xmlNanoFTP
$LN37@xmlNanoFTP:

; 1798 : 	}
; 1799 : 
; 1800 : 	if ((len = recv(ctxt->dataFd, &buf[indx], sizeof(buf) - (indx + 1), 0)) < 0) {

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _indx$[ebp]
	add	ecx, 1
	mov	edx, 4097				; 00001001H
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR _indx$[ebp]
	lea	ecx, DWORD PTR _buf$[ebp+eax]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__recv@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _len$[ebp], eax
	cmp	DWORD PTR _len$[ebp], 0
	jge	SHORT $LN40@xmlNanoFTP

; 1801 : 	    __xmlIOErr(XML_FROM_FTP, 0, "recv");

	push	OFFSET ??_C@_04IFMDBHHF@recv@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1802 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+48], -1

; 1803 : 	    ctxt->dataFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1804 : 	    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN40@xmlNanoFTP:

; 1805 : 	}
; 1806 : #ifdef DEBUG_FTP
; 1807 :         write(1, &buf[indx], len);
; 1808 : #endif
; 1809 : 	indx += len;

	mov	edx, DWORD PTR _indx$[ebp]
	add	edx, DWORD PTR _len$[ebp]
	mov	DWORD PTR _indx$[ebp], edx

; 1810 : 	buf[indx] = 0;

	mov	eax, DWORD PTR _indx$[ebp]
	mov	BYTE PTR _buf$[ebp+eax], 0

; 1811 : 	base = 0;

	mov	DWORD PTR _base$[ebp], 0
$LN19@xmlNanoFTP:

; 1812 : 	do {
; 1813 : 	    res = xmlNanoFTPParseList(&buf[base], callback, userData);

	mov	ecx, DWORD PTR _userData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _callback$[ebp]
	push	edx
	mov	eax, DWORD PTR _base$[ebp]
	lea	ecx, DWORD PTR _buf$[ebp+eax]
	push	ecx
	call	_xmlNanoFTPParseList
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _res$[ebp], eax

; 1814 : 	    base += res;

	mov	edx, DWORD PTR _base$[ebp]
	add	edx, DWORD PTR _res$[ebp]
	mov	DWORD PTR _base$[ebp], edx

; 1815 : 	} while (res > 0);

	cmp	DWORD PTR _res$[ebp], 0
	jg	SHORT $LN19@xmlNanoFTP

; 1816 : 
; 1817 : 	memmove(&buf[0], &buf[base], indx - base);

	mov	eax, DWORD PTR _indx$[ebp]
	sub	eax, DWORD PTR _base$[ebp]
	push	eax
	mov	ecx, DWORD PTR _base$[ebp]
	lea	edx, DWORD PTR _buf$[ebp+ecx]
	push	edx
	mov	eax, 1
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _buf$[ebp+ecx]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH

; 1818 : 	indx -= base;

	mov	eax, DWORD PTR _indx$[ebp]
	sub	eax, DWORD PTR _base$[ebp]
	mov	DWORD PTR _indx$[ebp], eax
$LN2@xmlNanoFTP:

; 1819 :     } while (len != 0);

	cmp	DWORD PTR _len$[ebp], 0
	jne	$LN4@xmlNanoFTP

; 1820 :     xmlNanoFTPCloseConnection(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPCloseConnection
	add	esp, 4

; 1821 :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 1822 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN48@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 4704				; 00001260H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN48@xmlNanoFTP:
	DD	4
	DD	$LN47@xmlNanoFTP
$LN47@xmlNanoFTP:
	DD	-4108					; ffffeff4H
	DD	4097					; 00001001H
	DD	$LN43@xmlNanoFTP
	DD	-4392					; ffffeed8H
	DD	260					; 00000104H
	DD	$LN44@xmlNanoFTP
	DD	-4660					; ffffedccH
	DD	260					; 00000104H
	DD	$LN45@xmlNanoFTP
	DD	-4676					; ffffedbcH
	DD	8
	DD	$LN46@xmlNanoFTP
$LN46@xmlNanoFTP:
	DB	116					; 00000074H
	DB	118					; 00000076H
	DB	0
$LN45@xmlNanoFTP:
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$LN44@xmlNanoFTP:
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$LN43@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPCloseConnection
_TEXT	SEGMENT
___i$1 = -568						; size = 4
___i$2 = -564						; size = 4
_tv$ = -556						; size = 8
_efd$ = -540						; size = 260
_rfd$ = -272						; size = 260
_res$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPCloseConnection PROC				; COMDAT

; 1547 : xmlNanoFTPCloseConnection(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 568				; 00000238H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-568]
	mov	ecx, 142				; 0000008eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1548 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1549 :     int res;
; 1550 :     fd_set rfd, efd;
; 1551 :     struct timeval tv;
; 1552 : 
; 1553 :     if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN15@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	jne	SHORT $LN14@xmlNanoFTP
$LN15@xmlNanoFTP:
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN14@xmlNanoFTP:

; 1554 : 
; 1555 :     closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1556 :     tv.tv_sec = 15;

	mov	DWORD PTR _tv$[ebp], 15			; 0000000fH

; 1557 :     tv.tv_usec = 0;

	mov	DWORD PTR _tv$[ebp+4], 0

; 1558 :     FD_ZERO(&rfd);

	mov	DWORD PTR _rfd$[ebp], 0
$LN4@xmlNanoFTP:

; 1559 :     FD_SET(ctxt->controlFd, &rfd);

	mov	DWORD PTR ___i$2[ebp], 0
	jmp	SHORT $LN7@xmlNanoFTP
$LN5@xmlNanoFTP:
	mov	edx, DWORD PTR ___i$2[ebp]
	add	edx, 1
	mov	DWORD PTR ___i$2[ebp], edx
$LN7@xmlNanoFTP:
	mov	eax, DWORD PTR ___i$2[ebp]
	cmp	eax, DWORD PTR _rfd$[ebp]
	jae	SHORT $LN6@xmlNanoFTP
	mov	ecx, DWORD PTR ___i$2[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _rfd$[ebp+ecx*4+4]
	cmp	eax, DWORD PTR [edx+44]
	jne	SHORT $LN16@xmlNanoFTP
	jmp	SHORT $LN6@xmlNanoFTP
$LN16@xmlNanoFTP:
	jmp	SHORT $LN5@xmlNanoFTP
$LN6@xmlNanoFTP:
	mov	ecx, DWORD PTR ___i$2[ebp]
	cmp	ecx, DWORD PTR _rfd$[ebp]
	jne	SHORT $LN2@xmlNanoFTP
	cmp	DWORD PTR _rfd$[ebp], 64		; 00000040H
	jae	SHORT $LN2@xmlNanoFTP
	mov	edx, DWORD PTR ___i$2[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _rfd$[ebp+edx*4+4], ecx
	mov	edx, DWORD PTR _rfd$[ebp]
	add	edx, 1
	mov	DWORD PTR _rfd$[ebp], edx
$LN2@xmlNanoFTP:
	xor	eax, eax
	jne	SHORT $LN4@xmlNanoFTP

; 1560 :     FD_ZERO(&efd);

	mov	DWORD PTR _efd$[ebp], 0
$LN10@xmlNanoFTP:

; 1561 :     FD_SET(ctxt->controlFd, &efd);

	mov	DWORD PTR ___i$1[ebp], 0
	jmp	SHORT $LN13@xmlNanoFTP
$LN11@xmlNanoFTP:
	mov	ecx, DWORD PTR ___i$1[ebp]
	add	ecx, 1
	mov	DWORD PTR ___i$1[ebp], ecx
$LN13@xmlNanoFTP:
	mov	edx, DWORD PTR ___i$1[ebp]
	cmp	edx, DWORD PTR _efd$[ebp]
	jae	SHORT $LN12@xmlNanoFTP
	mov	eax, DWORD PTR ___i$1[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _efd$[ebp+eax*4+4]
	cmp	edx, DWORD PTR [ecx+44]
	jne	SHORT $LN19@xmlNanoFTP
	jmp	SHORT $LN12@xmlNanoFTP
$LN19@xmlNanoFTP:
	jmp	SHORT $LN11@xmlNanoFTP
$LN12@xmlNanoFTP:
	mov	eax, DWORD PTR ___i$1[ebp]
	cmp	eax, DWORD PTR _efd$[ebp]
	jne	SHORT $LN8@xmlNanoFTP
	cmp	DWORD PTR _efd$[ebp], 64		; 00000040H
	jae	SHORT $LN8@xmlNanoFTP
	mov	ecx, DWORD PTR ___i$1[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	mov	DWORD PTR _efd$[ebp+ecx*4+4], eax
	mov	ecx, DWORD PTR _efd$[ebp]
	add	ecx, 1
	mov	DWORD PTR _efd$[ebp], ecx
$LN8@xmlNanoFTP:
	xor	edx, edx
	jne	SHORT $LN10@xmlNanoFTP

; 1562 :     res = select(ctxt->controlFd + 1, &rfd, NULL, &efd, &tv);

	mov	esi, esp
	lea	eax, DWORD PTR _tv$[ebp]
	push	eax
	lea	ecx, DWORD PTR _efd$[ebp]
	push	ecx
	push	0
	lea	edx, DWORD PTR _rfd$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	push	ecx
	call	DWORD PTR __imp__select@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1563 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN22@xmlNanoFTP

; 1564 : #ifdef DEBUG_FTP
; 1565 : 	perror("select");
; 1566 : #endif
; 1567 : 	closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1568 : 	return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN22@xmlNanoFTP:

; 1569 :     }
; 1570 :     if (res == 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jne	SHORT $LN23@xmlNanoFTP

; 1571 : #ifdef DEBUG_FTP
; 1572 : 	xmlGenericError(xmlGenericErrorContext,
; 1573 : 		"xmlNanoFTPCloseConnection: timeout\n");
; 1574 : #endif
; 1575 : 	closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1576 :     } else {

	jmp	SHORT $LN24@xmlNanoFTP
$LN23@xmlNanoFTP:

; 1577 : 	res = xmlNanoFTPGetResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1578 : 	if (res != 2) {

	cmp	DWORD PTR _res$[ebp], 2
	je	SHORT $LN24@xmlNanoFTP

; 1579 : 	    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1580 : 	    return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN24@xmlNanoFTP:

; 1581 : 	}
; 1582 :     }
; 1583 :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 1584 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 568				; 00000238H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN31@xmlNanoFTP:
	DD	3
	DD	$LN30@xmlNanoFTP
$LN30@xmlNanoFTP:
	DD	-272					; fffffef0H
	DD	260					; 00000104H
	DD	$LN27@xmlNanoFTP
	DD	-540					; fffffde4H
	DD	260					; 00000104H
	DD	$LN28@xmlNanoFTP
	DD	-556					; fffffdd4H
	DD	8
	DD	$LN29@xmlNanoFTP
$LN29@xmlNanoFTP:
	DB	116					; 00000074H
	DB	118					; 00000076H
	DB	0
$LN28@xmlNanoFTP:
	DB	101					; 00000065H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
$LN27@xmlNanoFTP:
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
_xmlNanoFTPCloseConnection ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPGetConnection
_TEXT	SEGMENT
tv285 = -352						; size = 4
tv466 = -345						; size = 1
tv463 = -344						; size = 4
tv460 = -340						; size = 4
tv85 = -336						; size = 4
tv331 = -329						; size = 1
tv328 = -328						; size = 4
tv325 = -324						; size = 4
_dataAddrLen$ = -316					; size = 4
_dataAddr$ = -304					; size = 16
_temp$ = -280						; size = 24
_portp$ = -252						; size = 4
_adp$ = -248						; size = 4
_ad$ = -240						; size = 6
_res$ = -228						; size = 4
_i$ = -224						; size = 4
_len$ = -220						; size = 4
_cur$ = -216						; size = 4
_buf$ = -208						; size = 200
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPGetConnection PROC				; COMDAT

; 1374 : xmlNanoFTPGetConnection(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1375 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1376 :     char buf[200], *cur;
; 1377 :     int len, i;
; 1378 :     int res;
; 1379 :     unsigned char ad[6], *adp, *portp;
; 1380 :     unsigned int temp[6];
; 1381 : #ifdef SUPPORT_IP6
; 1382 :     struct sockaddr_storage dataAddr;
; 1383 : #else
; 1384 :     struct sockaddr_in dataAddr;
; 1385 : #endif
; 1386 :     XML_SOCKLEN_T dataAddrLen;
; 1387 : 
; 1388 :     if (ctxt == NULL) return INVALID_SOCKET;

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN7@xmlNanoFTP
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN7@xmlNanoFTP:

; 1389 : 
; 1390 :     memset (&dataAddr, 0, sizeof(dataAddr));

	xor	ecx, ecx
	mov	DWORD PTR _dataAddr$[ebp], ecx
	mov	DWORD PTR _dataAddr$[ebp+4], ecx
	mov	DWORD PTR _dataAddr$[ebp+8], ecx
	mov	DWORD PTR _dataAddr$[ebp+12], ecx

; 1391 : #ifdef SUPPORT_IP6
; 1392 :     if ((ctxt->ftpAddr).ss_family == AF_INET6) {
; 1393 : 	ctxt->dataFd = socket (AF_INET6, SOCK_STREAM, IPPROTO_TCP);
; 1394 : 	((struct sockaddr_in6 *)&dataAddr)->sin6_family = AF_INET6;
; 1395 : 	dataAddrLen = sizeof(struct sockaddr_in6);
; 1396 :     } else
; 1397 : #endif
; 1398 :     {
; 1399 : 	ctxt->dataFd = socket (AF_INET, SOCK_STREAM, IPPROTO_TCP);

	mov	esi, esp
	push	6
	push	1
	push	2
	call	DWORD PTR __imp__socket@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], eax

; 1400 : 	((struct sockaddr_in *)&dataAddr)->sin_family = AF_INET;

	mov	eax, 2
	mov	WORD PTR _dataAddr$[ebp], ax

; 1401 : 	dataAddrLen = sizeof (struct sockaddr_in);

	mov	DWORD PTR _dataAddrLen$[ebp], 16	; 00000010H

; 1402 :     }
; 1403 : 
; 1404 :     if (ctxt->dataFd == INVALID_SOCKET) {

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+48], -1
	jne	SHORT $LN8@xmlNanoFTP

; 1405 : 	__xmlIOErr(XML_FROM_FTP, 0, "socket failed");

	push	OFFSET ??_C@_0O@FPJGNADN@socket?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1406 : 	return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN8@xmlNanoFTP:

; 1407 :     }
; 1408 : 
; 1409 :     if (ctxt->passive) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+40], 0
	je	$LN9@xmlNanoFTP

; 1410 : #ifdef SUPPORT_IP6
; 1411 : 	if ((ctxt->ftpAddr).ss_family == AF_INET6)
; 1412 : 	    snprintf (buf, sizeof(buf), "EPSV\r\n");
; 1413 : 	else
; 1414 : #endif
; 1415 : 	    snprintf (buf, sizeof(buf), "PASV\r\n");

	push	OFFSET ??_C@_06OGKAIOED@PASV?$AN?6@
	push	200					; 000000c8H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_snprintf
	add	esp, 12					; 0000000cH

; 1416 :         len = strlen (buf);

	lea	ecx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv325[ebp], ecx
	mov	edx, DWORD PTR tv325[ebp]
	add	edx, 1
	mov	DWORD PTR tv328[ebp], edx
$LL24@xmlNanoFTP:
	mov	eax, DWORD PTR tv325[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv331[ebp], cl
	add	DWORD PTR tv325[ebp], 1
	cmp	BYTE PTR tv331[ebp], 0
	jne	SHORT $LL24@xmlNanoFTP
	mov	edx, DWORD PTR tv325[ebp]
	sub	edx, DWORD PTR tv328[ebp]
	mov	DWORD PTR tv85[ebp], edx
	mov	eax, DWORD PTR tv85[ebp]
	mov	DWORD PTR _len$[ebp], eax

; 1417 : #ifdef DEBUG_FTP
; 1418 : 	xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1419 : #endif
; 1420 : 	res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _len$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1421 : 	if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN11@xmlNanoFTP

; 1422 : 	    __xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1423 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1

; 1424 : 	    return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN11@xmlNanoFTP:

; 1425 : 	}
; 1426 :         res = xmlNanoFTPReadResponse(ctx);

	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlNanoFTPReadResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1427 : 	if (res != 2) {

	cmp	DWORD PTR _res$[ebp], 2
	je	SHORT $LN12@xmlNanoFTP

; 1428 : 	    if (res == 5) {

	cmp	DWORD PTR _res$[ebp], 5
	jne	SHORT $LN13@xmlNanoFTP

; 1429 : 	        closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1430 : 		return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP

; 1431 : 	    } else {

	jmp	SHORT $LN12@xmlNanoFTP
$LN13@xmlNanoFTP:

; 1432 : 		/*
; 1433 : 		 * retry with an active connection
; 1434 : 		 */
; 1435 : 	        closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1436 : 	        ctxt->passive = 0;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+40], 0
$LN12@xmlNanoFTP:

; 1437 : 	    }
; 1438 : 	}
; 1439 : 	cur = &ctxt->controlBuf[ctxt->controlBufAnswer];

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+1096]
	mov	eax, DWORD PTR _ctxt$[ebp]
	lea	ecx, DWORD PTR [eax+edx+60]
	mov	DWORD PTR _cur$[ebp], ecx
$LN2@xmlNanoFTP:

; 1440 : 	while (((*cur < '0') || (*cur > '9')) && *cur != '\0') cur++;

	mov	edx, DWORD PTR _cur$[ebp]
	movsx	eax, BYTE PTR [edx]
	cmp	eax, 48					; 00000030H
	jl	SHORT $LN15@xmlNanoFTP
	mov	ecx, DWORD PTR _cur$[ebp]
	movsx	edx, BYTE PTR [ecx]
	cmp	edx, 57					; 00000039H
	jle	SHORT $LN3@xmlNanoFTP
$LN15@xmlNanoFTP:
	mov	eax, DWORD PTR _cur$[ebp]
	movsx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@xmlNanoFTP
	mov	edx, DWORD PTR _cur$[ebp]
	add	edx, 1
	mov	DWORD PTR _cur$[ebp], edx
	jmp	SHORT $LN2@xmlNanoFTP
$LN3@xmlNanoFTP:

; 1441 : #ifdef SUPPORT_IP6
; 1442 : 	if ((ctxt->ftpAddr).ss_family == AF_INET6) {
; 1443 : 	    if (sscanf (cur, "%u", &temp[0]) != 1) {
; 1444 : 		__xmlIOErr(XML_FROM_FTP, XML_FTP_EPSV_ANSWER,
; 1445 : 			"Invalid answer to EPSV\n");
; 1446 : 		if (ctxt->dataFd != INVALID_SOCKET) {
; 1447 : 		    closesocket (ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;
; 1448 : 		}
; 1449 : 		return INVALID_SOCKET;
; 1450 : 	    }
; 1451 : 	    memcpy (&((struct sockaddr_in6 *)&dataAddr)->sin6_addr, &((struct sockaddr_in6 *)&ctxt->ftpAddr)->sin6_addr, sizeof(struct in6_addr));
; 1452 : 	    ((struct sockaddr_in6 *)&dataAddr)->sin6_port = htons (temp[0]);
; 1453 : 	}
; 1454 : 	else
; 1455 : #endif
; 1456 : 	{
; 1457 : 	    if (sscanf (cur, "%u,%u,%u,%u,%u,%u", &temp[0], &temp[1], &temp[2],
; 1458 : 		&temp[3], &temp[4], &temp[5]) != 6) {

	mov	eax, 4
	imul	ecx, eax, 5
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	mov	eax, 4
	shl	eax, 2
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	mov	edx, 4
	imul	eax, edx, 3
	lea	ecx, DWORD PTR _temp$[ebp+eax]
	push	ecx
	mov	edx, 4
	shl	edx, 1
	lea	eax, DWORD PTR _temp$[ebp+edx]
	push	eax
	mov	ecx, 4
	shl	ecx, 0
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	mov	eax, 4
	imul	ecx, eax, 0
	lea	edx, DWORD PTR _temp$[ebp+ecx]
	push	edx
	push	OFFSET ??_C@_0BC@GDCBJEOP@?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu?0?$CFu@
	mov	eax, DWORD PTR _cur$[ebp]
	push	eax
	call	_sscanf
	add	esp, 32					; 00000020H
	cmp	eax, 6
	je	SHORT $LN16@xmlNanoFTP

; 1459 : 		__xmlIOErr(XML_FROM_FTP, XML_FTP_PASV_ANSWER,

	push	OFFSET ??_C@_0BI@FEMCDLGO@Invalid?5answer?5to?5PASV?6@
	push	2000					; 000007d0H
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1460 : 			"Invalid answer to PASV\n");
; 1461 : 		if (ctxt->dataFd != INVALID_SOCKET) {

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+48], -1
	je	SHORT $LN17@xmlNanoFTP

; 1462 : 		    closesocket (ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1
$LN17@xmlNanoFTP:

; 1463 : 		}
; 1464 : 		return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN16@xmlNanoFTP:

; 1465 : 	    }
; 1466 : 	    for (i=0; i<6; i++) ad[i] = (unsigned char) (temp[i] & 0xff);

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@xmlNanoFTP
$LN4@xmlNanoFTP:
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, 1
	mov	DWORD PTR _i$[ebp], edx
$LN6@xmlNanoFTP:
	cmp	DWORD PTR _i$[ebp], 6
	jge	SHORT $LN5@xmlNanoFTP
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp+eax*4]
	and	ecx, 255				; 000000ffH
	mov	edx, DWORD PTR _i$[ebp]
	mov	BYTE PTR _ad$[ebp+edx], cl
	jmp	SHORT $LN4@xmlNanoFTP
$LN5@xmlNanoFTP:

; 1467 : 	    memcpy (&((struct sockaddr_in *)&dataAddr)->sin_addr, &ad[0], 4);

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ad$[ebp+ecx]
	mov	DWORD PTR _dataAddr$[ebp+4], edx

; 1468 : 	    memcpy (&((struct sockaddr_in *)&dataAddr)->sin_port, &ad[4], 2);

	mov	eax, 1
	shl	eax, 2
	mov	cx, WORD PTR _ad$[ebp+eax]
	mov	WORD PTR _dataAddr$[ebp+2], cx

; 1469 : 	}
; 1470 : 
; 1471 : 	if (connect(ctxt->dataFd, (struct sockaddr *) &dataAddr, dataAddrLen) < 0) {

	mov	esi, esp
	mov	edx, DWORD PTR _dataAddrLen$[ebp]
	push	edx
	lea	eax, DWORD PTR _dataAddr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__connect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN18@xmlNanoFTP

; 1472 : 	    __xmlIOErr(XML_FROM_FTP, 0, "Failed to create a data connection");

	push	OFFSET ??_C@_0CD@LJAJBLLL@Failed?5to?5create?5a?5data?5connect@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1473 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1474 : 	    return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN18@xmlNanoFTP:

; 1475 : 	}
; 1476 :     } else {

	jmp	$LN10@xmlNanoFTP
$LN9@xmlNanoFTP:

; 1477 :         getsockname(ctxt->dataFd, (struct sockaddr *) &dataAddr, &dataAddrLen);

	mov	esi, esp
	lea	eax, DWORD PTR _dataAddrLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dataAddr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__getsockname@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1478 : #ifdef SUPPORT_IP6
; 1479 : 	if ((ctxt->ftpAddr).ss_family == AF_INET6)
; 1480 : 	    ((struct sockaddr_in6 *)&dataAddr)->sin6_port = 0;
; 1481 : 	else
; 1482 : #endif
; 1483 : 	    ((struct sockaddr_in *)&dataAddr)->sin_port = 0;

	xor	ecx, ecx
	mov	WORD PTR _dataAddr$[ebp+2], cx

; 1484 : 
; 1485 : 	if (bind(ctxt->dataFd, (struct sockaddr *) &dataAddr, dataAddrLen) < 0) {

	mov	esi, esp
	mov	edx, DWORD PTR _dataAddrLen$[ebp]
	push	edx
	lea	eax, DWORD PTR _dataAddr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__bind@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN19@xmlNanoFTP

; 1486 : 	    __xmlIOErr(XML_FROM_FTP, 0, "bind failed");

	push	OFFSET ??_C@_0M@NNJMLKEI@bind?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1487 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1488 : 	    return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN19@xmlNanoFTP:

; 1489 : 	}
; 1490 :         getsockname(ctxt->dataFd, (struct sockaddr *) &dataAddr, &dataAddrLen);

	mov	esi, esp
	lea	eax, DWORD PTR _dataAddrLen$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dataAddr$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__getsockname@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1491 : 
; 1492 : 	if (listen(ctxt->dataFd, 1) < 0) {

	mov	esi, esp
	push	1
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__listen@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN20@xmlNanoFTP

; 1493 : 	    __xmlIOErr(XML_FROM_FTP, 0, "listen failed");

	push	OFFSET ??_C@_0O@MHKNJCGE@listen?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1494 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1495 : 	    return INVALID_SOCKET;

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN20@xmlNanoFTP:

; 1496 : 	}
; 1497 : #ifdef SUPPORT_IP6
; 1498 : 	if ((ctxt->ftpAddr).ss_family == AF_INET6) {
; 1499 : 	    char buf6[INET6_ADDRSTRLEN];
; 1500 : 	    inet_ntop (AF_INET6, &((struct sockaddr_in6 *)&dataAddr)->sin6_addr,
; 1501 : 		    buf6, INET6_ADDRSTRLEN);
; 1502 : 	    adp = (unsigned char *) buf6;
; 1503 : 	    portp = (unsigned char *) &((struct sockaddr_in6 *)&dataAddr)->sin6_port;
; 1504 : 	    snprintf (buf, sizeof(buf), "EPRT |2|%s|%s|\r\n", adp, portp);
; 1505 :         } else
; 1506 : #endif
; 1507 : 	{
; 1508 : 	    adp = (unsigned char *) &((struct sockaddr_in *)&dataAddr)->sin_addr;

	lea	eax, DWORD PTR _dataAddr$[ebp+4]
	mov	DWORD PTR _adp$[ebp], eax

; 1509 : 	    portp = (unsigned char *) &((struct sockaddr_in *)&dataAddr)->sin_port;

	lea	ecx, DWORD PTR _dataAddr$[ebp+2]
	mov	DWORD PTR _portp$[ebp], ecx

; 1510 : 	    snprintf (buf, sizeof(buf), "PORT %d,%d,%d,%d,%d,%d\r\n",

	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _portp$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	and	ecx, 255				; 000000ffH
	push	ecx
	mov	edx, 1
	imul	eax, edx, 0
	mov	ecx, DWORD PTR _portp$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	and	edx, 255				; 000000ffH
	push	edx
	mov	eax, 1
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _adp$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, 1
	shl	ecx, 1
	mov	edx, DWORD PTR _adp$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _adp$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	and	eax, 255				; 000000ffH
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _adp$[ebp]
	movzx	ecx, BYTE PTR [eax+edx]
	and	ecx, 255				; 000000ffH
	push	ecx
	push	OFFSET ??_C@_0BJ@FJLKMNPA@PORT?5?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?0?$CFd?$AN?6@
	push	200					; 000000c8H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_snprintf
	add	esp, 36					; 00000024H

; 1511 : 	    adp[0] & 0xff, adp[1] & 0xff, adp[2] & 0xff, adp[3] & 0xff,
; 1512 : 	    portp[0] & 0xff, portp[1] & 0xff);
; 1513 : 	}
; 1514 : 
; 1515 :         buf[sizeof(buf) - 1] = 0;

	mov	eax, 1
	imul	ecx, eax, 199
	mov	BYTE PTR _buf$[ebp+ecx], 0

; 1516 :         len = strlen(buf);

	lea	edx, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv460[ebp], edx
	mov	eax, DWORD PTR tv460[ebp]
	add	eax, 1
	mov	DWORD PTR tv463[ebp], eax
$LL25@xmlNanoFTP:
	mov	ecx, DWORD PTR tv460[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv466[ebp], dl
	add	DWORD PTR tv460[ebp], 1
	cmp	BYTE PTR tv466[ebp], 0
	jne	SHORT $LL25@xmlNanoFTP
	mov	eax, DWORD PTR tv460[ebp]
	sub	eax, DWORD PTR tv463[ebp]
	mov	DWORD PTR tv285[ebp], eax
	mov	ecx, DWORD PTR tv285[ebp]
	mov	DWORD PTR _len$[ebp], ecx

; 1517 : #ifdef DEBUG_FTP
; 1518 : 	xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1519 : #endif
; 1520 : 
; 1521 : 	res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _len$[ebp]
	push	edx
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1522 : 	if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN21@xmlNanoFTP

; 1523 : 	    __xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1524 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+48], -1

; 1525 : 	    return INVALID_SOCKET;

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN21@xmlNanoFTP:

; 1526 : 	}
; 1527 :         res = xmlNanoFTPGetResponse(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1528 : 	if (res != 2) {

	cmp	DWORD PTR _res$[ebp], 2
	je	SHORT $LN10@xmlNanoFTP

; 1529 : 	    closesocket(ctxt->dataFd); ctxt->dataFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+48], -1

; 1530 : 	    return INVALID_SOCKET;

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN10@xmlNanoFTP:

; 1531 :         }
; 1532 :     }
; 1533 :     return(ctxt->dataFd);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [ecx+48]
$LN1@xmlNanoFTP:

; 1534 : 
; 1535 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN32@xmlNanoFTP:
	DD	5
	DD	$LN31@xmlNanoFTP
$LN31@xmlNanoFTP:
	DD	-208					; ffffff30H
	DD	200					; 000000c8H
	DD	$LN26@xmlNanoFTP
	DD	-240					; ffffff10H
	DD	6
	DD	$LN27@xmlNanoFTP
	DD	-280					; fffffee8H
	DD	24					; 00000018H
	DD	$LN28@xmlNanoFTP
	DD	-304					; fffffed0H
	DD	16					; 00000010H
	DD	$LN29@xmlNanoFTP
	DD	-316					; fffffec4H
	DD	4
	DD	$LN30@xmlNanoFTP
$LN30@xmlNanoFTP:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN29@xmlNanoFTP:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	65					; 00000041H
	DB	100					; 00000064H
	DB	100					; 00000064H
	DB	114					; 00000072H
	DB	0
$LN28@xmlNanoFTP:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
$LN27@xmlNanoFTP:
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN26@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPGetConnection ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPDele
_TEXT	SEGMENT
tv76 = -436						; size = 4
tv138 = -429						; size = 1
tv135 = -428						; size = 4
tv132 = -424						; size = 4
_res$ = -420						; size = 4
_len$ = -416						; size = 4
_buf$ = -408						; size = 400
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_file$ = 12						; size = 4
_xmlNanoFTPDele PROC					; COMDAT

; 1324 : xmlNanoFTPDele(void *ctx, const char *file) {

	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1325 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1326 :     char buf[400];
; 1327 :     int len;
; 1328 :     int res;
; 1329 : 
; 1330 :     if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET) ||

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN3@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	je	SHORT $LN3@xmlNanoFTP
	cmp	DWORD PTR _file$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP
$LN3@xmlNanoFTP:

; 1331 :         (file == NULL)) return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 1332 : 
; 1333 :     /*
; 1334 :      * Expected response code for DELE:
; 1335 :      *
; 1336 :      * DELE
; 1337 :      *       250
; 1338 :      *       450, 550
; 1339 :      *       500, 501, 502, 421, 530
; 1340 :      */
; 1341 : 
; 1342 :     snprintf(buf, sizeof(buf), "DELE %s\r\n", file);

	mov	edx, DWORD PTR _file$[ebp]
	push	edx
	push	OFFSET ??_C@_09PCBACKIO@DELE?5?$CFs?$AN?6@
	push	400					; 00000190H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_snprintf
	add	esp, 16					; 00000010H

; 1343 :     buf[sizeof(buf) - 1] = 0;

	mov	ecx, 1
	imul	edx, ecx, 399
	mov	BYTE PTR _buf$[ebp+edx], 0

; 1344 :     len = strlen(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv132[ebp], eax
	mov	ecx, DWORD PTR tv132[ebp]
	add	ecx, 1
	mov	DWORD PTR tv135[ebp], ecx
$LL9@xmlNanoFTP:
	mov	edx, DWORD PTR tv132[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv138[ebp], al
	add	DWORD PTR tv132[ebp], 1
	cmp	BYTE PTR tv138[ebp], 0
	jne	SHORT $LL9@xmlNanoFTP
	mov	ecx, DWORD PTR tv132[ebp]
	sub	ecx, DWORD PTR tv135[ebp]
	mov	DWORD PTR tv76[ebp], ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _len$[ebp], edx

; 1345 : #ifdef DEBUG_FTP
; 1346 :     xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1347 : #endif
; 1348 :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1349 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN4@xmlNanoFTP

; 1350 : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1351 : 	return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1352 :     }
; 1353 :     res = xmlNanoFTPGetResponse(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1354 :     if (res == 4) {

	cmp	DWORD PTR _res$[ebp], 4
	jne	SHORT $LN5@xmlNanoFTP

; 1355 : 	return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 1356 :     }
; 1357 :     if (res == 2) return(1);

	cmp	DWORD PTR _res$[ebp], 2
	jne	SHORT $LN6@xmlNanoFTP
	mov	eax, 1
	jmp	SHORT $LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 1358 :     if (res == 5) {

	cmp	DWORD PTR _res$[ebp], 5
	jne	SHORT $LN7@xmlNanoFTP

; 1359 : 	return(0);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN7@xmlNanoFTP:

; 1360 :     }
; 1361 :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 1362 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@xmlNanoFTP:
	DD	1
	DD	$LN11@xmlNanoFTP
$LN11@xmlNanoFTP:
	DD	-408					; fffffe68H
	DD	400					; 00000190H
	DD	$LN10@xmlNanoFTP
$LN10@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPDele ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPCwd
_TEXT	SEGMENT
tv76 = -436						; size = 4
tv139 = -429						; size = 1
tv136 = -428						; size = 4
tv133 = -424						; size = 4
_res$ = -420						; size = 4
_len$ = -416						; size = 4
_buf$ = -408						; size = 400
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_directory$ = 12					; size = 4
_xmlNanoFTPCwd PROC					; COMDAT

; 1275 : xmlNanoFTPCwd(void *ctx, const char *directory) {

	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1276 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 1277 :     char buf[400];
; 1278 :     int len;
; 1279 :     int res;
; 1280 : 
; 1281 :     if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN3@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	jne	SHORT $LN2@xmlNanoFTP
$LN3@xmlNanoFTP:
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 1282 :     if (directory == NULL) return 0;

	cmp	DWORD PTR _directory$[ebp], 0
	jne	SHORT $LN4@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1283 : 
; 1284 :     /*
; 1285 :      * Expected response code for CWD:
; 1286 :      *
; 1287 :      * CWD
; 1288 :      *     250
; 1289 :      *     500, 501, 502, 421, 530, 550
; 1290 :      */
; 1291 :     snprintf(buf, sizeof(buf), "CWD %s\r\n", directory);

	mov	edx, DWORD PTR _directory$[ebp]
	push	edx
	push	OFFSET ??_C@_08JEHOKOMP@CWD?5?$CFs?$AN?6@
	push	400					; 00000190H
	lea	eax, DWORD PTR _buf$[ebp]
	push	eax
	call	_snprintf
	add	esp, 16					; 00000010H

; 1292 :     buf[sizeof(buf) - 1] = 0;

	mov	ecx, 1
	imul	edx, ecx, 399
	mov	BYTE PTR _buf$[ebp+edx], 0

; 1293 :     len = strlen(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv133[ebp], eax
	mov	ecx, DWORD PTR tv133[ebp]
	add	ecx, 1
	mov	DWORD PTR tv136[ebp], ecx
$LL10@xmlNanoFTP:
	mov	edx, DWORD PTR tv133[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv139[ebp], al
	add	DWORD PTR tv133[ebp], 1
	cmp	BYTE PTR tv139[ebp], 0
	jne	SHORT $LL10@xmlNanoFTP
	mov	ecx, DWORD PTR tv133[ebp]
	sub	ecx, DWORD PTR tv136[ebp]
	mov	DWORD PTR tv76[ebp], ecx
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _len$[ebp], edx

; 1294 : #ifdef DEBUG_FTP
; 1295 :     xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1296 : #endif
; 1297 :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1298 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN5@xmlNanoFTP

; 1299 : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1300 : 	return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	SHORT $LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 1301 :     }
; 1302 :     res = xmlNanoFTPGetResponse(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1303 :     if (res == 4) {

	cmp	DWORD PTR _res$[ebp], 4
	jne	SHORT $LN6@xmlNanoFTP

; 1304 : 	return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 1305 :     }
; 1306 :     if (res == 2) return(1);

	cmp	DWORD PTR _res$[ebp], 2
	jne	SHORT $LN7@xmlNanoFTP
	mov	eax, 1
	jmp	SHORT $LN1@xmlNanoFTP
$LN7@xmlNanoFTP:

; 1307 :     if (res == 5) {

	cmp	DWORD PTR _res$[ebp], 5
	jne	SHORT $LN8@xmlNanoFTP

; 1308 : 	return(0);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN8@xmlNanoFTP:

; 1309 :     }
; 1310 :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 1311 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@xmlNanoFTP:
	DD	1
	DD	$LN12@xmlNanoFTP
$LN12@xmlNanoFTP:
	DD	-408					; fffffe68H
	DD	400					; 00000190H
	DD	$LN11@xmlNanoFTP
$LN11@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPCwd ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPCheckResponse
_TEXT	SEGMENT
tv88 = -296						; size = 4
___i$1 = -292						; size = 4
_tv$ = -284						; size = 8
_rfd$ = -268						; size = 260
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPCheckResponse PROC				; COMDAT

; 730  : xmlNanoFTPCheckResponse(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 731  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 732  :     fd_set rfd;
; 733  :     struct timeval tv;
; 734  : 
; 735  :     if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN11@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	jne	SHORT $LN10@xmlNanoFTP
$LN11@xmlNanoFTP:
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN10@xmlNanoFTP:

; 736  :     tv.tv_sec = 0;

	mov	DWORD PTR _tv$[ebp], 0

; 737  :     tv.tv_usec = 0;

	mov	DWORD PTR _tv$[ebp+4], 0

; 738  :     FD_ZERO(&rfd);

	mov	DWORD PTR _rfd$[ebp], 0
$LN4@xmlNanoFTP:

; 739  :     FD_SET(ctxt->controlFd, &rfd);

	mov	DWORD PTR ___i$1[ebp], 0
	jmp	SHORT $LN7@xmlNanoFTP
$LN5@xmlNanoFTP:
	mov	edx, DWORD PTR ___i$1[ebp]
	add	edx, 1
	mov	DWORD PTR ___i$1[ebp], edx
$LN7@xmlNanoFTP:
	mov	eax, DWORD PTR ___i$1[ebp]
	cmp	eax, DWORD PTR _rfd$[ebp]
	jae	SHORT $LN6@xmlNanoFTP
	mov	ecx, DWORD PTR ___i$1[ebp]
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _rfd$[ebp+ecx*4+4]
	cmp	eax, DWORD PTR [edx+44]
	jne	SHORT $LN12@xmlNanoFTP
	jmp	SHORT $LN6@xmlNanoFTP
$LN12@xmlNanoFTP:
	jmp	SHORT $LN5@xmlNanoFTP
$LN6@xmlNanoFTP:
	mov	ecx, DWORD PTR ___i$1[ebp]
	cmp	ecx, DWORD PTR _rfd$[ebp]
	jne	SHORT $LN2@xmlNanoFTP
	cmp	DWORD PTR _rfd$[ebp], 64		; 00000040H
	jae	SHORT $LN2@xmlNanoFTP
	mov	edx, DWORD PTR ___i$1[ebp]
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	mov	DWORD PTR _rfd$[ebp+edx*4+4], ecx
	mov	edx, DWORD PTR _rfd$[ebp]
	add	edx, 1
	mov	DWORD PTR _rfd$[ebp], edx
$LN2@xmlNanoFTP:
	xor	eax, eax
	jne	SHORT $LN4@xmlNanoFTP

; 740  :     switch(select(ctxt->controlFd + 1, &rfd, NULL, NULL, &tv)) {

	mov	esi, esp
	lea	ecx, DWORD PTR _tv$[ebp]
	push	ecx
	push	0
	push	0
	lea	edx, DWORD PTR _rfd$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	add	ecx, 1
	push	ecx
	call	DWORD PTR __imp__select@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv88[ebp], eax
	cmp	DWORD PTR tv88[ebp], -1
	je	SHORT $LN16@xmlNanoFTP
	cmp	DWORD PTR tv88[ebp], 0
	je	SHORT $LN15@xmlNanoFTP
	jmp	SHORT $LN8@xmlNanoFTP
$LN15@xmlNanoFTP:

; 741  : 	case 0:
; 742  : 	    return(0);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN16@xmlNanoFTP:

; 743  : 	case -1:
; 744  : 	    __xmlIOErr(XML_FROM_FTP, 0, "select");

	push	OFFSET ??_C@_06LGNCCACI@select@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 745  : 	    return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN8@xmlNanoFTP:

; 746  : 
; 747  :     }
; 748  : 
; 749  :     return(xmlNanoFTPReadResponse(ctx));

	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlNanoFTPReadResponse
	add	esp, 4
$LN1@xmlNanoFTP:

; 750  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@xmlNanoFTP:
	DD	2
	DD	$LN20@xmlNanoFTP
$LN20@xmlNanoFTP:
	DD	-268					; fffffef4H
	DD	260					; 00000104H
	DD	$LN18@xmlNanoFTP
	DD	-284					; fffffee4H
	DD	8
	DD	$LN19@xmlNanoFTP
$LN19@xmlNanoFTP:
	DB	116					; 00000074H
	DB	118					; 00000076H
	DB	0
$LN18@xmlNanoFTP:
	DB	114					; 00000072H
	DB	102					; 00000066H
	DB	100					; 00000064H
	DB	0
_xmlNanoFTPCheckResponse ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPGetResponse
_TEXT	SEGMENT
_res$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPGetResponse PROC				; COMDAT

; 713  : xmlNanoFTPGetResponse(void *ctx) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 714  :     int res;
; 715  : 
; 716  :     res = xmlNanoFTPReadResponse(ctx);

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlNanoFTPReadResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 717  : 
; 718  :     return(res);

	mov	eax, DWORD PTR _res$[ebp]

; 719  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPGetResponse ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPUpdateURL
_TEXT	SEGMENT
tv91 = -48						; size = 4
tv209 = -44						; size = 4
tv204 = -38						; size = 1
tv197 = -37						; size = 1
tv191 = -36						; size = 4
tv193 = -32						; size = 4
tv84 = -28						; size = 4
tv185 = -24						; size = 4
tv180 = -18						; size = 1
tv173 = -17						; size = 1
tv167 = -16						; size = 4
tv169 = -12						; size = 4
_uri$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_URL$ = 12						; size = 4
_xmlNanoFTPUpdateURL PROC				; COMDAT

; 362  : xmlNanoFTPUpdateURL(void *ctx, const char *URL) {

	push	ebp
	mov	ebp, esp
	sub	esp, 48					; 00000030H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 363  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 364  :     xmlURIPtr uri;
; 365  : 
; 366  :     if (URL == NULL)

	cmp	DWORD PTR _URL$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP

; 367  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 368  :     if (ctxt == NULL)

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN3@xmlNanoFTP

; 369  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN3@xmlNanoFTP:

; 370  :     if (ctxt->protocol == NULL)

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN4@xmlNanoFTP

; 371  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 372  :     if (ctxt->hostname == NULL)

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN5@xmlNanoFTP

; 373  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 374  : 
; 375  :     uri = xmlParseURIRaw(URL, 1);

	push	1
	mov	eax, DWORD PTR _URL$[ebp]
	push	eax
	call	_xmlParseURIRaw
	add	esp, 8
	mov	DWORD PTR _uri$[ebp], eax

; 376  :     if (uri == NULL)

	cmp	DWORD PTR _uri$[ebp], 0
	jne	SHORT $LN6@xmlNanoFTP

; 377  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 378  : 
; 379  :     if ((uri->scheme == NULL) || (uri->server == NULL)) {

	mov	ecx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN8@xmlNanoFTP
	mov	edx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [edx+12], 0
	jne	SHORT $LN7@xmlNanoFTP
$LN8@xmlNanoFTP:

; 380  : 	xmlFreeURI(uri);

	mov	eax, DWORD PTR _uri$[ebp]
	push	eax
	call	_xmlFreeURI
	add	esp, 4

; 381  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN7@xmlNanoFTP:

; 382  :     }
; 383  :     if ((strcmp(ctxt->protocol, uri->scheme)) ||
; 384  : 	(strcmp(ctxt->hostname, uri->server)) ||

	mov	ecx, DWORD PTR _uri$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR tv169[ebp], edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv167[ebp], ecx
$LL16@xmlNanoFTP:
	mov	edx, DWORD PTR tv167[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv173[ebp], al
	mov	ecx, DWORD PTR tv169[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN17@xmlNanoFTP
	cmp	BYTE PTR tv173[ebp], 0
	je	SHORT $LN18@xmlNanoFTP
	mov	edx, DWORD PTR tv167[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv180[ebp], al
	mov	ecx, DWORD PTR tv169[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN17@xmlNanoFTP
	add	DWORD PTR tv167[ebp], 2
	add	DWORD PTR tv169[ebp], 2
	cmp	BYTE PTR tv180[ebp], 0
	jne	SHORT $LL16@xmlNanoFTP
$LN18@xmlNanoFTP:
	mov	DWORD PTR tv185[ebp], 0
	jmp	SHORT $LN19@xmlNanoFTP
$LN17@xmlNanoFTP:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv185[ebp], edx
$LN19@xmlNanoFTP:
	mov	eax, DWORD PTR tv185[ebp]
	mov	DWORD PTR tv84[ebp], eax
	cmp	DWORD PTR tv84[ebp], 0
	jne	SHORT $LN10@xmlNanoFTP
	mov	ecx, DWORD PTR _uri$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR tv193[ebp], edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv191[ebp], ecx
$LL20@xmlNanoFTP:
	mov	edx, DWORD PTR tv191[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv197[ebp], al
	mov	ecx, DWORD PTR tv193[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN21@xmlNanoFTP
	cmp	BYTE PTR tv197[ebp], 0
	je	SHORT $LN22@xmlNanoFTP
	mov	edx, DWORD PTR tv191[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv204[ebp], al
	mov	ecx, DWORD PTR tv193[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN21@xmlNanoFTP
	add	DWORD PTR tv191[ebp], 2
	add	DWORD PTR tv193[ebp], 2
	cmp	BYTE PTR tv204[ebp], 0
	jne	SHORT $LL20@xmlNanoFTP
$LN22@xmlNanoFTP:
	mov	DWORD PTR tv209[ebp], 0
	jmp	SHORT $LN23@xmlNanoFTP
$LN21@xmlNanoFTP:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv209[ebp], edx
$LN23@xmlNanoFTP:
	mov	eax, DWORD PTR tv209[ebp]
	mov	DWORD PTR tv91[ebp], eax
	cmp	DWORD PTR tv91[ebp], 0
	jne	SHORT $LN10@xmlNanoFTP
	mov	ecx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN9@xmlNanoFTP
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _uri$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	cmp	ecx, DWORD PTR [eax+20]
	je	SHORT $LN9@xmlNanoFTP
$LN10@xmlNanoFTP:

; 385  : 	((uri->port != 0) && (ctxt->port != uri->port))) {
; 386  : 	xmlFreeURI(uri);

	mov	edx, DWORD PTR _uri$[ebp]
	push	edx
	call	_xmlFreeURI
	add	esp, 4

; 387  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN9@xmlNanoFTP:

; 388  :     }
; 389  : 
; 390  :     if (uri->port != 0)

	mov	eax, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN11@xmlNanoFTP

; 391  : 	ctxt->port = uri->port;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _uri$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR [ecx+8], eax
$LN11@xmlNanoFTP:

; 392  : 
; 393  :     if (ctxt->path != NULL) {

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN12@xmlNanoFTP

; 394  : 	xmlFree(ctxt->path);

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 395  : 	ctxt->path = NULL;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+12], 0
$LN12@xmlNanoFTP:

; 396  :     }
; 397  : 
; 398  :     if (uri->path == NULL)

	mov	edx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [edx+24], 0
	jne	SHORT $LN13@xmlNanoFTP

; 399  :         ctxt->path = xmlMemStrdup("/");

	mov	esi, esp
	push	OFFSET ??_C@_01KMDKNFGN@?1@
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+12], eax
	jmp	SHORT $LN14@xmlNanoFTP
$LN13@xmlNanoFTP:

; 400  :     else
; 401  : 	ctxt->path = xmlMemStrdup(uri->path);

	mov	esi, esp
	mov	edx, DWORD PTR _uri$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+12], eax
$LN14@xmlNanoFTP:

; 402  : 
; 403  :     xmlFreeURI(uri);

	mov	edx, DWORD PTR _uri$[ebp]
	push	edx
	call	_xmlFreeURI
	add	esp, 4

; 404  : 
; 405  :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 406  : }

	pop	edi
	pop	esi
	add	esp, 48					; 00000030H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPUpdateURL ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPProxy
_TEXT	SEGMENT
_host$ = 8						; size = 4
_port$ = 12						; size = 4
_user$ = 16						; size = 4
_passwd$ = 20						; size = 4
_type$ = 24						; size = 4
_xmlNanoFTPProxy PROC					; COMDAT

; 260  : 	        const char *passwd, int type) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 261  :     if (proxy != NULL) {

	cmp	DWORD PTR _proxy, 0
	je	SHORT $LN2@xmlNanoFTP

; 262  : 	xmlFree(proxy);

	mov	esi, esp
	mov	eax, DWORD PTR _proxy
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 263  : 	proxy = NULL;

	mov	DWORD PTR _proxy, 0
$LN2@xmlNanoFTP:

; 264  :     }
; 265  :     if (proxyUser != NULL) {

	cmp	DWORD PTR _proxyUser, 0
	je	SHORT $LN3@xmlNanoFTP

; 266  : 	xmlFree(proxyUser);

	mov	esi, esp
	mov	ecx, DWORD PTR _proxyUser
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 267  : 	proxyUser = NULL;

	mov	DWORD PTR _proxyUser, 0
$LN3@xmlNanoFTP:

; 268  :     }
; 269  :     if (proxyPasswd != NULL) {

	cmp	DWORD PTR _proxyPasswd, 0
	je	SHORT $LN4@xmlNanoFTP

; 270  : 	xmlFree(proxyPasswd);

	mov	esi, esp
	mov	edx, DWORD PTR _proxyPasswd
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 271  : 	proxyPasswd = NULL;

	mov	DWORD PTR _proxyPasswd, 0
$LN4@xmlNanoFTP:

; 272  :     }
; 273  :     if (host)

	cmp	DWORD PTR _host$[ebp], 0
	je	SHORT $LN5@xmlNanoFTP

; 274  : 	proxy = xmlMemStrdup(host);

	mov	esi, esp
	mov	eax, DWORD PTR _host$[ebp]
	push	eax
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _proxy, eax
$LN5@xmlNanoFTP:

; 275  :     if (user)

	cmp	DWORD PTR _user$[ebp], 0
	je	SHORT $LN6@xmlNanoFTP

; 276  : 	proxyUser = xmlMemStrdup(user);

	mov	esi, esp
	mov	ecx, DWORD PTR _user$[ebp]
	push	ecx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _proxyUser, eax
$LN6@xmlNanoFTP:

; 277  :     if (passwd)

	cmp	DWORD PTR _passwd$[ebp], 0
	je	SHORT $LN7@xmlNanoFTP

; 278  : 	proxyPasswd = xmlMemStrdup(passwd);

	mov	esi, esp
	mov	edx, DWORD PTR _passwd$[ebp]
	push	edx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _proxyPasswd, eax
$LN7@xmlNanoFTP:

; 279  :     proxyPort = port;

	mov	eax, DWORD PTR _port$[ebp]
	mov	DWORD PTR _proxyPort, eax

; 280  :     proxyType = type;

	mov	ecx, DWORD PTR _type$[ebp]
	mov	DWORD PTR _proxyType, ecx

; 281  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlNanoFTPProxy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPScanProxy
_TEXT	SEGMENT
tv77 = -24						; size = 4
tv150 = -20						; size = 4
tv145 = -14						; size = 1
tv138 = -13						; size = 1
tv133 = -12						; size = 4
tv135 = -8						; size = 4
_uri$ = -4						; size = 4
_URL$ = 8						; size = 4
_xmlNanoFTPScanProxy PROC				; COMDAT

; 419  : xmlNanoFTPScanProxy(const char *URL) {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 420  :     xmlURIPtr uri;
; 421  : 
; 422  :     if (proxy != NULL) {

	cmp	DWORD PTR _proxy, 0
	je	SHORT $LN2@xmlNanoFTP

; 423  :         xmlFree(proxy);

	mov	esi, esp
	mov	eax, DWORD PTR _proxy
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 424  : 	proxy = NULL;

	mov	DWORD PTR _proxy, 0
$LN2@xmlNanoFTP:

; 425  :     }
; 426  :     proxyPort = 0;

	mov	DWORD PTR _proxyPort, 0

; 427  : 
; 428  : #ifdef DEBUG_FTP
; 429  :     if (URL == NULL)
; 430  : 	xmlGenericError(xmlGenericErrorContext,
; 431  : 		"Removing FTP proxy info\n");
; 432  :     else
; 433  : 	xmlGenericError(xmlGenericErrorContext,
; 434  : 		"Using FTP proxy %s\n", URL);
; 435  : #endif
; 436  :     if (URL == NULL) return;

	cmp	DWORD PTR _URL$[ebp], 0
	jne	SHORT $LN3@xmlNanoFTP
	jmp	$LN1@xmlNanoFTP
$LN3@xmlNanoFTP:

; 437  : 
; 438  :     uri = xmlParseURIRaw(URL, 1);

	push	1
	mov	ecx, DWORD PTR _URL$[ebp]
	push	ecx
	call	_xmlParseURIRaw
	add	esp, 8
	mov	DWORD PTR _uri$[ebp], eax

; 439  :     if ((uri == NULL) || (uri->scheme == NULL) ||
; 440  : 	(strcmp(uri->scheme, "ftp")) || (uri->server == NULL)) {

	cmp	DWORD PTR _uri$[ebp], 0
	je	SHORT $LN5@xmlNanoFTP
	mov	edx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN5@xmlNanoFTP
	mov	DWORD PTR tv135[ebp], OFFSET ??_C@_03LMDBDBEG@ftp@
	mov	eax, DWORD PTR _uri$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv133[ebp], ecx
$LL9@xmlNanoFTP:
	mov	edx, DWORD PTR tv133[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv138[ebp], al
	mov	ecx, DWORD PTR tv135[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN10@xmlNanoFTP
	cmp	BYTE PTR tv138[ebp], 0
	je	SHORT $LN11@xmlNanoFTP
	mov	edx, DWORD PTR tv133[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv145[ebp], al
	mov	ecx, DWORD PTR tv135[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN10@xmlNanoFTP
	add	DWORD PTR tv133[ebp], 2
	add	DWORD PTR tv135[ebp], 2
	cmp	BYTE PTR tv145[ebp], 0
	jne	SHORT $LL9@xmlNanoFTP
$LN11@xmlNanoFTP:
	mov	DWORD PTR tv150[ebp], 0
	jmp	SHORT $LN12@xmlNanoFTP
$LN10@xmlNanoFTP:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv150[ebp], edx
$LN12@xmlNanoFTP:
	mov	eax, DWORD PTR tv150[ebp]
	mov	DWORD PTR tv77[ebp], eax
	cmp	DWORD PTR tv77[ebp], 0
	jne	SHORT $LN5@xmlNanoFTP
	mov	ecx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	jne	SHORT $LN4@xmlNanoFTP
$LN5@xmlNanoFTP:

; 441  : 	__xmlIOErr(XML_FROM_FTP, XML_FTP_URL_SYNTAX, "Syntax Error\n");

	push	OFFSET ??_C@_0O@FGOLBKPK@Syntax?5Error?6@
	push	2003					; 000007d3H
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 442  : 	if (uri != NULL)

	cmp	DWORD PTR _uri$[ebp], 0
	je	SHORT $LN6@xmlNanoFTP

; 443  : 	    xmlFreeURI(uri);

	mov	edx, DWORD PTR _uri$[ebp]
	push	edx
	call	_xmlFreeURI
	add	esp, 4
$LN6@xmlNanoFTP:

; 444  : 	return;

	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 445  :     }
; 446  : 
; 447  :     proxy = xmlMemStrdup(uri->server);

	mov	esi, esp
	mov	eax, DWORD PTR _uri$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _proxy, eax

; 448  :     if (uri->port != 0)

	mov	edx, DWORD PTR _uri$[ebp]
	cmp	DWORD PTR [edx+20], 0
	je	SHORT $LN7@xmlNanoFTP

; 449  : 	proxyPort = uri->port;

	mov	eax, DWORD PTR _uri$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _proxyPort, ecx
$LN7@xmlNanoFTP:

; 450  : 
; 451  :     xmlFreeURI(uri);

	mov	edx, DWORD PTR _uri$[ebp]
	push	edx
	call	_xmlFreeURI
	add	esp, 4
$LN1@xmlNanoFTP:

; 452  : }

	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPScanProxy ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPQuit
_TEXT	SEGMENT
tv72 = -236						; size = 4
tv95 = -229						; size = 1
tv92 = -228						; size = 4
tv89 = -224						; size = 4
_res$ = -220						; size = 4
_len$ = -216						; size = 4
_buf$ = -208						; size = 200
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPQuit PROC					; COMDAT

; 819  : xmlNanoFTPQuit(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 820  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 821  :     char buf[200];
; 822  :     int len, res;
; 823  : 
; 824  :     if ((ctxt == NULL) || (ctxt->controlFd == INVALID_SOCKET)) return(-1);

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN3@xmlNanoFTP
	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+44], -1
	jne	SHORT $LN2@xmlNanoFTP
$LN3@xmlNanoFTP:
	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 825  : 
; 826  :     snprintf(buf, sizeof(buf), "QUIT\r\n");

	push	OFFSET ??_C@_06FIMJICNC@QUIT?$AN?6@
	push	200					; 000000c8H
	lea	edx, DWORD PTR _buf$[ebp]
	push	edx
	call	_snprintf
	add	esp, 12					; 0000000cH

; 827  :     len = strlen(buf);

	lea	eax, DWORD PTR _buf$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	mov	ecx, DWORD PTR tv89[ebp]
	add	ecx, 1
	mov	DWORD PTR tv92[ebp], ecx
$LL6@xmlNanoFTP:
	mov	edx, DWORD PTR tv89[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv95[ebp], al
	add	DWORD PTR tv89[ebp], 1
	cmp	BYTE PTR tv95[ebp], 0
	jne	SHORT $LL6@xmlNanoFTP
	mov	ecx, DWORD PTR tv89[ebp]
	sub	ecx, DWORD PTR tv92[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	mov	DWORD PTR _len$[ebp], edx

; 828  : #ifdef DEBUG_FTP
; 829  :     xmlGenericError(xmlGenericErrorContext, "%s", buf); /* Just to be consistent, even though we know it can't have a % in it */
; 830  : #endif
; 831  :     res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 832  :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN4@xmlNanoFTP

; 833  : 	__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 834  : 	return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 835  :     }
; 836  :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 837  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@xmlNanoFTP:
	DD	1
	DD	$LN8@xmlNanoFTP
$LN8@xmlNanoFTP:
	DD	-208					; ffffff30H
	DD	200					; 000000c8H
	DD	$LN7@xmlNanoFTP
$LN7@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPQuit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPClose
_TEXT	SEGMENT
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPClose PROC					; COMDAT

; 2031 : xmlNanoFTPClose(void *ctx) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 2032 :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 2033 : 
; 2034 :     if (ctxt == NULL)

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP

; 2035 : 	return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 2036 : 
; 2037 :     if (ctxt->dataFd != INVALID_SOCKET) {

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+48], -1
	je	SHORT $LN3@xmlNanoFTP

; 2038 : 	closesocket(ctxt->dataFd);

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+48]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2039 : 	ctxt->dataFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+48], -1
$LN3@xmlNanoFTP:

; 2040 :     }
; 2041 :     if (ctxt->controlFd != INVALID_SOCKET) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+44], -1
	je	SHORT $LN4@xmlNanoFTP

; 2042 : 	xmlNanoFTPQuit(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPQuit
	add	esp, 4

; 2043 : 	closesocket(ctxt->controlFd);

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2044 : 	ctxt->controlFd = INVALID_SOCKET;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1
$LN4@xmlNanoFTP:

; 2045 :     }
; 2046 :     xmlNanoFTPFreeCtxt(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPFreeCtxt
	add	esp, 4

; 2047 :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 2048 : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPClose ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPConnect
_TEXT	SEGMENT
tv372 = -528						; size = 4
tv356 = -524						; size = 4
tv316 = -520						; size = 4
tv620 = -513						; size = 1
tv617 = -512						; size = 4
tv614 = -508						; size = 4
tv283 = -504						; size = 4
tv585 = -497						; size = 1
tv582 = -496						; size = 4
tv579 = -492						; size = 4
tv242 = -488						; size = 4
tv540 = -481						; size = 1
tv537 = -480						; size = 4
tv534 = -476						; size = 4
tv232 = -472						; size = 4
tv206 = -468						; size = 4
tv496 = -461						; size = 1
tv493 = -460						; size = 4
tv490 = -456						; size = 4
tv192 = -452						; size = 4
tv176 = -448						; size = 4
tv464 = -441						; size = 1
tv461 = -440						; size = 4
tv458 = -436						; size = 4
_buf$1 = -428						; size = 400
_len$2 = -24						; size = 4
_addrlen$ = -20						; size = 4
_res$ = -16						; size = 4
_port$ = -12						; size = 4
_hp$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPConnect PROC					; COMDAT

; 849  : xmlNanoFTPConnect(void *ctx) {

	push	ebp
	mov	ebp, esp
	sub	esp, 528				; 00000210H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-528]
	mov	ecx, 132				; 00000084H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 850  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 851  :     struct hostent *hp;
; 852  :     int port;
; 853  :     int res;
; 854  :     int addrlen = sizeof (struct sockaddr_in);

	mov	DWORD PTR _addrlen$[ebp], 16		; 00000010H

; 855  : 
; 856  :     if (ctxt == NULL)

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN10@xmlNanoFTP

; 857  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN10@xmlNanoFTP:

; 858  :     if (ctxt->hostname == NULL)

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	jne	SHORT $LN11@xmlNanoFTP

; 859  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN11@xmlNanoFTP:

; 860  : 
; 861  :     /*
; 862  :      * do the blocking DNS query.
; 863  :      */
; 864  :     if (proxy) {

	cmp	DWORD PTR _proxy, 0
	je	SHORT $LN12@xmlNanoFTP

; 865  :         port = proxyPort;

	mov	edx, DWORD PTR _proxyPort
	mov	DWORD PTR _port$[ebp], edx

; 866  :     } else {

	jmp	SHORT $LN13@xmlNanoFTP
$LN12@xmlNanoFTP:

; 867  : 	port = ctxt->port;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _port$[ebp], ecx
$LN13@xmlNanoFTP:

; 868  :     }
; 869  :     if (port == 0)

	cmp	DWORD PTR _port$[ebp], 0
	jne	SHORT $LN14@xmlNanoFTP

; 870  : 	port = 21;

	mov	DWORD PTR _port$[ebp], 21		; 00000015H
$LN14@xmlNanoFTP:

; 871  : 
; 872  :     memset (&ctxt->ftpAddr, 0, sizeof(ctxt->ftpAddr));

	xor	edx, edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR [eax], edx
	mov	DWORD PTR [eax+4], edx
	mov	DWORD PTR [eax+8], edx
	mov	DWORD PTR [eax+12], edx

; 873  : 
; 874  : #ifdef SUPPORT_IP6
; 875  :     if (have_ipv6 ()) {
; 876  : 	struct addrinfo hints, *tmp, *result;
; 877  : 
; 878  : 	result = NULL;
; 879  : 	memset (&hints, 0, sizeof(hints));
; 880  : 	hints.ai_socktype = SOCK_STREAM;
; 881  : 
; 882  : 	if (proxy) {
; 883  : 	    if (getaddrinfo (proxy, NULL, &hints, &result) != 0) {
; 884  : 		__xmlIOErr(XML_FROM_FTP, 0, "getaddrinfo failed");
; 885  : 		return (-1);
; 886  : 	    }
; 887  : 	}
; 888  : 	else
; 889  : 	    if (getaddrinfo (ctxt->hostname, NULL, &hints, &result) != 0) {
; 890  : 		__xmlIOErr(XML_FROM_FTP, 0, "getaddrinfo failed");
; 891  : 		return (-1);
; 892  : 	    }
; 893  : 
; 894  : 	for (tmp = result; tmp; tmp = tmp->ai_next)
; 895  : 	    if (tmp->ai_family == AF_INET || tmp->ai_family == AF_INET6)
; 896  : 		break;
; 897  : 
; 898  : 	if (!tmp) {
; 899  : 	    if (result)
; 900  : 		freeaddrinfo (result);
; 901  : 	    __xmlIOErr(XML_FROM_FTP, 0, "getaddrinfo failed");
; 902  : 	    return (-1);
; 903  : 	}
; 904  : 	if ((size_t)tmp->ai_addrlen > sizeof(ctxt->ftpAddr)) {
; 905  : 	    if (result)
; 906  : 		freeaddrinfo (result);
; 907  : 	    __xmlIOErr(XML_FROM_FTP, 0, "gethostbyname address mismatch");
; 908  : 	    return (-1);
; 909  : 	}
; 910  : 	if (tmp->ai_family == AF_INET6) {
; 911  : 	    memcpy (&ctxt->ftpAddr, tmp->ai_addr, tmp->ai_addrlen);
; 912  : 	    ((struct sockaddr_in6 *) &ctxt->ftpAddr)->sin6_port = htons (port);
; 913  : 	    ctxt->controlFd = socket (AF_INET6, SOCK_STREAM, 0);
; 914  : 	}
; 915  : 	else {
; 916  : 	    memcpy (&ctxt->ftpAddr, tmp->ai_addr, tmp->ai_addrlen);
; 917  : 	    ((struct sockaddr_in *) &ctxt->ftpAddr)->sin_port = htons (port);
; 918  : 	    ctxt->controlFd = socket (AF_INET, SOCK_STREAM, 0);
; 919  : 	}
; 920  : 	addrlen = tmp->ai_addrlen;
; 921  : 	freeaddrinfo (result);
; 922  :     }
; 923  :     else
; 924  : #endif
; 925  :     {
; 926  : 	if (proxy)

	cmp	DWORD PTR _proxy, 0
	je	SHORT $LN15@xmlNanoFTP

; 927  : 	    hp = gethostbyname (GETHOSTBYNAME_ARG_CAST proxy);

	mov	esi, esp
	mov	ecx, DWORD PTR _proxy
	push	ecx
	call	DWORD PTR __imp__gethostbyname@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hp$[ebp], eax
	jmp	SHORT $LN16@xmlNanoFTP
$LN15@xmlNanoFTP:

; 928  : 	else
; 929  : 	    hp = gethostbyname (GETHOSTBYNAME_ARG_CAST ctxt->hostname);

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR __imp__gethostbyname@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hp$[ebp], eax
$LN16@xmlNanoFTP:

; 930  : 	if (hp == NULL) {

	cmp	DWORD PTR _hp$[ebp], 0
	jne	SHORT $LN17@xmlNanoFTP

; 931  : 	    __xmlIOErr(XML_FROM_FTP, 0, "gethostbyname failed");

	push	OFFSET ??_C@_0BF@FEIPFPME@gethostbyname?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 932  : 	    return (-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN17@xmlNanoFTP:

; 933  : 	}
; 934  : 	if ((unsigned int) hp->h_length >

	mov	ecx, DWORD PTR _hp$[ebp]
	movsx	edx, WORD PTR [ecx+10]
	cmp	edx, 4
	jbe	SHORT $LN18@xmlNanoFTP

; 935  : 	    sizeof(((struct sockaddr_in *)&ctxt->ftpAddr)->sin_addr)) {
; 936  : 	    __xmlIOErr(XML_FROM_FTP, 0, "gethostbyname address mismatch");

	push	OFFSET ??_C@_0BP@HGBHAFPD@gethostbyname?5address?5mismatch@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 937  : 	    return (-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN18@xmlNanoFTP:

; 938  : 	}
; 939  : 
; 940  : 	/*
; 941  : 	 * Prepare the socket
; 942  : 	 */
; 943  : 	((struct sockaddr_in *)&ctxt->ftpAddr)->sin_family = AF_INET;

	mov	eax, 2
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	WORD PTR [ecx+24], ax

; 944  : 	memcpy (&((struct sockaddr_in *)&ctxt->ftpAddr)->sin_addr,

	mov	edx, DWORD PTR _hp$[ebp]
	movsx	eax, WORD PTR [edx+10]
	push	eax
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _hp$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+edx]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	add	eax, 28					; 0000001cH
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH

; 945  : 		hp->h_addr_list[0], hp->h_length);
; 946  : 	((struct sockaddr_in *)&ctxt->ftpAddr)->sin_port =

	mov	esi, esp
	movzx	ecx, WORD PTR _port$[ebp]
	push	ecx
	call	DWORD PTR __imp__htons@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	WORD PTR [edx+26], ax

; 947  :              (unsigned short)htons ((unsigned short)port);
; 948  : 	ctxt->controlFd = socket (AF_INET, SOCK_STREAM, 0);

	mov	esi, esp
	push	0
	push	1
	push	2
	call	DWORD PTR __imp__socket@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], eax

; 949  : 	addrlen = sizeof (struct sockaddr_in);

	mov	DWORD PTR _addrlen$[ebp], 16		; 00000010H

; 950  :     }
; 951  : 
; 952  :     if (ctxt->controlFd == INVALID_SOCKET) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+44], -1
	jne	SHORT $LN19@xmlNanoFTP

; 953  : 	__xmlIOErr(XML_FROM_FTP, 0, "socket failed");

	push	OFFSET ??_C@_0O@FPJGNADN@socket?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 954  :         return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN19@xmlNanoFTP:

; 955  :     }
; 956  : 
; 957  :     /*
; 958  :      * Do the connect.
; 959  :      */
; 960  :     if (connect(ctxt->controlFd, (struct sockaddr *) &ctxt->ftpAddr,
; 961  : 	    addrlen) < 0) {

	mov	esi, esp
	mov	eax, DWORD PTR _addrlen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	add	ecx, 24					; 00000018H
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__connect@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jge	SHORT $LN20@xmlNanoFTP

; 962  : 	__xmlIOErr(XML_FROM_FTP, 0, "Failed to create a connection");

	push	OFFSET ??_C@_0BO@NKBHOJOC@Failed?5to?5create?5a?5connection@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 963  :         closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 964  :         ctxt->controlFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 965  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN20@xmlNanoFTP:

; 966  :     }
; 967  : 
; 968  :     /*
; 969  :      * Wait for the HELLO from the server.
; 970  :      */
; 971  :     res = xmlNanoFTPGetResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 972  :     if (res != 2) {

	cmp	DWORD PTR _res$[ebp], 2
	je	SHORT $LN21@xmlNanoFTP

; 973  :         closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 974  :         ctxt->controlFd = INVALID_SOCKET;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 975  : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN21@xmlNanoFTP:

; 976  :     }
; 977  : 
; 978  :     /*
; 979  :      * State diagram for the login operation on the FTP server
; 980  :      *
; 981  :      * Reference: RFC 959
; 982  :      *
; 983  :      *                       1
; 984  :      * +---+   USER    +---+------------->+---+
; 985  :      * | B |---------->| W | 2       ---->| E |
; 986  :      * +---+           +---+------  |  -->+---+
; 987  :      *                  | |       | | |
; 988  :      *                3 | | 4,5   | | |
; 989  :      *    --------------   -----  | | |
; 990  :      *   |                      | | | |
; 991  :      *   |                      | | | |
; 992  :      *   |                 ---------  |
; 993  :      *   |               1|     | |   |
; 994  :      *   V                |     | |   |
; 995  :      * +---+   PASS    +---+ 2  |  ------>+---+
; 996  :      * |   |---------->| W |------------->| S |
; 997  :      * +---+           +---+   ---------->+---+
; 998  :      *                  | |   | |     |
; 999  :      *                3 | |4,5| |     |
; 1000 :      *    --------------   --------   |
; 1001 :      *   |                    | |  |  |
; 1002 :      *   |                    | |  |  |
; 1003 :      *   |                 -----------
; 1004 :      *   |             1,3|   | |  |
; 1005 :      *   V                |  2| |  |
; 1006 :      * +---+   ACCT    +---+--  |   ----->+---+
; 1007 :      * |   |---------->| W | 4,5 -------->| F |
; 1008 :      * +---+           +---+------------->+---+
; 1009 :      *
; 1010 :      * Of course in case of using a proxy this get really nasty and is not
; 1011 :      * standardized at all :-(
; 1012 :      */
; 1013 :     if (proxy) {

	cmp	DWORD PTR _proxy, 0
	je	$LN22@xmlNanoFTP

; 1014 :         int len;
; 1015 : 	char buf[400];
; 1016 : 
; 1017 :         if (proxyUser != NULL) {

	cmp	DWORD PTR _proxyUser, 0
	je	$LN23@xmlNanoFTP

; 1018 : 	    /*
; 1019 : 	     * We need proxy auth
; 1020 : 	     */
; 1021 : 	    snprintf(buf, sizeof(buf), "USER %s\r\n", proxyUser);

	mov	ecx, DWORD PTR _proxyUser
	push	ecx
	push	OFFSET ??_C@_09FIJAECMI@USER?5?$CFs?$AN?6@
	push	400					; 00000190H
	lea	edx, DWORD PTR _buf$1[ebp]
	push	edx
	call	_snprintf
	add	esp, 16					; 00000010H

; 1022 :             buf[sizeof(buf) - 1] = 0;

	mov	eax, 1
	imul	ecx, eax, 399
	mov	BYTE PTR _buf$1[ebp+ecx], 0

; 1023 :             len = strlen(buf);

	lea	edx, DWORD PTR _buf$1[ebp]
	mov	DWORD PTR tv458[ebp], edx
	mov	eax, DWORD PTR tv458[ebp]
	add	eax, 1
	mov	DWORD PTR tv461[ebp], eax
$LL60@xmlNanoFTP:
	mov	ecx, DWORD PTR tv458[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv464[ebp], dl
	add	DWORD PTR tv458[ebp], 1
	cmp	BYTE PTR tv464[ebp], 0
	jne	SHORT $LL60@xmlNanoFTP
	mov	eax, DWORD PTR tv458[ebp]
	sub	eax, DWORD PTR tv461[ebp]
	mov	DWORD PTR tv176[ebp], eax
	mov	ecx, DWORD PTR tv176[ebp]
	mov	DWORD PTR _len$2[ebp], ecx

; 1024 : #ifdef DEBUG_FTP
; 1025 : 	    xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1026 : #endif
; 1027 : 	    res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	edx, DWORD PTR _len$2[ebp]
	push	edx
	lea	eax, DWORD PTR _buf$1[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1028 : 	    if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN24@xmlNanoFTP

; 1029 : 		__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1030 : 		closesocket(ctxt->controlFd);

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1031 : 		ctxt->controlFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1032 : 	        return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	$LN1@xmlNanoFTP
$LN24@xmlNanoFTP:

; 1033 : 	    }
; 1034 : 	    res = xmlNanoFTPGetResponse(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1035 : 	    switch (res) {

	mov	ecx, DWORD PTR _res$[ebp]
	mov	DWORD PTR tv192[ebp], ecx
	cmp	DWORD PTR tv192[ebp], 1
	je	$LN32@xmlNanoFTP
	cmp	DWORD PTR tv192[ebp], 2
	je	SHORT $LN25@xmlNanoFTP
	cmp	DWORD PTR tv192[ebp], 3
	je	SHORT $LN27@xmlNanoFTP
	jmp	$LN33@xmlNanoFTP
$LN25@xmlNanoFTP:

; 1036 : 		case 2:
; 1037 : 		    if (proxyPasswd == NULL)

	cmp	DWORD PTR _proxyPasswd, 0
	jne	SHORT $LN27@xmlNanoFTP

; 1038 : 			break;

	jmp	$LN23@xmlNanoFTP
$LN27@xmlNanoFTP:

; 1039 :                     /* Falls through. */
; 1040 : 		case 3:
; 1041 : 		    if (proxyPasswd != NULL)

	cmp	DWORD PTR _proxyPasswd, 0
	je	SHORT $LN28@xmlNanoFTP

; 1042 : 			snprintf(buf, sizeof(buf), "PASS %s\r\n", proxyPasswd);

	mov	edx, DWORD PTR _proxyPasswd
	push	edx
	push	OFFSET ??_C@_09CACMNAGD@PASS?5?$CFs?$AN?6@
	push	400					; 00000190H
	lea	eax, DWORD PTR _buf$1[ebp]
	push	eax
	call	_snprintf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN29@xmlNanoFTP
$LN28@xmlNanoFTP:

; 1043 : 		    else
; 1044 : 			snprintf(buf, sizeof(buf), "PASS anonymous@\r\n");

	push	OFFSET ??_C@_0BC@JNJBALOJ@PASS?5anonymous?$EA?$AN?6@
	push	400					; 00000190H
	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	call	_snprintf
	add	esp, 12					; 0000000cH
$LN29@xmlNanoFTP:

; 1045 :                     buf[sizeof(buf) - 1] = 0;

	mov	edx, 1
	imul	eax, edx, 399
	mov	BYTE PTR _buf$1[ebp+eax], 0

; 1046 :                     len = strlen(buf);

	lea	ecx, DWORD PTR _buf$1[ebp]
	mov	DWORD PTR tv490[ebp], ecx
	mov	edx, DWORD PTR tv490[ebp]
	add	edx, 1
	mov	DWORD PTR tv493[ebp], edx
$LL61@xmlNanoFTP:
	mov	eax, DWORD PTR tv490[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv496[ebp], cl
	add	DWORD PTR tv490[ebp], 1
	cmp	BYTE PTR tv496[ebp], 0
	jne	SHORT $LL61@xmlNanoFTP
	mov	edx, DWORD PTR tv490[ebp]
	sub	edx, DWORD PTR tv493[ebp]
	mov	DWORD PTR tv206[ebp], edx
	mov	eax, DWORD PTR tv206[ebp]
	mov	DWORD PTR _len$2[ebp], eax

; 1047 : #ifdef DEBUG_FTP
; 1048 : 		    xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1049 : #endif
; 1050 : 		    res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _len$2[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$1[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1051 : 		    if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN30@xmlNanoFTP

; 1052 : 			__xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1053 : 			closesocket(ctxt->controlFd);

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1054 : 			ctxt->controlFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1055 : 			return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	$LN1@xmlNanoFTP
$LN30@xmlNanoFTP:

; 1056 : 		    }
; 1057 : 		    res = xmlNanoFTPGetResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1058 : 		    if (res > 3) {

	cmp	DWORD PTR _res$[ebp], 3
	jle	SHORT $LN31@xmlNanoFTP

; 1059 : 			closesocket(ctxt->controlFd);

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1060 : 			ctxt->controlFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1061 : 			return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN31@xmlNanoFTP:

; 1062 : 		    }
; 1063 : 		    break;

	jmp	SHORT $LN23@xmlNanoFTP
$LN32@xmlNanoFTP:

; 1064 : 		case 1:
; 1065 : 		    break;

	jmp	SHORT $LN23@xmlNanoFTP
$LN33@xmlNanoFTP:

; 1066 : 		case 4:
; 1067 : 		case 5:
; 1068 : 		case -1:
; 1069 : 		default:
; 1070 : 		    closesocket(ctxt->controlFd);

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1071 : 		    ctxt->controlFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1072 : 		    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN23@xmlNanoFTP:

; 1073 : 	    }
; 1074 : 	}
; 1075 : 
; 1076 : 	/*
; 1077 : 	 * We assume we don't need more authentication to the proxy
; 1078 : 	 * and that it succeeded :-\
; 1079 : 	 */
; 1080 : 	switch (proxyType) {

	mov	eax, DWORD PTR _proxyType
	mov	DWORD PTR tv232[ebp], eax
	cmp	DWORD PTR tv232[ebp], 0
	jl	$LN50@xmlNanoFTP
	cmp	DWORD PTR tv232[ebp], 1
	jle	SHORT $LN34@xmlNanoFTP
	cmp	DWORD PTR tv232[ebp], 2
	je	$LN38@xmlNanoFTP
	jmp	$LN50@xmlNanoFTP
$LN34@xmlNanoFTP:

; 1081 : 	    case 0:
; 1082 : 		/* we will try in sequence */
; 1083 : 	    case 1:
; 1084 : 		/* Using SITE command */
; 1085 : 		snprintf(buf, sizeof(buf), "SITE %s\r\n", ctxt->hostname);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	OFFSET ??_C@_09HOAIGJJF@SITE?5?$CFs?$AN?6@
	push	400					; 00000190H
	lea	eax, DWORD PTR _buf$1[ebp]
	push	eax
	call	_snprintf
	add	esp, 16					; 00000010H

; 1086 :                 buf[sizeof(buf) - 1] = 0;

	mov	ecx, 1
	imul	edx, ecx, 399
	mov	BYTE PTR _buf$1[ebp+edx], 0

; 1087 :                 len = strlen(buf);

	lea	eax, DWORD PTR _buf$1[ebp]
	mov	DWORD PTR tv534[ebp], eax
	mov	ecx, DWORD PTR tv534[ebp]
	add	ecx, 1
	mov	DWORD PTR tv537[ebp], ecx
$LL62@xmlNanoFTP:
	mov	edx, DWORD PTR tv534[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv540[ebp], al
	add	DWORD PTR tv534[ebp], 1
	cmp	BYTE PTR tv540[ebp], 0
	jne	SHORT $LL62@xmlNanoFTP
	mov	ecx, DWORD PTR tv534[ebp]
	sub	ecx, DWORD PTR tv537[ebp]
	mov	DWORD PTR tv242[ebp], ecx
	mov	edx, DWORD PTR tv242[ebp]
	mov	DWORD PTR _len$2[ebp], edx

; 1088 : #ifdef DEBUG_FTP
; 1089 : 		xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1090 : #endif
; 1091 : 		res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _len$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1092 : 		if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN35@xmlNanoFTP

; 1093 : 		    __xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1094 : 		    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1095 : 		    ctxt->controlFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1096 : 		    return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	$LN1@xmlNanoFTP
$LN35@xmlNanoFTP:

; 1097 : 		}
; 1098 : 		res = xmlNanoFTPGetResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1099 : 		if (res == 2) {

	cmp	DWORD PTR _res$[ebp], 2
	jne	SHORT $LN36@xmlNanoFTP

; 1100 : 		    /* we assume it worked :-\ 1 is error for SITE command */
; 1101 : 		    proxyType = 1;

	mov	DWORD PTR _proxyType, 1

; 1102 : 		    break;

	jmp	$LN22@xmlNanoFTP
$LN36@xmlNanoFTP:

; 1103 : 		}
; 1104 : 		if (proxyType == 1) {

	cmp	DWORD PTR _proxyType, 1
	jne	SHORT $LN38@xmlNanoFTP

; 1105 : 		    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1106 : 		    ctxt->controlFd = INVALID_SOCKET;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1107 : 		    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN38@xmlNanoFTP:

; 1108 : 		}
; 1109 :                 /* Falls through. */
; 1110 : 	    case 2:
; 1111 : 		/* USER user@host command */
; 1112 : 		if (ctxt->user == NULL)

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	jne	SHORT $LN39@xmlNanoFTP

; 1113 : 		    snprintf(buf, sizeof(buf), "USER anonymous@%s\r\n",

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	push	OFFSET ??_C@_0BE@OGNKDKIM@USER?5anonymous?$EA?$CFs?$AN?6@
	push	400					; 00000190H
	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	call	_snprintf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN40@xmlNanoFTP
$LN39@xmlNanoFTP:

; 1114 : 			           ctxt->hostname);
; 1115 : 		else
; 1116 : 		    snprintf(buf, sizeof(buf), "USER %s@%s\r\n",

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	OFFSET ??_C@_0N@NGBGKMKP@USER?5?$CFs?$EA?$CFs?$AN?6@
	push	400					; 00000190H
	lea	eax, DWORD PTR _buf$1[ebp]
	push	eax
	call	_snprintf
	add	esp, 20					; 00000014H
$LN40@xmlNanoFTP:

; 1117 : 			           ctxt->user, ctxt->hostname);
; 1118 :                 buf[sizeof(buf) - 1] = 0;

	mov	ecx, 1
	imul	edx, ecx, 399
	mov	BYTE PTR _buf$1[ebp+edx], 0

; 1119 :                 len = strlen(buf);

	lea	eax, DWORD PTR _buf$1[ebp]
	mov	DWORD PTR tv579[ebp], eax
	mov	ecx, DWORD PTR tv579[ebp]
	add	ecx, 1
	mov	DWORD PTR tv582[ebp], ecx
$LL63@xmlNanoFTP:
	mov	edx, DWORD PTR tv579[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv585[ebp], al
	add	DWORD PTR tv579[ebp], 1
	cmp	BYTE PTR tv585[ebp], 0
	jne	SHORT $LL63@xmlNanoFTP
	mov	ecx, DWORD PTR tv579[ebp]
	sub	ecx, DWORD PTR tv582[ebp]
	mov	DWORD PTR tv283[ebp], ecx
	mov	edx, DWORD PTR tv283[ebp]
	mov	DWORD PTR _len$2[ebp], edx

; 1120 : #ifdef DEBUG_FTP
; 1121 : 		xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1122 : #endif
; 1123 : 		res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _len$2[ebp]
	push	eax
	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1124 : 		if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN41@xmlNanoFTP

; 1125 : 		    __xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1126 : 		    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1127 : 		    ctxt->controlFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1128 : 		    return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	$LN1@xmlNanoFTP
$LN41@xmlNanoFTP:

; 1129 : 		}
; 1130 : 		res = xmlNanoFTPGetResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1131 : 		if ((res == 1) || (res == 2)) {

	cmp	DWORD PTR _res$[ebp], 1
	je	SHORT $LN43@xmlNanoFTP
	cmp	DWORD PTR _res$[ebp], 2
	jne	SHORT $LN42@xmlNanoFTP
$LN43@xmlNanoFTP:

; 1132 : 		    /* we assume it worked :-\ */
; 1133 : 		    proxyType = 2;

	mov	DWORD PTR _proxyType, 2

; 1134 : 		    return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN42@xmlNanoFTP:

; 1135 : 		}
; 1136 : 		if (ctxt->passwd == NULL)

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax+20], 0
	jne	SHORT $LN44@xmlNanoFTP

; 1137 : 		    snprintf(buf, sizeof(buf), "PASS anonymous@\r\n");

	push	OFFSET ??_C@_0BC@JNJBALOJ@PASS?5anonymous?$EA?$AN?6@
	push	400					; 00000190H
	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	call	_snprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN45@xmlNanoFTP
$LN44@xmlNanoFTP:

; 1138 : 		else
; 1139 : 		    snprintf(buf, sizeof(buf), "PASS %s\r\n", ctxt->passwd);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	OFFSET ??_C@_09CACMNAGD@PASS?5?$CFs?$AN?6@
	push	400					; 00000190H
	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	call	_snprintf
	add	esp, 16					; 00000010H
$LN45@xmlNanoFTP:

; 1140 :                 buf[sizeof(buf) - 1] = 0;

	mov	edx, 1
	imul	eax, edx, 399
	mov	BYTE PTR _buf$1[ebp+eax], 0

; 1141 :                 len = strlen(buf);

	lea	ecx, DWORD PTR _buf$1[ebp]
	mov	DWORD PTR tv614[ebp], ecx
	mov	edx, DWORD PTR tv614[ebp]
	add	edx, 1
	mov	DWORD PTR tv617[ebp], edx
$LL64@xmlNanoFTP:
	mov	eax, DWORD PTR tv614[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv620[ebp], cl
	add	DWORD PTR tv614[ebp], 1
	cmp	BYTE PTR tv620[ebp], 0
	jne	SHORT $LL64@xmlNanoFTP
	mov	edx, DWORD PTR tv614[ebp]
	sub	edx, DWORD PTR tv617[ebp]
	mov	DWORD PTR tv316[ebp], edx
	mov	eax, DWORD PTR tv316[ebp]
	mov	DWORD PTR _len$2[ebp], eax

; 1142 : #ifdef DEBUG_FTP
; 1143 : 		xmlGenericError(xmlGenericErrorContext, "%s", buf);
; 1144 : #endif
; 1145 : 		res = send(ctxt->controlFd, SEND_ARG2_CAST buf, len, 0);

	mov	esi, esp
	push	0
	mov	ecx, DWORD PTR _len$2[ebp]
	push	ecx
	lea	edx, DWORD PTR _buf$1[ebp]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__send@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _res$[ebp], eax

; 1146 : 		if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN46@xmlNanoFTP

; 1147 : 		    __xmlIOErr(XML_FROM_FTP, 0, "send failed");

	push	OFFSET ??_C@_0M@EADLIJBM@send?5failed@
	push	0
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH

; 1148 : 		    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1149 : 		    ctxt->controlFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1150 : 		    return(res);

	mov	eax, DWORD PTR _res$[ebp]
	jmp	$LN1@xmlNanoFTP
$LN46@xmlNanoFTP:

; 1151 : 		}
; 1152 : 		res = xmlNanoFTPGetResponse(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1153 : 		if ((res == 1) || (res == 2)) {

	cmp	DWORD PTR _res$[ebp], 1
	je	SHORT $LN48@xmlNanoFTP
	cmp	DWORD PTR _res$[ebp], 2
	jne	SHORT $LN47@xmlNanoFTP
$LN48@xmlNanoFTP:

; 1154 : 		    /* we assume it worked :-\ */
; 1155 : 		    proxyType = 2;

	mov	DWORD PTR _proxyType, 2

; 1156 : 		    return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN47@xmlNanoFTP:

; 1157 : 		}
; 1158 : 		if (proxyType == 2) {

	cmp	DWORD PTR _proxyType, 2
	jne	SHORT $LN50@xmlNanoFTP

; 1159 : 		    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1160 : 		    ctxt->controlFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1161 : 		    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN50@xmlNanoFTP:

; 1162 : 		}
; 1163 :                 /* Falls through. */
; 1164 : 	    case 3:
; 1165 : 		/*
; 1166 : 		 * If you need support for other Proxy authentication scheme
; 1167 : 		 * send the code or at least the sequence in use.
; 1168 : 		 */
; 1169 : 	    default:
; 1170 : 		closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+44]
	push	eax
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1171 : 		ctxt->controlFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1172 : 		return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN22@xmlNanoFTP:

; 1173 : 	}
; 1174 :     }
; 1175 :     /*
; 1176 :      * Non-proxy handling.
; 1177 :      */
; 1178 :     res = xmlNanoFTPSendUser(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPSendUser
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1179 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN51@xmlNanoFTP

; 1180 :         closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1181 :         ctxt->controlFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1182 : 	return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN51@xmlNanoFTP:

; 1183 :     }
; 1184 :     res = xmlNanoFTPGetResponse(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1185 :     switch (res) {

	mov	eax, DWORD PTR _res$[ebp]
	mov	DWORD PTR tv356[ebp], eax
	cmp	DWORD PTR tv356[ebp], 2
	je	SHORT $LN52@xmlNanoFTP
	cmp	DWORD PTR tv356[ebp], 3
	je	SHORT $LN53@xmlNanoFTP
	jmp	SHORT $LN54@xmlNanoFTP
$LN52@xmlNanoFTP:

; 1186 : 	case 2:
; 1187 : 	    return(0);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN53@xmlNanoFTP:

; 1188 : 	case 3:
; 1189 : 	    break;

	jmp	SHORT $LN6@xmlNanoFTP
$LN54@xmlNanoFTP:

; 1190 : 	case 1:
; 1191 : 	case 4:
; 1192 : 	case 5:
; 1193 :         case -1:
; 1194 : 	default:
; 1195 : 	    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	push	edx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1196 : 	    ctxt->controlFd = INVALID_SOCKET;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+44], -1

; 1197 : 	    return(-1);

	or	eax, -1
	jmp	$LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 1198 :     }
; 1199 :     res = xmlNanoFTPSendPasswd(ctxt);

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPSendPasswd
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1200 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN55@xmlNanoFTP

; 1201 :         closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1202 :         ctxt->controlFd = INVALID_SOCKET;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1203 : 	return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN55@xmlNanoFTP:

; 1204 :     }
; 1205 :     res = xmlNanoFTPGetResponse(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPGetResponse
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1206 :     switch (res) {

	mov	edx, DWORD PTR _res$[ebp]
	mov	DWORD PTR tv372[ebp], edx
	cmp	DWORD PTR tv372[ebp], 2
	je	SHORT $LN56@xmlNanoFTP
	cmp	DWORD PTR tv372[ebp], 3
	je	SHORT $LN57@xmlNanoFTP
	jmp	SHORT $LN58@xmlNanoFTP
$LN56@xmlNanoFTP:

; 1207 : 	case 2:
; 1208 : 	    break;

	jmp	SHORT $LN8@xmlNanoFTP
$LN57@xmlNanoFTP:

; 1209 : 	case 3:
; 1210 : 	    __xmlIOErr(XML_FROM_FTP, XML_FTP_ACCNT,

	push	OFFSET ??_C@_0CK@GIDKJDCD@FTP?5server?5asking?5for?5ACCNT?5on?5@
	push	2002					; 000007d2H
	push	9
	call	___xmlIOErr
	add	esp, 12					; 0000000cH
$LN58@xmlNanoFTP:

; 1211 : 		       "FTP server asking for ACCNT on anonymous\n");
; 1212 :            /* Falls through. */
; 1213 : 	case 1:
; 1214 : 	case 4:
; 1215 : 	case 5:
; 1216 :         case -1:
; 1217 : 	default:
; 1218 : 	    closesocket(ctxt->controlFd); ctxt->controlFd = INVALID_SOCKET;

	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 1219 : 	    ctxt->controlFd = INVALID_SOCKET;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+44], -1

; 1220 : 	    return(-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlNanoFTP
$LN8@xmlNanoFTP:

; 1221 :     }
; 1222 : 
; 1223 :     return(0);

	xor	eax, eax
$LN1@xmlNanoFTP:

; 1224 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN67@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 528				; 00000210H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN67@xmlNanoFTP:
	DD	1
	DD	$LN66@xmlNanoFTP
$LN66@xmlNanoFTP:
	DD	-428					; fffffe54H
	DD	400					; 00000190H
	DD	$LN65@xmlNanoFTP
$LN65@xmlNanoFTP:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xmlNanoFTPConnect ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPOpen
_TEXT	SEGMENT
_sock$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_URL$ = 8						; size = 4
_xmlNanoFTPOpen PROC					; COMDAT

; 1999 : xmlNanoFTPOpen(const char *URL) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 2000 :     xmlNanoFTPCtxtPtr ctxt;
; 2001 :     SOCKET sock;
; 2002 : 
; 2003 :     xmlNanoFTPInit();

	call	_xmlNanoFTPInit

; 2004 :     if (URL == NULL) return(NULL);

	cmp	DWORD PTR _URL$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP
	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 2005 :     if (strncmp("ftp://", URL, 6)) return(NULL);

	mov	esi, esp
	push	6
	mov	eax, DWORD PTR _URL$[ebp]
	push	eax
	push	OFFSET ??_C@_06FNAPNHDD@ftp?3?1?1@
	call	DWORD PTR __imp__strncmp
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@xmlNanoFTP
	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN3@xmlNanoFTP:

; 2006 : 
; 2007 :     ctxt = (xmlNanoFTPCtxtPtr) xmlNanoFTPNewCtxt(URL);

	mov	ecx, DWORD PTR _URL$[ebp]
	push	ecx
	call	_xmlNanoFTPNewCtxt
	add	esp, 4
	mov	DWORD PTR _ctxt$[ebp], eax

; 2008 :     if (ctxt == NULL) return(NULL);

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN4@xmlNanoFTP
	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 2009 :     if (xmlNanoFTPConnect(ctxt) < 0) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	_xmlNanoFTPConnect
	add	esp, 4
	test	eax, eax
	jge	SHORT $LN5@xmlNanoFTP

; 2010 : 	xmlNanoFTPFreeCtxt(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPFreeCtxt
	add	esp, 4

; 2011 : 	return(NULL);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 2012 :     }
; 2013 :     sock = xmlNanoFTPGetSocket(ctxt, ctxt->path);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPGetSocket
	add	esp, 8
	mov	DWORD PTR _sock$[ebp], eax

; 2014 :     if (sock == INVALID_SOCKET) {

	cmp	DWORD PTR _sock$[ebp], -1
	jne	SHORT $LN6@xmlNanoFTP

; 2015 : 	xmlNanoFTPFreeCtxt(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPFreeCtxt
	add	esp, 4

; 2016 : 	return(NULL);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN6@xmlNanoFTP:

; 2017 :     }
; 2018 :     return(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
$LN1@xmlNanoFTP:

; 2019 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPOpen ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPConnectTo
_TEXT	SEGMENT
_res$ = -8						; size = 4
_ctxt$ = -4						; size = 4
_server$ = 8						; size = 4
_port$ = 12						; size = 4
_xmlNanoFTPConnectTo PROC				; COMDAT

; 1237 : xmlNanoFTPConnectTo(const char *server, int port) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 1238 :     xmlNanoFTPCtxtPtr ctxt;
; 1239 :     int res;
; 1240 : 
; 1241 :     xmlNanoFTPInit();

	call	_xmlNanoFTPInit

; 1242 :     if (server == NULL)

	cmp	DWORD PTR _server$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP

; 1243 : 	return(NULL);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 1244 :     if (port <= 0)

	cmp	DWORD PTR _port$[ebp], 0
	jg	SHORT $LN3@xmlNanoFTP

; 1245 : 	return(NULL);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN3@xmlNanoFTP:

; 1246 :     ctxt = (xmlNanoFTPCtxtPtr) xmlNanoFTPNewCtxt(NULL);

	push	0
	call	_xmlNanoFTPNewCtxt
	add	esp, 4
	mov	DWORD PTR _ctxt$[ebp], eax

; 1247 :     if (ctxt == NULL)

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN4@xmlNanoFTP

; 1248 :         return(NULL);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 1249 :     ctxt->hostname = xmlMemStrdup(server);

	mov	esi, esp
	mov	eax, DWORD PTR _server$[ebp]
	push	eax
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+4], eax

; 1250 :     if (ctxt->hostname == NULL) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+4], 0
	jne	SHORT $LN5@xmlNanoFTP

; 1251 : 	xmlNanoFTPFreeCtxt(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPFreeCtxt
	add	esp, 4

; 1252 : 	return(NULL);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN5@xmlNanoFTP:

; 1253 :     }
; 1254 :     if (port != 0)

	cmp	DWORD PTR _port$[ebp], 0
	je	SHORT $LN6@xmlNanoFTP

; 1255 : 	ctxt->port = port;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _port$[ebp]
	mov	DWORD PTR [ecx+8], edx
$LN6@xmlNanoFTP:

; 1256 :     res = xmlNanoFTPConnect(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
	push	eax
	call	_xmlNanoFTPConnect
	add	esp, 4
	mov	DWORD PTR _res$[ebp], eax

; 1257 :     if (res < 0) {

	cmp	DWORD PTR _res$[ebp], 0
	jge	SHORT $LN7@xmlNanoFTP

; 1258 : 	xmlNanoFTPFreeCtxt(ctxt);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	push	ecx
	call	_xmlNanoFTPFreeCtxt
	add	esp, 4

; 1259 : 	return(NULL);

	xor	eax, eax
	jmp	SHORT $LN1@xmlNanoFTP
$LN7@xmlNanoFTP:

; 1260 :     }
; 1261 :     return(ctxt);

	mov	eax, DWORD PTR _ctxt$[ebp]
$LN1@xmlNanoFTP:

; 1262 : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPConnectTo ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPFreeCtxt
_TEXT	SEGMENT
_ctxt$ = -4						; size = 4
_ctx$ = 8						; size = 4
_xmlNanoFTPFreeCtxt PROC				; COMDAT

; 500  : xmlNanoFTPFreeCtxt(void * ctx) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 501  :     xmlNanoFTPCtxtPtr ctxt = (xmlNanoFTPCtxtPtr) ctx;

	mov	eax, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR _ctxt$[ebp], eax

; 502  :     if (ctxt == NULL) return;

	cmp	DWORD PTR _ctxt$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 503  :     if (ctxt->hostname != NULL) xmlFree(ctxt->hostname);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+4], 0
	je	SHORT $LN3@xmlNanoFTP
	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@xmlNanoFTP:

; 504  :     if (ctxt->protocol != NULL) xmlFree(ctxt->protocol);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN4@xmlNanoFTP
	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@xmlNanoFTP:

; 505  :     if (ctxt->path != NULL) xmlFree(ctxt->path);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+12], 0
	je	SHORT $LN5@xmlNanoFTP
	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@xmlNanoFTP:

; 506  :     if (ctxt->user != NULL) xmlFree(ctxt->user);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+16], 0
	je	SHORT $LN6@xmlNanoFTP
	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@xmlNanoFTP:

; 507  :     if (ctxt->passwd != NULL) xmlFree(ctxt->passwd);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN7@xmlNanoFTP
	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@xmlNanoFTP:

; 508  :     ctxt->passive = 1;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+40], 1

; 509  :     if (ctxt->controlFd != INVALID_SOCKET) closesocket(ctxt->controlFd);

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+44], -1
	je	SHORT $LN8@xmlNanoFTP
	mov	esi, esp
	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax+44]
	push	ecx
	call	DWORD PTR __imp__closesocket@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@xmlNanoFTP:

; 510  :     ctxt->controlFd = INVALID_SOCKET;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [edx+44], -1

; 511  :     ctxt->controlBufIndex = -1;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+1088], -1

; 512  :     ctxt->controlBufUsed = -1;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+1092], -1

; 513  :     xmlFree(ctxt);

	mov	esi, esp
	mov	edx, DWORD PTR _ctxt$[ebp]
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@xmlNanoFTP:

; 514  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPFreeCtxt ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPNewCtxt
_TEXT	SEGMENT
_unescaped$ = -8					; size = 4
_ret$ = -4						; size = 4
_URL$ = 8						; size = 4
_xmlNanoFTPNewCtxt PROC					; COMDAT

; 464  : xmlNanoFTPNewCtxt(const char *URL) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 465  :     xmlNanoFTPCtxtPtr ret;
; 466  :     char *unescaped;
; 467  : 
; 468  :     ret = (xmlNanoFTPCtxtPtr) xmlMalloc(sizeof(xmlNanoFTPCtxt));

	mov	esi, esp
	push	1100					; 0000044cH
	call	DWORD PTR _xmlMalloc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ret$[ebp], eax

; 469  :     if (ret == NULL) {

	cmp	DWORD PTR _ret$[ebp], 0
	jne	SHORT $LN2@xmlNanoFTP

; 470  :         xmlFTPErrMemory("allocating FTP context");

	push	OFFSET ??_C@_0BH@FLMMHHFH@allocating?5FTP?5context@
	call	_xmlFTPErrMemory
	add	esp, 4

; 471  :         return(NULL);

	xor	eax, eax
	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 472  :     }
; 473  : 
; 474  :     memset(ret, 0, sizeof(xmlNanoFTPCtxt));

	push	1100					; 0000044cH
	push	0
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 475  :     ret->port = 21;

	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+8], 21			; 00000015H

; 476  :     ret->passive = 1;

	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+40], 1

; 477  :     ret->returnValue = 0;

	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax+56], 0

; 478  :     ret->controlBufIndex = 0;

	mov	ecx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx+1088], 0

; 479  :     ret->controlBufUsed = 0;

	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [edx+1092], 0

; 480  :     ret->controlFd = INVALID_SOCKET;

	mov	eax, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [eax+44], -1

; 481  : 
; 482  :     unescaped = xmlURIUnescapeString(URL, 0, NULL);

	push	0
	push	0
	mov	ecx, DWORD PTR _URL$[ebp]
	push	ecx
	call	_xmlURIUnescapeString
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _unescaped$[ebp], eax

; 483  :     if (unescaped != NULL) {

	cmp	DWORD PTR _unescaped$[ebp], 0
	je	SHORT $LN3@xmlNanoFTP

; 484  : 	xmlNanoFTPScanURL(ret, unescaped);

	mov	edx, DWORD PTR _unescaped$[ebp]
	push	edx
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	call	_xmlNanoFTPScanURL
	add	esp, 8

; 485  : 	xmlFree(unescaped);

	mov	esi, esp
	mov	ecx, DWORD PTR _unescaped$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN4@xmlNanoFTP
$LN3@xmlNanoFTP:

; 486  :     } else if (URL != NULL)

	cmp	DWORD PTR _URL$[ebp], 0
	je	SHORT $LN4@xmlNanoFTP

; 487  : 	xmlNanoFTPScanURL(ret, URL);

	mov	edx, DWORD PTR _URL$[ebp]
	push	edx
	mov	eax, DWORD PTR _ret$[ebp]
	push	eax
	call	_xmlNanoFTPScanURL
	add	esp, 8
$LN4@xmlNanoFTP:

; 488  : 
; 489  :     return(ret);

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlNanoFTP:

; 490  : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlNanoFTPNewCtxt ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPCleanup
_TEXT	SEGMENT
_xmlNanoFTPCleanup PROC					; COMDAT

; 225  : xmlNanoFTPCleanup(void) {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 226  :     if (proxy != NULL) {

	cmp	DWORD PTR _proxy, 0
	je	SHORT $LN2@xmlNanoFTP

; 227  : 	xmlFree(proxy);

	mov	esi, esp
	mov	eax, DWORD PTR _proxy
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 228  : 	proxy = NULL;

	mov	DWORD PTR _proxy, 0
$LN2@xmlNanoFTP:

; 229  :     }
; 230  :     if (proxyUser != NULL) {

	cmp	DWORD PTR _proxyUser, 0
	je	SHORT $LN3@xmlNanoFTP

; 231  : 	xmlFree(proxyUser);

	mov	esi, esp
	mov	ecx, DWORD PTR _proxyUser
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 232  : 	proxyUser = NULL;

	mov	DWORD PTR _proxyUser, 0
$LN3@xmlNanoFTP:

; 233  :     }
; 234  :     if (proxyPasswd != NULL) {

	cmp	DWORD PTR _proxyPasswd, 0
	je	SHORT $LN4@xmlNanoFTP

; 235  : 	xmlFree(proxyPasswd);

	mov	esi, esp
	mov	edx, DWORD PTR _proxyPasswd
	push	edx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 236  : 	proxyPasswd = NULL;

	mov	DWORD PTR _proxyPasswd, 0
$LN4@xmlNanoFTP:

; 237  :     }
; 238  : #ifdef _WINSOCKAPI_
; 239  :     if (initialized)

	cmp	DWORD PTR _initialized, 0
	je	SHORT $LN5@xmlNanoFTP

; 240  : 	WSACleanup();

	mov	esi, esp
	call	DWORD PTR __imp__WSACleanup@0
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@xmlNanoFTP:

; 241  : #endif
; 242  :     initialized = 0;

	mov	DWORD PTR _initialized, 0

; 243  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlNanoFTPCleanup ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\nanoftp.c
;	COMDAT _xmlNanoFTPInit
_TEXT	SEGMENT
_wsaData$ = -408					; size = 400
_env$ = -4						; size = 4
_xmlNanoFTPInit PROC					; COMDAT

; 180  : xmlNanoFTPInit(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __D3ED00D9_nanoftp@c
	call	@__CheckForDebuggerJustMyCode@4

; 181  :     const char *env;
; 182  : #ifdef _WINSOCKAPI_
; 183  :     WSADATA wsaData;
; 184  : #endif
; 185  : 
; 186  :     if (initialized)

	cmp	DWORD PTR _initialized, 0
	je	SHORT $LN2@xmlNanoFTP

; 187  : 	return;

	jmp	$LN1@xmlNanoFTP
$LN2@xmlNanoFTP:

; 188  : 
; 189  : #ifdef _WINSOCKAPI_
; 190  :     if (WSAStartup(MAKEWORD(1, 1), &wsaData) != 0)

	mov	esi, esp
	lea	eax, DWORD PTR _wsaData$[ebp]
	push	eax
	push	257					; 00000101H
	call	DWORD PTR __imp__WSAStartup@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN3@xmlNanoFTP

; 191  : 	return;

	jmp	$LN1@xmlNanoFTP
$LN3@xmlNanoFTP:

; 192  : #endif
; 193  : 
; 194  :     proxyPort = 21;

	mov	DWORD PTR _proxyPort, 21		; 00000015H

; 195  :     env = getenv("no_proxy");

	mov	esi, esp
	push	OFFSET ??_C@_08BOGLDIEC@no_proxy@
	call	DWORD PTR __imp__getenv
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _env$[ebp], eax

; 196  :     if (env && ((env[0] == '*' ) && (env[1] == 0)))

	cmp	DWORD PTR _env$[ebp], 0
	je	SHORT $LN4@xmlNanoFTP
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _env$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	cmp	ecx, 42					; 0000002aH
	jne	SHORT $LN4@xmlNanoFTP
	mov	edx, 1
	shl	edx, 0
	mov	eax, DWORD PTR _env$[ebp]
	movsx	ecx, BYTE PTR [eax+edx]
	test	ecx, ecx
	jne	SHORT $LN4@xmlNanoFTP

; 197  : 	return;

	jmp	$LN1@xmlNanoFTP
$LN4@xmlNanoFTP:

; 198  :     env = getenv("ftp_proxy");

	mov	esi, esp
	push	OFFSET ??_C@_09FLGENLMF@ftp_proxy@
	call	DWORD PTR __imp__getenv
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _env$[ebp], eax

; 199  :     if (env != NULL) {

	cmp	DWORD PTR _env$[ebp], 0
	je	SHORT $LN5@xmlNanoFTP

; 200  : 	xmlNanoFTPScanProxy(env);

	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	_xmlNanoFTPScanProxy
	add	esp, 4

; 201  :     } else {

	jmp	SHORT $LN6@xmlNanoFTP
$LN5@xmlNanoFTP:

; 202  : 	env = getenv("FTP_PROXY");

	mov	esi, esp
	push	OFFSET ??_C@_09KECINPKO@FTP_PROXY@
	call	DWORD PTR __imp__getenv
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _env$[ebp], eax

; 203  : 	if (env != NULL) {

	cmp	DWORD PTR _env$[ebp], 0
	je	SHORT $LN6@xmlNanoFTP

; 204  : 	    xmlNanoFTPScanProxy(env);

	mov	eax, DWORD PTR _env$[ebp]
	push	eax
	call	_xmlNanoFTPScanProxy
	add	esp, 4
$LN6@xmlNanoFTP:

; 205  : 	}
; 206  :     }
; 207  :     env = getenv("ftp_proxy_user");

	mov	esi, esp
	push	OFFSET ??_C@_0P@CAEEHGAA@ftp_proxy_user@
	call	DWORD PTR __imp__getenv
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _env$[ebp], eax

; 208  :     if (env != NULL) {

	cmp	DWORD PTR _env$[ebp], 0
	je	SHORT $LN8@xmlNanoFTP

; 209  : 	proxyUser = xmlMemStrdup(env);

	mov	esi, esp
	mov	ecx, DWORD PTR _env$[ebp]
	push	ecx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _proxyUser, eax
$LN8@xmlNanoFTP:

; 210  :     }
; 211  :     env = getenv("ftp_proxy_password");

	mov	esi, esp
	push	OFFSET ??_C@_0BD@DKAPHOHE@ftp_proxy_password@
	call	DWORD PTR __imp__getenv
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _env$[ebp], eax

; 212  :     if (env != NULL) {

	cmp	DWORD PTR _env$[ebp], 0
	je	SHORT $LN9@xmlNanoFTP

; 213  : 	proxyPasswd = xmlMemStrdup(env);

	mov	esi, esp
	mov	edx, DWORD PTR _env$[ebp]
	push	edx
	call	DWORD PTR _xmlMemStrdup
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _proxyPasswd, eax
$LN9@xmlNanoFTP:

; 214  :     }
; 215  :     initialized = 1;

	mov	DWORD PTR _initialized, 1
$LN1@xmlNanoFTP:

; 216  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@xmlNanoFTP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN13@xmlNanoFTP:
	DD	1
	DD	$LN12@xmlNanoFTP
$LN12@xmlNanoFTP:
	DD	-408					; fffffe68H
	DD	400					; 00000190H
	DD	$LN11@xmlNanoFTP
$LN11@xmlNanoFTP:
	DB	119					; 00000077H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_xmlNanoFTPInit ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _sscanf
_TEXT	SEGMENT
__Format$ = -12						; size = 4
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf	PROC						; COMDAT

; 2270 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __A452D4A0_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 2271 :         int _Result;
; 2272 :         va_list _ArgList;
; 2273 :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 2274 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);

	mov	ecx, DWORD PTR __Format$[ebp]
	mov	DWORD PTR __Format$[ebp], ecx

; 2176 :         return __stdio_common_vsscanf(

	mov	esi, esp
	mov	edx, DWORD PTR __ArgList$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Format$[ebp]
	push	eax
	push	-1
	mov	ecx, DWORD PTR __Buffer$[ebp]
	push	ecx
	call	___local_stdio_scanf_options
	mov	edx, DWORD PTR [eax+4]
	push	edx
	mov	eax, DWORD PTR [eax]
	push	eax
	call	DWORD PTR __imp____stdio_common_vsscanf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 2274 :         _Result = _vsscanf_l(_Buffer, _Format, NULL, _ArgList);

	mov	DWORD PTR __Result$[ebp], eax

; 2275 :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 2276 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 2277 :     }

	pop	esi
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sscanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _snprintf
_TEXT	SEGMENT
tv81 = -20						; size = 4
__Result$1 = -16					; size = 4
__Format$ = -12						; size = 4
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_snprintf PROC						; COMDAT

; 1948 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __A452D4A0_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 1949 :         int _Result;
; 1950 :         va_list _ArgList;
; 1951 :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 1952 :     #pragma warning(suppress:28719)    // 28719
; 1953 :         _Result = vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

	mov	ecx, DWORD PTR __Format$[ebp]
	mov	DWORD PTR __Format$[ebp], ecx

; 1440 :         int const _Result = __stdio_common_vsprintf(

	mov	esi, esp
	mov	edx, DWORD PTR __ArgList$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR __BufferCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	edx
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	or	ecx, 2
	mov	edx, DWORD PTR [eax+4]
	push	edx
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Result$1[ebp], eax

; 1441 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1442 :             _Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1443 : 
; 1444 :         return _Result < 0 ? -1 : _Result;

	cmp	DWORD PTR __Result$1[ebp], 0
	jge	SHORT $LN5@snprintf
	mov	DWORD PTR tv81[ebp], -1
	jmp	SHORT $LN3@snprintf
$LN5@snprintf:
	mov	eax, DWORD PTR __Result$1[ebp]
	mov	DWORD PTR tv81[ebp], eax
$LN3@snprintf:

; 1952 :     #pragma warning(suppress:28719)    // 28719
; 1953 :         _Result = vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR __Result$[ebp], ecx

; 1954 :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 1955 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 1956 :     }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __2CC6E67D_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __2CC6E67D_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
