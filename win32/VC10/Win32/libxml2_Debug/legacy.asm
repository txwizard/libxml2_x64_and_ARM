; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\legacy.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_08EBLJJHKN@validate@			; `string'
PUBLIC	??_C@_0M@LFNKGPPF@load?5subset@			; `string'
PUBLIC	??_C@_0M@JOFGOHIP@keep?5blanks@			; `string'
PUBLIC	??_C@_0M@EPCDMNHL@disable?5SAX@			; `string'
PUBLIC	??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@	; `string'
PUBLIC	??_C@_0BE@MFJOLEGC@substitute?5entities@	; `string'
PUBLIC	??_C@_0BB@FNGHLMDK@gather?5line?5info@		; `string'
PUBLIC	??_C@_09OBFNJHCP@user?5data@			; `string'
PUBLIC	??_C@_07ELANCDBJ@is?5html@			; `string'
PUBLIC	??_C@_0O@NMMOLLEF@is?5standalone@		; `string'
PUBLIC	??_C@_0M@DGHBBHCN@stop?5parser@			; `string'
PUBLIC	??_C@_08JEEDKNPB@document@			; `string'
PUBLIC	??_C@_0P@NEKMCKKP@is?5well?5formed@		; `string'
PUBLIC	??_C@_08EKBKNFNH@is?5valid@			; `string'
PUBLIC	??_C@_09HIOCHIDE@SAX?5block@			; `string'
PUBLIC	??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@ ; `string'
PUBLIC	??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@	; `string'
PUBLIC	??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@ ; `string'
PUBLIC	??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@ ; `string'
PUBLIC	??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@ ; `string'
PUBLIC	??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@	; `string'
PUBLIC	??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@	; `string'
PUBLIC	??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@	; `string'
PUBLIC	??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@ ; `string'
PUBLIC	??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@	; `string'
PUBLIC	??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@ ; `string'
PUBLIC	??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@ ; `string'
PUBLIC	??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@ ; `string'
PUBLIC	??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@	; `string'
PUBLIC	??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@	; `string'
PUBLIC	??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@	; `string'
PUBLIC	??_C@_0BH@COKKFLJA@SAX?5function?5reference@	; `string'
PUBLIC	??_C@_0BI@OKJHNGCO@SAX?5function?5characters@	; `string'
PUBLIC	??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@ ; `string'
PUBLIC	??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@ ; `string'
PUBLIC	??_C@_0BF@LMDIIKPA@SAX?5function?5comment@	; `string'
PUBLIC	??_C@_0BF@IKOPPKMI@SAX?5function?5warning@	; `string'
PUBLIC	??_C@_0BD@DNENFEEM@SAX?5function?5error@	; `string'
PUBLIC	??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@	; `string'
PUBLIC	??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@ ; `string'
PUBLIC	??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@	; `string'
PUBLIC	??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@ ; `string'
_DATA	SEGMENT
COMM	_xmlMalloc:DWORD
COMM	_xmlMallocAtomic:DWORD
COMM	_xmlRealloc:DWORD
COMM	_xmlFree:DWORD
COMM	_xmlMemStrdup:DWORD
COMM	_xmlIsBaseCharGroup:BYTE:010H
COMM	_xmlIsCharGroup:BYTE:010H
COMM	_xmlIsCombiningGroup:BYTE:010H
COMM	_xmlIsDigitGroup:BYTE:010H
COMM	_xmlIsExtenderGroup:BYTE:010H
COMM	_xmlIsIdeographicGroup:BYTE:010H
COMM	_xmlIsPubidChar_tab:BYTE:0100H
COMM	_xmlParserMaxDepth:DWORD
COMM	_forbiddenExp:DWORD
COMM	_emptyExp:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__188180DA_corecrt_math@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__06F2C055_legacy@c DB 01H
msvcjmc	ENDS
;	COMDAT ??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
CONST	SEGMENT
??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@ DB 'SAX function extern'
	DB	'alSubset', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
CONST	SEGMENT
??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@ DB 'SAX function cdataBlock'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
CONST	SEGMENT
??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@ DB 'SAX function ge'
	DB	'tParameterEntity', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
CONST	SEGMENT
??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@ DB 'SAX function fatalError'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DNENFEEM@SAX?5function?5error@
CONST	SEGMENT
??_C@_0BD@DNENFEEM@SAX?5function?5error@ DB 'SAX function error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
CONST	SEGMENT
??_C@_0BF@IKOPPKMI@SAX?5function?5warning@ DB 'SAX function warning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
CONST	SEGMENT
??_C@_0BF@LMDIIKPA@SAX?5function?5comment@ DB 'SAX function comment', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
CONST	SEGMENT
??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@ DB 'SAX function pr'
	DB	'ocessingInstruction', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
CONST	SEGMENT
??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@ DB 'SAX function ig'
	DB	'norableWhitespace', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
CONST	SEGMENT
??_C@_0BI@OKJHNGCO@SAX?5function?5characters@ DB 'SAX function characters'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@COKKFLJA@SAX?5function?5reference@
CONST	SEGMENT
??_C@_0BH@COKKFLJA@SAX?5function?5reference@ DB 'SAX function reference', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
CONST	SEGMENT
??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@ DB 'SAX function endElement'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
CONST	SEGMENT
??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@ DB 'SAX function startEle'
	DB	'ment', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
CONST	SEGMENT
??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@ DB 'SAX function endDocume'
	DB	'nt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
CONST	SEGMENT
??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@ DB 'SAX function startDo'
	DB	'cument', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
CONST	SEGMENT
??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@ DB 'SAX function se'
	DB	'tDocumentLocator', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
CONST	SEGMENT
??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@ DB 'SAX function un'
	DB	'parsedEntityDecl', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
CONST	SEGMENT
??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@ DB 'SAX function elementDe'
	DB	'cl', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
CONST	SEGMENT
??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@ DB 'SAX function attribu'
	DB	'teDecl', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
CONST	SEGMENT
??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@ DB 'SAX function notation'
	DB	'Decl', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
CONST	SEGMENT
??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@ DB 'SAX function entityDecl'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
CONST	SEGMENT
??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@ DB 'SAX function getEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
CONST	SEGMENT
??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@ DB 'SAX function resolve'
	DB	'Entity', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
CONST	SEGMENT
??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@ DB 'SAX function has'
	DB	'ExternalSubset', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
CONST	SEGMENT
??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@ DB 'SAX function hasI'
	DB	'nternalSubset', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
CONST	SEGMENT
??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@ DB 'SAX function isStanda'
	DB	'lone', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
CONST	SEGMENT
??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@ DB 'SAX function intern'
	DB	'alSubset', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09HIOCHIDE@SAX?5block@
CONST	SEGMENT
??_C@_09HIOCHIDE@SAX?5block@ DB 'SAX block', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EKBKNFNH@is?5valid@
CONST	SEGMENT
??_C@_08EKBKNFNH@is?5valid@ DB 'is valid', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NEKMCKKP@is?5well?5formed@
CONST	SEGMENT
??_C@_0P@NEKMCKKP@is?5well?5formed@ DB 'is well formed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JEEDKNPB@document@
CONST	SEGMENT
??_C@_08JEEDKNPB@document@ DB 'document', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DGHBBHCN@stop?5parser@
CONST	SEGMENT
??_C@_0M@DGHBBHCN@stop?5parser@ DB 'stop parser', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMMOLLEF@is?5standalone@
CONST	SEGMENT
??_C@_0O@NMMOLLEF@is?5standalone@ DB 'is standalone', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07ELANCDBJ@is?5html@
CONST	SEGMENT
??_C@_07ELANCDBJ@is?5html@ DB 'is html', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09OBFNJHCP@user?5data@
CONST	SEGMENT
??_C@_09OBFNJHCP@user?5data@ DB 'user data', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNGHLMDK@gather?5line?5info@
CONST	SEGMENT
??_C@_0BB@FNGHLMDK@gather?5line?5info@ DB 'gather line info', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MFJOLEGC@substitute?5entities@
CONST	SEGMENT
??_C@_0BE@MFJOLEGC@substitute?5entities@ DB 'substitute entities', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
CONST	SEGMENT
??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@ DB 'fetch external entities'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EPCDMNHL@disable?5SAX@
CONST	SEGMENT
??_C@_0M@EPCDMNHL@disable?5SAX@ DB 'disable SAX', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JOFGOHIP@keep?5blanks@
CONST	SEGMENT
??_C@_0M@JOFGOHIP@keep?5blanks@ DB 'keep blanks', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LFNKGPPF@load?5subset@
CONST	SEGMENT
??_C@_0M@LFNKGPPF@load?5subset@ DB 'load subset', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08EBLJJHKN@validate@
CONST	SEGMENT
??_C@_08EBLJJHKN@validate@ DB 'validate', 00H		; `string'
CONST	ENDS
PUBLIC	_xmlNewGlobalNs
PUBLIC	_xmlInitializePredefinedEntities
PUBLIC	_xmlEncodeEntities
PUBLIC	_xmlCleanupPredefinedEntities
PUBLIC	_xmlGetFeaturesList
PUBLIC	_xmlGetFeature
PUBLIC	_xmlSetFeature
PUBLIC	_getPublicId
PUBLIC	_getSystemId
PUBLIC	_setDocumentLocator
PUBLIC	_getLineNumber
PUBLIC	_getColumnNumber
PUBLIC	_isStandalone
PUBLIC	_hasInternalSubset
PUBLIC	_hasExternalSubset
PUBLIC	_internalSubset
PUBLIC	_externalSubset
PUBLIC	_getEntity
PUBLIC	_getParameterEntity
PUBLIC	_resolveEntity
PUBLIC	_entityDecl
PUBLIC	_attributeDecl
PUBLIC	_elementDecl
PUBLIC	_notationDecl
PUBLIC	_unparsedEntityDecl
PUBLIC	_startDocument
PUBLIC	_endDocument
PUBLIC	_attribute
PUBLIC	_startElement
PUBLIC	_endElement
PUBLIC	_reference
PUBLIC	_characters
PUBLIC	_ignorableWhitespace
PUBLIC	_processingInstruction
PUBLIC	_globalNamespace
PUBLIC	_setNamespace
PUBLIC	_getNamespace
PUBLIC	_checkNamespace
PUBLIC	_namespaceDecl
PUBLIC	_comment
PUBLIC	_cdataBlock
PUBLIC	_xmlParseQuotedString
PUBLIC	_xmlParseNamespace
PUBLIC	_xmlNamespaceParseNSDef
PUBLIC	_xmlScanName
PUBLIC	_xmlNamespaceParseNCName
PUBLIC	_xmlParserHandleReference
PUBLIC	_xmlNamespaceParseQName
PUBLIC	_xmlDecodeEntities
PUBLIC	_xmlHandleEntity
PUBLIC	_xmlUpgradeOldNs
PUBLIC	_htmlDecodeEntities
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@ ; `string'
PUBLIC	??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@ ; `string'
PUBLIC	??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@ ; `string'
PUBLIC	??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@ ; `string'
PUBLIC	??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@ ; `string'
PUBLIC	??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@ ; `string'
PUBLIC	??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@ ; `string'
PUBLIC	??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@ ; `string'
PUBLIC	??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@ ; `string'
PUBLIC	??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@ ; `string'
PUBLIC	??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@ ; `string'
PUBLIC	??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@ ; `string'
PUBLIC	??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@ ; `string'
PUBLIC	??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@ ; `string'
PUBLIC	??_C@_0M@DAFHLKNN@getPublicId@			; `string'
PUBLIC	??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@ ; `string'
PUBLIC	??_C@_0M@FFHGBOOJ@getSystemId@			; `string'
PUBLIC	??_C@_0O@OCINCMPB@getLineNumber@		; `string'
PUBLIC	??_C@_0BA@MBKHJKLG@getColumnNumber@		; `string'
PUBLIC	??_C@_0N@GDKLDDLO@isStandalone@			; `string'
PUBLIC	??_C@_0BC@CIDJHICF@hasInternalSubset@		; `string'
PUBLIC	??_C@_0BC@PDLMKGBL@hasExternalSubset@		; `string'
PUBLIC	??_C@_0P@OCEDHHOL@internalSubset@		; `string'
PUBLIC	??_C@_0P@DJMGKJNF@externalSubset@		; `string'
PUBLIC	??_C@_0O@LFLMJBFI@resolveEntity@		; `string'
PUBLIC	??_C@_09NCBEBLEA@getEntity@			; `string'
PUBLIC	??_C@_0BD@KINJKNIJ@getParameterEntity@		; `string'
PUBLIC	??_C@_0L@OGGGJLI@entityDecl@			; `string'
PUBLIC	??_C@_0O@BNECHEBL@attributeDecl@		; `string'
PUBLIC	??_C@_0M@FJEPBGK@elementDecl@			; `string'
PUBLIC	??_C@_0N@CBDPABNA@notationDecl@			; `string'
PUBLIC	??_C@_0BD@HCBGHJEF@unparsedEntityDecl@		; `string'
PUBLIC	??_C@_0BD@DHECJBOB@setDocumentLocator@		; `string'
PUBLIC	??_C@_0M@OBDBPPLP@endDocument@			; `string'
PUBLIC	??_C@_09HGIEBAJ@attribute@			; `string'
PUBLIC	??_C@_0L@GKEIAKOG@endElement@			; `string'
PUBLIC	??_C@_09KJONPCOF@reference@			; `string'
PUBLIC	??_C@_0L@MKHPBEDE@characters@			; `string'
PUBLIC	??_C@_0BE@JAKNEPAP@ignorableWhitespace@		; `string'
PUBLIC	??_C@_0BG@BKBGIBPJ@processingInstruction@	; `string'
PUBLIC	??_C@_0BA@HBAGMMIM@globalNamespace@		; `string'
PUBLIC	??_C@_0N@PFFBACNP@setNamespace@			; `string'
PUBLIC	??_C@_0N@IBOPMOJD@getNamespace@			; `string'
PUBLIC	??_C@_0P@HOABFNF@checkNamespace@		; `string'
PUBLIC	??_C@_0O@BMLADFEG@namespaceDecl@		; `string'
PUBLIC	??_C@_07GJGNEJFD@comment@			; `string'
PUBLIC	??_C@_0L@HKAOEGJH@cdataBlock@			; `string'
EXTRN	_xmlParserValidityError:PROC
EXTRN	_xmlParserValidityWarning:PROC
EXTRN	_xmlSAX2GetPublicId:PROC
EXTRN	_xmlSAX2GetSystemId:PROC
EXTRN	_xmlSAX2GetLineNumber:PROC
EXTRN	_xmlSAX2GetColumnNumber:PROC
EXTRN	_xmlSAX2IsStandalone:PROC
EXTRN	_xmlSAX2HasInternalSubset:PROC
EXTRN	_xmlSAX2HasExternalSubset:PROC
EXTRN	_xmlSAX2InternalSubset:PROC
EXTRN	_xmlSAX2ExternalSubset:PROC
EXTRN	_xmlSAX2GetEntity:PROC
EXTRN	_xmlSAX2GetParameterEntity:PROC
EXTRN	_xmlSAX2ResolveEntity:PROC
EXTRN	_xmlSAX2EntityDecl:PROC
EXTRN	_xmlSAX2AttributeDecl:PROC
EXTRN	_xmlSAX2ElementDecl:PROC
EXTRN	_xmlSAX2NotationDecl:PROC
EXTRN	_xmlSAX2UnparsedEntityDecl:PROC
EXTRN	_xmlSAX2StartDocument:PROC
EXTRN	_xmlSAX2EndDocument:PROC
EXTRN	_xmlSAX2StartElement:PROC
EXTRN	_xmlSAX2EndElement:PROC
EXTRN	_xmlSAX2Reference:PROC
EXTRN	_xmlSAX2Characters:PROC
EXTRN	_xmlSAX2ProcessingInstruction:PROC
EXTRN	_xmlSAX2Comment:PROC
EXTRN	_xmlSAX2CDataBlock:PROC
EXTRN	___xmlGenericError:PROC
EXTRN	___xmlGenericErrorContext:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
_BSS	SEGMENT
?deprecated@?1??htmlDecodeEntities@@9@9 DD 01H DUP (?)	; `htmlDecodeEntities'::`2'::deprecated
?deprecated@?1??xmlDecodeEntities@@9@9 DD 01H DUP (?)	; `xmlDecodeEntities'::`2'::deprecated
?deprecated@?1??xmlNamespaceParseNCName@@9@9 DD 01H DUP (?) ; `xmlNamespaceParseNCName'::`2'::deprecated
?deprecated@?1??xmlNamespaceParseQName@@9@9 DD 01H DUP (?) ; `xmlNamespaceParseQName'::`2'::deprecated
?deprecated@?1??xmlNamespaceParseNSDef@@9@9 DD 01H DUP (?) ; `xmlNamespaceParseNSDef'::`2'::deprecated
?deprecated@?1??xmlParseQuotedString@@9@9 DD 01H DUP (?) ; `xmlParseQuotedString'::`2'::deprecated
?deprecated@?1??xmlParseNamespace@@9@9 DD 01H DUP (?)	; `xmlParseNamespace'::`2'::deprecated
?deprecated@?1??xmlScanName@@9@9 DD 01H DUP (?)		; `xmlScanName'::`2'::deprecated
?deprecated@?1??xmlParserHandleReference@@9@9 DD 01H DUP (?) ; `xmlParserHandleReference'::`2'::deprecated
?deprecated@?1??xmlHandleEntity@@9@9 DD 01H DUP (?)	; `xmlHandleEntity'::`2'::deprecated
?deprecated@?1??xmlNewGlobalNs@@9@9 DD 01H DUP (?)	; `xmlNewGlobalNs'::`2'::deprecated
?deprecated@?1??xmlUpgradeOldNs@@9@9 DD 01H DUP (?)	; `xmlUpgradeOldNs'::`2'::deprecated
_deprecated_v1_msg DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0L@HKAOEGJH@cdataBlock@
CONST	SEGMENT
??_C@_0L@HKAOEGJH@cdataBlock@ DB 'cdataBlock', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GJGNEJFD@comment@
CONST	SEGMENT
??_C@_07GJGNEJFD@comment@ DB 'comment', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BMLADFEG@namespaceDecl@
CONST	SEGMENT
??_C@_0O@BMLADFEG@namespaceDecl@ DB 'namespaceDecl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HOABFNF@checkNamespace@
CONST	SEGMENT
??_C@_0P@HOABFNF@checkNamespace@ DB 'checkNamespace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IBOPMOJD@getNamespace@
CONST	SEGMENT
??_C@_0N@IBOPMOJD@getNamespace@ DB 'getNamespace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PFFBACNP@setNamespace@
CONST	SEGMENT
??_C@_0N@PFFBACNP@setNamespace@ DB 'setNamespace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HBAGMMIM@globalNamespace@
CONST	SEGMENT
??_C@_0BA@HBAGMMIM@globalNamespace@ DB 'globalNamespace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BKBGIBPJ@processingInstruction@
CONST	SEGMENT
??_C@_0BG@BKBGIBPJ@processingInstruction@ DB 'processingInstruction', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JAKNEPAP@ignorableWhitespace@
CONST	SEGMENT
??_C@_0BE@JAKNEPAP@ignorableWhitespace@ DB 'ignorableWhitespace', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MKHPBEDE@characters@
CONST	SEGMENT
??_C@_0L@MKHPBEDE@characters@ DB 'characters', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09KJONPCOF@reference@
CONST	SEGMENT
??_C@_09KJONPCOF@reference@ DB 'reference', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GKEIAKOG@endElement@
CONST	SEGMENT
??_C@_0L@GKEIAKOG@endElement@ DB 'endElement', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HGIEBAJ@attribute@
CONST	SEGMENT
??_C@_09HGIEBAJ@attribute@ DB 'attribute', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OBDBPPLP@endDocument@
CONST	SEGMENT
??_C@_0M@OBDBPPLP@endDocument@ DB 'endDocument', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHECJBOB@setDocumentLocator@
CONST	SEGMENT
??_C@_0BD@DHECJBOB@setDocumentLocator@ DB 'setDocumentLocator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HCBGHJEF@unparsedEntityDecl@
CONST	SEGMENT
??_C@_0BD@HCBGHJEF@unparsedEntityDecl@ DB 'unparsedEntityDecl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CBDPABNA@notationDecl@
CONST	SEGMENT
??_C@_0N@CBDPABNA@notationDecl@ DB 'notationDecl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FJEPBGK@elementDecl@
CONST	SEGMENT
??_C@_0M@FJEPBGK@elementDecl@ DB 'elementDecl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BNECHEBL@attributeDecl@
CONST	SEGMENT
??_C@_0O@BNECHEBL@attributeDecl@ DB 'attributeDecl', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OGGGJLI@entityDecl@
CONST	SEGMENT
??_C@_0L@OGGGJLI@entityDecl@ DB 'entityDecl', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KINJKNIJ@getParameterEntity@
CONST	SEGMENT
??_C@_0BD@KINJKNIJ@getParameterEntity@ DB 'getParameterEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NCBEBLEA@getEntity@
CONST	SEGMENT
??_C@_09NCBEBLEA@getEntity@ DB 'getEntity', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LFLMJBFI@resolveEntity@
CONST	SEGMENT
??_C@_0O@LFLMJBFI@resolveEntity@ DB 'resolveEntity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DJMGKJNF@externalSubset@
CONST	SEGMENT
??_C@_0P@DJMGKJNF@externalSubset@ DB 'externalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OCEDHHOL@internalSubset@
CONST	SEGMENT
??_C@_0P@OCEDHHOL@internalSubset@ DB 'internalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PDLMKGBL@hasExternalSubset@
CONST	SEGMENT
??_C@_0BC@PDLMKGBL@hasExternalSubset@ DB 'hasExternalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CIDJHICF@hasInternalSubset@
CONST	SEGMENT
??_C@_0BC@CIDJHICF@hasInternalSubset@ DB 'hasInternalSubset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GDKLDDLO@isStandalone@
CONST	SEGMENT
??_C@_0N@GDKLDDLO@isStandalone@ DB 'isStandalone', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@MBKHJKLG@getColumnNumber@
CONST	SEGMENT
??_C@_0BA@MBKHJKLG@getColumnNumber@ DB 'getColumnNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OCINCMPB@getLineNumber@
CONST	SEGMENT
??_C@_0O@OCINCMPB@getLineNumber@ DB 'getLineNumber', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FFHGBOOJ@getSystemId@
CONST	SEGMENT
??_C@_0M@FFHGBOOJ@getSystemId@ DB 'getSystemId', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
CONST	SEGMENT
??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@ DB 'Use of deprec'
	DB	'ated SAXv1 function %s', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DAFHLKNN@getPublicId@
CONST	SEGMENT
??_C@_0M@DAFHLKNN@getPublicId@ DB 'getPublicId', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@
CONST	SEGMENT
??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@ DB '   change '
	DB	'code to use xmlEncodeEntitiesReentrant()', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@
CONST	SEGMENT
??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@ DB 'Deprecated API '
	DB	'xmlEncodeEntities() used', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@
CONST	SEGMENT
??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@ DB 'xmlUpgrade'
	DB	'OldNs() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@
CONST	SEGMENT
??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@ DB 'xmlNewGlob'
	DB	'alNs() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@
CONST	SEGMENT
??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@ DB 'xmlHandle'
	DB	'Entity() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@
CONST	SEGMENT
??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@ DB 'xmlParserH'
	DB	'andleReference() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@
CONST	SEGMENT
??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@ DB 'xmlScanNa'
	DB	'me() deprecated function reached', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@
CONST	SEGMENT
??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@ DB 'xmlParseN'
	DB	'amespace() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@
CONST	SEGMENT
??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@ DB 'xmlParseQu'
	DB	'otedString() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@
CONST	SEGMENT
??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@ DB 'xmlNamespa'
	DB	'ceParseNSDef() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@
CONST	SEGMENT
??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@ DB 'xmlNamespac'
	DB	'eParseQName() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@
CONST	SEGMENT
??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@ DB 'xmlNamespa'
	DB	'ceParseNCName() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@
CONST	SEGMENT
??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@ DB 'xmlDecode'
	DB	'Entities() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
_xmlFeaturesList DD FLAT:??_C@_08EBLJJHKN@validate@
	DD	FLAT:??_C@_0M@LFNKGPPF@load?5subset@
	DD	FLAT:??_C@_0M@JOFGOHIP@keep?5blanks@
	DD	FLAT:??_C@_0M@EPCDMNHL@disable?5SAX@
	DD	FLAT:??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
	DD	FLAT:??_C@_0BE@MFJOLEGC@substitute?5entities@
	DD	FLAT:??_C@_0BB@FNGHLMDK@gather?5line?5info@
	DD	FLAT:??_C@_09OBFNJHCP@user?5data@
	DD	FLAT:??_C@_07ELANCDBJ@is?5html@
	DD	FLAT:??_C@_0O@NMMOLLEF@is?5standalone@
	DD	FLAT:??_C@_0M@DGHBBHCN@stop?5parser@
	DD	FLAT:??_C@_08JEEDKNPB@document@
	DD	FLAT:??_C@_0P@NEKMCKKP@is?5well?5formed@
	DD	FLAT:??_C@_08EKBKNFNH@is?5valid@
	DD	FLAT:??_C@_09HIOCHIDE@SAX?5block@
	DD	FLAT:??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
	DD	FLAT:??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
	DD	FLAT:??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
	DD	FLAT:??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
	DD	FLAT:??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
	DD	FLAT:??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
	DD	FLAT:??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
	DD	FLAT:??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
	DD	FLAT:??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
	DD	FLAT:??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
	DD	FLAT:??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
	DD	FLAT:??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
	DD	FLAT:??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
	DD	FLAT:??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
	DD	FLAT:??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
	DD	FLAT:??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
	DD	FLAT:??_C@_0BH@COKKFLJA@SAX?5function?5reference@
	DD	FLAT:??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
	DD	FLAT:??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
	DD	FLAT:??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
	DD	FLAT:??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
	DD	FLAT:??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
	DD	FLAT:??_C@_0BD@DNENFEEM@SAX?5function?5error@
	DD	FLAT:??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
	DD	FLAT:??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
	DD	FLAT:??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
	DD	FLAT:??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
?warning@?1??xmlEncodeEntities@@9@9 DD 01H		; `xmlEncodeEntities'::`2'::warning
_DATA	ENDS
;	COMDAT ??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@
CONST	SEGMENT
??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@ DB 'htmlDecode'
	DB	'Entities() deprecated function reached', 0aH, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _htmlDecodeEntities
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_len$ = 12						; size = 4
_end$ = 16						; size = 1
_end2$ = 20						; size = 1
_end3$ = 24						; size = 1
_htmlDecodeEntities PROC				; COMDAT

; 54   : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 55   :     static int deprecated = 0;
; 56   : 
; 57   :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??htmlDecodeEntities@@9@9, 0
	jne	SHORT $LN2@htmlDecode

; 58   :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DC@FMAPIHAG@htmlDecodeEntities?$CI?$CJ?5deprecated@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 59   :                         "htmlDecodeEntities() deprecated function reached\n");
; 60   :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??htmlDecodeEntities@@9@9, 1
$LN2@htmlDecode:

; 61   :     }
; 62   :     return (NULL);

	xor	eax, eax

; 63   : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_htmlDecodeEntities ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlUpgradeOldNs
_TEXT	SEGMENT
_doc$ = 8						; size = 4
_xmlUpgradeOldNs PROC					; COMDAT

; 702  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 703  :     static int deprecated = 0;
; 704  : 
; 705  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlUpgradeOldNs@@9@9, 0
	jne	SHORT $LN1@xmlUpgrade

; 706  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0CP@KGKDLIM@xmlUpgradeOldNs?$CI?$CJ?5deprecated?5fu@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 707  :                         "xmlUpgradeOldNs() deprecated function reached\n");
; 708  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlUpgradeOldNs@@9@9, 1
$LN1@xmlUpgrade:

; 709  :     }
; 710  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlUpgradeOldNs ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlHandleEntity
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_entity$ = 12						; size = 4
_xmlHandleEntity PROC					; COMDAT

; 658  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 659  :     static int deprecated = 0;
; 660  : 
; 661  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlHandleEntity@@9@9, 0
	jne	SHORT $LN1@xmlHandleE

; 662  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0CP@LFMHECDH@xmlHandleEntity?$CI?$CJ?5deprecated?5fu@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 663  :                         "xmlHandleEntity() deprecated function reached\n");
; 664  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlHandleEntity@@9@9, 1
$LN1@xmlHandleE:

; 665  :     }
; 666  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlHandleEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlDecodeEntities
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_len$ = 12						; size = 4
_what$ = 16						; size = 4
_end$ = 20						; size = 1
_end2$ = 24						; size = 1
_end3$ = 28						; size = 1
_xmlDecodeEntities PROC					; COMDAT

; 415  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 416  :     static int deprecated = 0;
; 417  : 
; 418  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlDecodeEntities@@9@9, 0
	jne	SHORT $LN2@xmlDecodeE

; 419  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DB@POEMFHLM@xmlDecodeEntities?$CI?$CJ?5deprecated?5@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 420  :                         "xmlDecodeEntities() deprecated function reached\n");
; 421  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlDecodeEntities@@9@9, 1
$LN2@xmlDecodeE:

; 422  :     }
; 423  :     return (NULL);

	xor	eax, eax

; 424  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlDecodeEntities ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNamespaceParseQName
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_prefix$ = 12						; size = 4
_xmlNamespaceParseQName PROC				; COMDAT

; 479  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 480  : 
; 481  :     static int deprecated = 0;
; 482  : 
; 483  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlNamespaceParseQName@@9@9, 0
	jne	SHORT $LN2@xmlNamespa

; 484  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DG@MPOCNCN@xmlNamespaceParseQName?$CI?$CJ?5deprec@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 485  :                         "xmlNamespaceParseQName() deprecated function reached\n");
; 486  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNamespaceParseQName@@9@9, 1
$LN2@xmlNamespa:

; 487  :     }
; 488  :     return (NULL);

	xor	eax, eax

; 489  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlNamespaceParseQName ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlParserHandleReference
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlParserHandleReference PROC				; COMDAT

; 632  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 633  :     static int deprecated = 0;
; 634  : 
; 635  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlParserHandleReference@@9@9, 0
	jne	SHORT $LN1@xmlParserH

; 636  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DI@DPIOCKJJ@xmlParserHandleReference?$CI?$CJ?5depr@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 637  :                         "xmlParserHandleReference() deprecated function reached\n");
; 638  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlParserHandleReference@@9@9, 1
$LN1@xmlParserH:

; 639  :     }
; 640  : 
; 641  :     return;
; 642  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlParserHandleReference ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNamespaceParseNCName
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlNamespaceParseNCName PROC				; COMDAT

; 445  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 446  :     static int deprecated = 0;
; 447  : 
; 448  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlNamespaceParseNCName@@9@9, 0
	jne	SHORT $LN2@xmlNamespa

; 449  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DH@ICKCGFND@xmlNamespaceParseNCName?$CI?$CJ?5depre@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 450  :                         "xmlNamespaceParseNCName() deprecated function reached\n");
; 451  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNamespaceParseNCName@@9@9, 1
$LN2@xmlNamespa:

; 452  :     }
; 453  :     return (NULL);

	xor	eax, eax

; 454  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlNamespaceParseNCName ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlScanName
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlScanName PROC					; COMDAT

; 592  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 593  :     static int deprecated = 0;
; 594  : 
; 595  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlScanName@@9@9, 0
	jne	SHORT $LN2@xmlScanNam

; 596  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0CL@EEIIADKA@xmlScanName?$CI?$CJ?5deprecated?5functi@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 597  :                         "xmlScanName() deprecated function reached\n");
; 598  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlScanName@@9@9, 1
$LN2@xmlScanNam:

; 599  :     }
; 600  :     return (NULL);

	xor	eax, eax

; 601  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlScanName ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNamespaceParseNSDef
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlNamespaceParseNSDef PROC				; COMDAT

; 509  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 510  :     static int deprecated = 0;
; 511  : 
; 512  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlNamespaceParseNSDef@@9@9, 0
	jne	SHORT $LN2@xmlNamespa

; 513  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DG@MGBDBIFJ@xmlNamespaceParseNSDef?$CI?$CJ?5deprec@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 514  :                         "xmlNamespaceParseNSDef() deprecated function reached\n");
; 515  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNamespaceParseNSDef@@9@9, 1
$LN2@xmlNamespa:

; 516  :     }
; 517  :     return (NULL);

	xor	eax, eax

; 518  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlNamespaceParseNSDef ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlParseNamespace
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlParseNamespace PROC					; COMDAT

; 560  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 561  :     static int deprecated = 0;
; 562  : 
; 563  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlParseNamespace@@9@9, 0
	jne	SHORT $LN1@xmlParseNa

; 564  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DB@IEBMLCBD@xmlParseNamespace?$CI?$CJ?5deprecated?5@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 565  :                         "xmlParseNamespace() deprecated function reached\n");
; 566  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlParseNamespace@@9@9, 1
$LN1@xmlParseNa:

; 567  :     }
; 568  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlParseNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlParseQuotedString
_TEXT	SEGMENT
_ctxt$ = 8						; size = 4
_xmlParseQuotedString PROC				; COMDAT

; 532  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 533  :     static int deprecated = 0;
; 534  : 
; 535  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlParseQuotedString@@9@9, 0
	jne	SHORT $LN2@xmlParseQu

; 536  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DE@OBDNBOEL@xmlParseQuotedString?$CI?$CJ?5deprecat@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 537  :                         "xmlParseQuotedString() deprecated function reached\n");
; 538  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlParseQuotedString@@9@9, 1
$LN2@xmlParseQu:

; 539  :     }
; 540  :     return (NULL);

	xor	eax, eax

; 541  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlParseQuotedString ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _cdataBlock
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_value$ = 12						; size = 4
_len$ = 16						; size = 4
_cdataBlock PROC					; COMDAT

; 1336 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1337 :     DEPRECATED("cdataBlock")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@cdataBlock
	mov	esi, esp
	push	OFFSET ??_C@_0L@HKAOEGJH@cdataBlock@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@cdataBlock:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1338 :         xmlSAX2CDataBlock(ctx, value, len);

	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _value$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlSAX2CDataBlock
	add	esp, 12					; 0000000cH

; 1339 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_cdataBlock ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _comment
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_value$ = 12						; size = 4
_comment PROC						; COMDAT

; 1320 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1321 :     DEPRECATED("comment")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@comment
	mov	esi, esp
	push	OFFSET ??_C@_07GJGNEJFD@comment@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@comment:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1322 :         xmlSAX2Comment(ctx, value);

	mov	eax, DWORD PTR _value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_xmlSAX2Comment
	add	esp, 8

; 1323 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_comment ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _namespaceDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_href$ = 12						; size = 4
_prefix$ = 16						; size = 4
_namespaceDecl PROC					; COMDAT

; 1306 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1307 :     DEPRECATED("namespaceDecl")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@namespaceD
	mov	esi, esp
	push	OFFSET ??_C@_0O@BMLADFEG@namespaceDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@namespaceD:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1308 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_namespaceDecl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _checkNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_namespace$ = 12					; size = 4
_checkNamespace PROC					; COMDAT

; 1288 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1289 :     DEPRECATED("checkNamespace")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@checkNames
	mov	esi, esp
	push	OFFSET ??_C@_0P@HOABFNF@checkNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@checkNames:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1290 :         return (0);

	xor	eax, eax

; 1291 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_checkNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getNamespace PROC					; COMDAT

; 1268 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1269 :     DEPRECATED("getNamespace")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@getNamespa
	mov	esi, esp
	push	OFFSET ??_C@_0N@IBOPMOJD@getNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getNamespa:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1270 :         return (NULL);

	xor	eax, eax

; 1271 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_getNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _setNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_setNamespace PROC					; COMDAT

; 1252 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1253 :     DEPRECATED("setNamespace")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@setNamespa
	mov	esi, esp
	push	OFFSET ??_C@_0N@PFFBACNP@setNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@setNamespa:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1254 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_setNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _globalNamespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_href$ = 12						; size = 4
_prefix$ = 16						; size = 4
_globalNamespace PROC					; COMDAT

; 1236 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1237 :     DEPRECATED("globalNamespace")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@globalName
	mov	esi, esp
	push	OFFSET ??_C@_0BA@HBAGMMIM@globalNamespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@globalName:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1238 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_globalNamespace ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _processingInstruction
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_target$ = 12						; size = 4
_data$ = 16						; size = 4
_processingInstruction PROC				; COMDAT

; 1218 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1219 :     DEPRECATED("processingInstruction")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@processing
	mov	esi, esp
	push	OFFSET ??_C@_0BG@BKBGIBPJ@processingInstruction@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@processing:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1220 :         xmlSAX2ProcessingInstruction(ctx, target, data);

	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	mov	ecx, DWORD PTR _target$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlSAX2ProcessingInstruction
	add	esp, 12					; 0000000cH

; 1221 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_processingInstruction ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _ignorableWhitespace
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_ch$ = 12						; size = 4
_len$ = 16						; size = 4
_ignorableWhitespace PROC				; COMDAT

; 1202 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1203 :     DEPRECATED("ignorableWhitespace")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@ignorableW
	mov	esi, esp
	push	OFFSET ??_C@_0BE@JAKNEPAP@ignorableWhitespace@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@ignorableW:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1204 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_ignorableWhitespace ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _characters
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_ch$ = 12						; size = 4
_len$ = 16						; size = 4
_characters PROC					; COMDAT

; 1183 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1184 :     DEPRECATED("characters")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@characters
	mov	esi, esp
	push	OFFSET ??_C@_0L@MKHPBEDE@characters@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@characters:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1185 :         xmlSAX2Characters(ctx, ch, len);

	mov	eax, DWORD PTR _len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlSAX2Characters
	add	esp, 12					; 0000000cH

; 1186 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_characters ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _reference
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_reference PROC						; COMDAT

; 1167 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1168 :     DEPRECATED("reference")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@reference
	mov	esi, esp
	push	OFFSET ??_C@_09KJONPCOF@reference@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@reference:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1169 :         xmlSAX2Reference(ctx, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_xmlSAX2Reference
	add	esp, 8

; 1170 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_reference ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _endElement
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_endElement PROC					; COMDAT

; 1152 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1153 :     DEPRECATED("endElement")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@endElement
	mov	esi, esp
	push	OFFSET ??_C@_0L@GKEIAKOG@endElement@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@endElement:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1154 :     xmlSAX2EndElement(ctx, name);

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_xmlSAX2EndElement
	add	esp, 8

; 1155 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_endElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _startElement
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_fullname$ = 12						; size = 4
_atts$ = 16						; size = 4
_startElement PROC					; COMDAT

; 1138 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1139 :     xmlSAX2StartElement(ctx, fullname, atts);

	mov	eax, DWORD PTR _atts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fullname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlSAX2StartElement
	add	esp, 12					; 0000000cH

; 1140 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_startElement ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _attribute
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_fullname$ = 12						; size = 4
_value$ = 16						; size = 4
_attribute PROC						; COMDAT

; 1123 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1124 :     DEPRECATED("attribute")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@attribute
	mov	esi, esp
	push	OFFSET ??_C@_09HGIEBAJ@attribute@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@attribute:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1125 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_attribute ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _endDocument
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_endDocument PROC					; COMDAT

; 1102 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1103 :     DEPRECATED("endDocument")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@endDocumen
	mov	esi, esp
	push	OFFSET ??_C@_0M@OBDBPPLP@endDocument@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@endDocumen:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1104 :         xmlSAX2EndDocument(ctx);

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2EndDocument
	add	esp, 4

; 1105 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_endDocument ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _startDocument
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_startDocument PROC					; COMDAT

; 1087 : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1088 :    /* don't be too painful for glade users */
; 1089 :    /*  DEPRECATED("startDocument") */
; 1090 :         xmlSAX2StartDocument(ctx);

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2StartDocument
	add	esp, 4

; 1091 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_startDocument ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _unparsedEntityDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_publicId$ = 16						; size = 4
_systemId$ = 20						; size = 4
_notationName$ = 24					; size = 4
_unparsedEntityDecl PROC				; COMDAT

; 1056 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1057 :     DEPRECATED("unparsedEntityDecl")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@unparsedEn
	mov	esi, esp
	push	OFFSET ??_C@_0BD@HCBGHJEF@unparsedEntityDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@unparsedEn:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1058 :         xmlSAX2UnparsedEntityDecl(ctx, name, publicId, systemId,

	mov	eax, DWORD PTR _notationName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _systemId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _publicId$[ebp]
	push	edx
	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_xmlSAX2UnparsedEntityDecl
	add	esp, 20					; 00000014H

; 1059 :                                   notationName);
; 1060 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_unparsedEntityDecl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _notationDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_publicId$ = 16						; size = 4
_systemId$ = 20						; size = 4
_notationDecl PROC					; COMDAT

; 1036 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1037 :     DEPRECATED("notationDecl")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@notationDe
	mov	esi, esp
	push	OFFSET ??_C@_0N@CBDPABNA@notationDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@notationDe:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1038 :         xmlSAX2NotationDecl(ctx, name, publicId, systemId);

	mov	eax, DWORD PTR _systemId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _publicId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2NotationDecl
	add	esp, 16					; 00000010H

; 1039 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_notationDecl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _elementDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_type$ = 16						; size = 4
_content$ = 20						; size = 4
_elementDecl PROC					; COMDAT

; 1018 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1019 :     DEPRECATED("elementDecl")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@elementDec
	mov	esi, esp
	push	OFFSET ??_C@_0M@FJEPBGK@elementDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@elementDec:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1020 :         xmlSAX2ElementDecl(ctx, name, type, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2ElementDecl
	add	esp, 16					; 00000010H

; 1021 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_elementDecl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _attributeDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_elem$ = 12						; size = 4
_fullname$ = 16						; size = 4
_type$ = 20						; size = 4
_def$ = 24						; size = 4
_defaultValue$ = 28					; size = 4
_tree$ = 32						; size = 4
_attributeDecl PROC					; COMDAT

; 999  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1000 :     DEPRECATED("attributeDecl")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@attributeD
	mov	esi, esp
	push	OFFSET ??_C@_0O@BNECHEBL@attributeDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@attributeD:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1001 :         xmlSAX2AttributeDecl(ctx, elem, fullname, type, def, defaultValue,

	mov	eax, DWORD PTR _tree$[ebp]
	push	eax
	mov	ecx, DWORD PTR _defaultValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _def$[ebp]
	push	edx
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _fullname$[ebp]
	push	ecx
	mov	edx, DWORD PTR _elem$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2AttributeDecl
	add	esp, 28					; 0000001cH

; 1002 :                              tree);
; 1003 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_attributeDecl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _entityDecl
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_type$ = 16						; size = 4
_publicId$ = 20						; size = 4
_systemId$ = 24						; size = 4
_content$ = 28						; size = 4
_entityDecl PROC					; COMDAT

; 977  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 978  :     DEPRECATED("entityDecl")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@entityDecl
	mov	esi, esp
	push	OFFSET ??_C@_0L@OGGGJLI@entityDecl@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@entityDecl:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 979  :         xmlSAX2EntityDecl(ctx, name, type, publicId, systemId, content);

	mov	eax, DWORD PTR _content$[ebp]
	push	eax
	mov	ecx, DWORD PTR _systemId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _publicId$[ebp]
	push	edx
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _name$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlSAX2EntityDecl
	add	esp, 24					; 00000018H

; 980  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_entityDecl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _resolveEntity
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_publicId$ = 12						; size = 4
_systemId$ = 16						; size = 4
_resolveEntity PROC					; COMDAT

; 921  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 922  :     DEPRECATED("resolveEntity")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@resolveEnt
	mov	esi, esp
	push	OFFSET ??_C@_0O@LFLMJBFI@resolveEntity@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@resolveEnt:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 923  :         return (xmlSAX2ResolveEntity(ctx, publicId, systemId));

	mov	eax, DWORD PTR _systemId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _publicId$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	_xmlSAX2ResolveEntity
	add	esp, 12					; 0000000cH

; 924  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_resolveEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getParameterEntity
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_getParameterEntity PROC				; COMDAT

; 955  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 956  :     DEPRECATED("getParameterEntity")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@getParamet
	mov	esi, esp
	push	OFFSET ??_C@_0BD@KINJKNIJ@getParameterEntity@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getParamet:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 957  :         return (xmlSAX2GetParameterEntity(ctx, name));

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_xmlSAX2GetParameterEntity
	add	esp, 8

; 958  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_getParameterEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getEntity
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_getEntity PROC						; COMDAT

; 938  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 939  :     DEPRECATED("getEntity")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@getEntity
	mov	esi, esp
	push	OFFSET ??_C@_09NCBEBLEA@getEntity@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getEntity:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 940  :         return (xmlSAX2GetEntity(ctx, name));

	mov	eax, DWORD PTR _name$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	_xmlSAX2GetEntity
	add	esp, 8

; 941  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_getEntity ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _externalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_ExternalID$ = 16					; size = 4
_SystemID$ = 20						; size = 4
_externalSubset PROC					; COMDAT

; 898  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 899  :     DEPRECATED("externalSubset")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@externalSu
	mov	esi, esp
	push	OFFSET ??_C@_0P@DJMGKJNF@externalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@externalSu:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 900  :         xmlSAX2ExternalSubset(ctx, name, ExternalID, SystemID);

	mov	eax, DWORD PTR _SystemID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ExternalID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2ExternalSubset
	add	esp, 16					; 00000010H

; 901  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_externalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _internalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_name$ = 12						; size = 4
_ExternalID$ = 16					; size = 4
_SystemID$ = 20						; size = 4
_internalSubset PROC					; COMDAT

; 880  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 881  :     DEPRECATED("internalSubset")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@internalSu
	mov	esi, esp
	push	OFFSET ??_C@_0P@OCEDHHOL@internalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@internalSu:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 882  :         xmlSAX2InternalSubset(ctx, name, ExternalID, SystemID);

	mov	eax, DWORD PTR _SystemID$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ExternalID$[ebp]
	push	ecx
	mov	edx, DWORD PTR _name$[ebp]
	push	edx
	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2InternalSubset
	add	esp, 16					; 00000010H

; 883  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_internalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _hasExternalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_hasExternalSubset PROC					; COMDAT

; 862  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 863  :     DEPRECATED("hasExternalSubset")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@hasExterna
	mov	esi, esp
	push	OFFSET ??_C@_0BC@PDLMKGBL@hasExternalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@hasExterna:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 864  :         return (xmlSAX2HasExternalSubset(ctx));

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2HasExternalSubset
	add	esp, 4

; 865  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_hasExternalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _hasInternalSubset
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_hasInternalSubset PROC					; COMDAT

; 846  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 847  :     DEPRECATED("hasInternalSubset")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@hasInterna
	mov	esi, esp
	push	OFFSET ??_C@_0BC@CIDJHICF@hasInternalSubset@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@hasInterna:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 848  :         return (xmlSAX2HasInternalSubset(ctx));

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2HasInternalSubset
	add	esp, 4

; 849  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_hasInternalSubset ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _isStandalone
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_isStandalone PROC					; COMDAT

; 830  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 831  :     DEPRECATED("isStandalone")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@isStandalo
	mov	esi, esp
	push	OFFSET ??_C@_0N@GDKLDDLO@isStandalone@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@isStandalo:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 832  :         return (xmlSAX2IsStandalone(ctx));

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2IsStandalone
	add	esp, 4

; 833  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_isStandalone ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getColumnNumber
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getColumnNumber PROC					; COMDAT

; 814  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 815  :     DEPRECATED("getColumnNumber")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@getColumnN
	mov	esi, esp
	push	OFFSET ??_C@_0BA@MBKHJKLG@getColumnNumber@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getColumnN:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 816  :         return (xmlSAX2GetColumnNumber(ctx));

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2GetColumnNumber
	add	esp, 4

; 817  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_getColumnNumber ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getLineNumber
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getLineNumber PROC					; COMDAT

; 798  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 799  :     DEPRECATED("getLineNumber")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@getLineNum
	mov	esi, esp
	push	OFFSET ??_C@_0O@OCINCMPB@getLineNumber@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getLineNum:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 800  :         return (xmlSAX2GetLineNumber(ctx));

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2GetLineNumber
	add	esp, 4

; 801  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_getLineNumber ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _setDocumentLocator
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_loc$ = 12						; size = 4
_setDocumentLocator PROC				; COMDAT

; 1074 : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 1075 :     DEPRECATED("setDocumentLocator")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@setDocumen
	mov	esi, esp
	push	OFFSET ??_C@_0BD@DHECJBOB@setDocumentLocator@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@setDocumen:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 1076 : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_setDocumentLocator ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getSystemId
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getSystemId PROC					; COMDAT

; 782  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 783  :     DEPRECATED("getSystemId")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@getSystemI
	mov	esi, esp
	push	OFFSET ??_C@_0M@FFHGBOOJ@getSystemId@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getSystemI:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 784  :         return (xmlSAX2GetSystemId(ctx));

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2GetSystemId
	add	esp, 4

; 785  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_getSystemId ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _getPublicId
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
_getPublicId PROC					; COMDAT

; 765  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 766  :     DEPRECATED("getPublicId")

	cmp	DWORD PTR _deprecated_v1_msg, 0
	jne	SHORT $LN2@getPublicI
	mov	esi, esp
	push	OFFSET ??_C@_0M@DAFHLKNN@getPublicId@
	push	OFFSET ??_C@_0CF@IBLEBJPG@Use?5of?5deprecated?5SAXv1?5functio@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@getPublicI:
	mov	edx, DWORD PTR _deprecated_v1_msg
	add	edx, 1
	mov	DWORD PTR _deprecated_v1_msg, edx

; 767  :         return (xmlSAX2GetPublicId(ctx));

	mov	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	_xmlSAX2GetPublicId
	add	esp, 4

; 768  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_getPublicId ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlSetFeature
_TEXT	SEGMENT
tv404 = -804						; size = 4
tv1397 = -800						; size = 4
tv1392 = -794						; size = 1
tv1385 = -793						; size = 1
tv1380 = -792						; size = 4
tv1382 = -788						; size = 4
tv397 = -784						; size = 4
tv1373 = -780						; size = 4
tv1368 = -774						; size = 1
tv1361 = -773						; size = 1
tv1356 = -772						; size = 4
tv1358 = -768						; size = 4
tv390 = -764						; size = 4
tv1349 = -760						; size = 4
tv1344 = -754						; size = 1
tv1337 = -753						; size = 1
tv1332 = -752						; size = 4
tv1334 = -748						; size = 4
tv351 = -744						; size = 4
tv1325 = -740						; size = 4
tv1320 = -734						; size = 1
tv1313 = -733						; size = 1
tv1308 = -732						; size = 4
tv1310 = -728						; size = 4
tv344 = -724						; size = 4
tv1301 = -720						; size = 4
tv1296 = -714						; size = 1
tv1289 = -713						; size = 1
tv1284 = -712						; size = 4
tv1286 = -708						; size = 4
tv337 = -704						; size = 4
tv1277 = -700						; size = 4
tv1272 = -694						; size = 1
tv1265 = -693						; size = 1
tv1260 = -692						; size = 4
tv1262 = -688						; size = 4
tv330 = -684						; size = 4
tv1253 = -680						; size = 4
tv1248 = -674						; size = 1
tv1241 = -673						; size = 1
tv1236 = -672						; size = 4
tv1238 = -668						; size = 4
tv323 = -664						; size = 4
tv1229 = -660						; size = 4
tv1224 = -654						; size = 1
tv1217 = -653						; size = 1
tv1212 = -652						; size = 4
tv1214 = -648						; size = 4
tv316 = -644						; size = 4
tv1205 = -640						; size = 4
tv1200 = -634						; size = 1
tv1193 = -633						; size = 1
tv1188 = -632						; size = 4
tv1190 = -628						; size = 4
tv309 = -624						; size = 4
tv1181 = -620						; size = 4
tv1176 = -614						; size = 1
tv1169 = -613						; size = 1
tv1164 = -612						; size = 4
tv1166 = -608						; size = 4
tv302 = -604						; size = 4
tv1157 = -600						; size = 4
tv1152 = -594						; size = 1
tv1145 = -593						; size = 1
tv1140 = -592						; size = 4
tv1142 = -588						; size = 4
tv295 = -584						; size = 4
tv1133 = -580						; size = 4
tv1128 = -574						; size = 1
tv1121 = -573						; size = 1
tv1116 = -572						; size = 4
tv1118 = -568						; size = 4
tv288 = -564						; size = 4
tv1109 = -560						; size = 4
tv1104 = -554						; size = 1
tv1097 = -553						; size = 1
tv1092 = -552						; size = 4
tv1094 = -548						; size = 4
tv281 = -544						; size = 4
tv1085 = -540						; size = 4
tv1080 = -534						; size = 1
tv1073 = -533						; size = 1
tv1068 = -532						; size = 4
tv1070 = -528						; size = 4
tv274 = -524						; size = 4
tv1061 = -520						; size = 4
tv1056 = -514						; size = 1
tv1049 = -513						; size = 1
tv1044 = -512						; size = 4
tv1046 = -508						; size = 4
tv267 = -504						; size = 4
tv1037 = -500						; size = 4
tv1032 = -494						; size = 1
tv1025 = -493						; size = 1
tv1020 = -492						; size = 4
tv1022 = -488						; size = 4
tv260 = -484						; size = 4
tv1013 = -480						; size = 4
tv1008 = -474						; size = 1
tv1001 = -473						; size = 1
tv996 = -472						; size = 4
tv998 = -468						; size = 4
tv253 = -464						; size = 4
tv989 = -460						; size = 4
tv984 = -454						; size = 1
tv977 = -453						; size = 1
tv972 = -452						; size = 4
tv974 = -448						; size = 4
tv246 = -444						; size = 4
tv965 = -440						; size = 4
tv960 = -434						; size = 1
tv953 = -433						; size = 1
tv948 = -432						; size = 4
tv950 = -428						; size = 4
tv239 = -424						; size = 4
tv941 = -420						; size = 4
tv936 = -414						; size = 1
tv929 = -413						; size = 1
tv924 = -412						; size = 4
tv926 = -408						; size = 4
tv232 = -404						; size = 4
tv917 = -400						; size = 4
tv912 = -394						; size = 1
tv905 = -393						; size = 1
tv900 = -392						; size = 4
tv902 = -388						; size = 4
tv225 = -384						; size = 4
tv893 = -380						; size = 4
tv888 = -374						; size = 1
tv881 = -373						; size = 1
tv876 = -372						; size = 4
tv878 = -368						; size = 4
tv218 = -364						; size = 4
tv869 = -360						; size = 4
tv864 = -354						; size = 1
tv857 = -353						; size = 1
tv852 = -352						; size = 4
tv854 = -348						; size = 4
tv211 = -344						; size = 4
tv845 = -340						; size = 4
tv840 = -334						; size = 1
tv833 = -333						; size = 1
tv828 = -332						; size = 4
tv830 = -328						; size = 4
tv204 = -324						; size = 4
tv821 = -320						; size = 4
tv816 = -314						; size = 1
tv809 = -313						; size = 1
tv804 = -312						; size = 4
tv806 = -308						; size = 4
tv197 = -304						; size = 4
tv797 = -300						; size = 4
tv792 = -294						; size = 1
tv785 = -293						; size = 1
tv780 = -292						; size = 4
tv782 = -288						; size = 4
tv190 = -284						; size = 4
tv773 = -280						; size = 4
tv768 = -274						; size = 1
tv761 = -273						; size = 1
tv756 = -272						; size = 4
tv758 = -268						; size = 4
tv184 = -264						; size = 4
tv749 = -260						; size = 4
tv744 = -254						; size = 1
tv737 = -253						; size = 1
tv732 = -252						; size = 4
tv734 = -248						; size = 4
tv178 = -244						; size = 4
tv725 = -240						; size = 4
tv720 = -234						; size = 1
tv713 = -233						; size = 1
tv708 = -232						; size = 4
tv710 = -228						; size = 4
tv172 = -224						; size = 4
tv701 = -220						; size = 4
tv696 = -214						; size = 1
tv689 = -213						; size = 1
tv684 = -212						; size = 4
tv686 = -208						; size = 4
tv166 = -204						; size = 4
tv677 = -200						; size = 4
tv672 = -194						; size = 1
tv665 = -193						; size = 1
tv660 = -192						; size = 4
tv662 = -188						; size = 4
tv160 = -184						; size = 4
tv653 = -180						; size = 4
tv648 = -174						; size = 1
tv641 = -173						; size = 1
tv636 = -172						; size = 4
tv638 = -168						; size = 4
tv154 = -164						; size = 4
tv629 = -160						; size = 4
tv624 = -154						; size = 1
tv617 = -153						; size = 1
tv612 = -152						; size = 4
tv614 = -148						; size = 4
tv148 = -144						; size = 4
tv605 = -140						; size = 4
tv600 = -134						; size = 1
tv593 = -133						; size = 1
tv588 = -132						; size = 4
tv590 = -128						; size = 4
tv142 = -124						; size = 4
tv581 = -120						; size = 4
tv576 = -114						; size = 1
tv569 = -113						; size = 1
tv564 = -112						; size = 4
tv566 = -108						; size = 4
tv136 = -104						; size = 4
tv557 = -100						; size = 4
tv552 = -94						; size = 1
tv545 = -93						; size = 1
tv540 = -92						; size = 4
tv542 = -88						; size = 4
tv130 = -84						; size = 4
tv533 = -80						; size = 4
tv528 = -74						; size = 1
tv521 = -73						; size = 1
tv516 = -72						; size = 4
tv518 = -68						; size = 4
tv92 = -64						; size = 4
tv509 = -60						; size = 4
tv504 = -54						; size = 1
tv497 = -53						; size = 1
tv492 = -52						; size = 4
tv494 = -48						; size = 4
tv86 = -44						; size = 4
tv485 = -40						; size = 4
tv480 = -34						; size = 1
tv473 = -33						; size = 1
tv468 = -32						; size = 4
tv470 = -28						; size = 4
tv70 = -24						; size = 4
tv454 = -20						; size = 4
tv449 = -14						; size = 1
tv442 = -13						; size = 1
tv437 = -12						; size = 4
tv439 = -8						; size = 4
_newvalidate$1 = -4					; size = 4
_ctxt$ = 8						; size = 4
_name$ = 12						; size = 4
_value$ = 16						; size = 4
_xmlSetFeature PROC					; COMDAT

; 282  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 804				; 00000324H
	push	edi
	lea	edi, DWORD PTR [ebp-804]
	mov	ecx, 201				; 000000c9H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 283  :     if ((ctxt == NULL) || (name == NULL) || (value == NULL))

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN3@xmlSetFeat
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlSetFeat
	cmp	DWORD PTR _value$[ebp], 0
	jne	SHORT $LN2@xmlSetFeat
$LN3@xmlSetFeat:

; 284  :         return (-1);

	or	eax, -1
	jmp	$LN1@xmlSetFeat
$LN2@xmlSetFeat:

; 285  : 
; 286  :     if (!strcmp(name, "validate")) {

	mov	DWORD PTR tv439[ebp], OFFSET ??_C@_08EBLJJHKN@validate@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv437[ebp], eax
$LL88@xmlSetFeat:
	mov	ecx, DWORD PTR tv437[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv442[ebp], dl
	mov	eax, DWORD PTR tv439[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN89@xmlSetFeat
	cmp	BYTE PTR tv442[ebp], 0
	je	SHORT $LN90@xmlSetFeat
	mov	ecx, DWORD PTR tv437[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv449[ebp], dl
	mov	eax, DWORD PTR tv439[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN89@xmlSetFeat
	add	DWORD PTR tv437[ebp], 2
	add	DWORD PTR tv439[ebp], 2
	cmp	BYTE PTR tv449[ebp], 0
	jne	SHORT $LL88@xmlSetFeat
$LN90@xmlSetFeat:
	mov	DWORD PTR tv454[ebp], 0
	jmp	SHORT $LN91@xmlSetFeat
$LN89@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv454[ebp], ecx
$LN91@xmlSetFeat:
	mov	edx, DWORD PTR tv454[ebp]
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 0
	jne	SHORT $LN4@xmlSetFeat

; 287  :         int newvalidate = *((int *) value);

	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _newvalidate$1[ebp], ecx

; 288  : 
; 289  :         if ((!ctxt->validate) && (newvalidate != 0)) {

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+104], 0
	jne	SHORT $LN6@xmlSetFeat
	cmp	DWORD PTR _newvalidate$1[ebp], 0
	je	SHORT $LN6@xmlSetFeat

; 290  :             if (ctxt->vctxt.warning == NULL)

	mov	eax, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [eax+116], 0
	jne	SHORT $LN7@xmlSetFeat

; 291  :                 ctxt->vctxt.warning = xmlParserValidityWarning;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+116], OFFSET _xmlParserValidityWarning
$LN7@xmlSetFeat:

; 292  :             if (ctxt->vctxt.error == NULL)

	mov	edx, DWORD PTR _ctxt$[ebp]
	cmp	DWORD PTR [edx+112], 0
	jne	SHORT $LN8@xmlSetFeat

; 293  :                 ctxt->vctxt.error = xmlParserValidityError;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [eax+112], OFFSET _xmlParserValidityError
$LN8@xmlSetFeat:

; 294  :             ctxt->vctxt.nodeMax = 0;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	DWORD PTR [ecx+128], 0
$LN6@xmlSetFeat:

; 295  :         }
; 296  :         ctxt->validate = newvalidate;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR _newvalidate$1[ebp]
	mov	DWORD PTR [edx+104], eax
	jmp	$LN5@xmlSetFeat
$LN4@xmlSetFeat:

; 297  :     } else if (!strcmp(name, "keep blanks")) {

	mov	DWORD PTR tv470[ebp], OFFSET ??_C@_0M@JOFGOHIP@keep?5blanks@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv468[ebp], ecx
$LL92@xmlSetFeat:
	mov	edx, DWORD PTR tv468[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv473[ebp], al
	mov	ecx, DWORD PTR tv470[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN93@xmlSetFeat
	cmp	BYTE PTR tv473[ebp], 0
	je	SHORT $LN94@xmlSetFeat
	mov	edx, DWORD PTR tv468[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv480[ebp], al
	mov	ecx, DWORD PTR tv470[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN93@xmlSetFeat
	add	DWORD PTR tv468[ebp], 2
	add	DWORD PTR tv470[ebp], 2
	cmp	BYTE PTR tv480[ebp], 0
	jne	SHORT $LL92@xmlSetFeat
$LN94@xmlSetFeat:
	mov	DWORD PTR tv485[ebp], 0
	jmp	SHORT $LN95@xmlSetFeat
$LN93@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv485[ebp], edx
$LN95@xmlSetFeat:
	mov	eax, DWORD PTR tv485[ebp]
	mov	DWORD PTR tv86[ebp], eax
	cmp	DWORD PTR tv86[ebp], 0
	jne	SHORT $LN9@xmlSetFeat

; 298  :         ctxt->keepBlanks = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+208], eax
	jmp	$LN5@xmlSetFeat
$LN9@xmlSetFeat:

; 299  :     } else if (!strcmp(name, "disable SAX")) {

	mov	DWORD PTR tv494[ebp], OFFSET ??_C@_0M@EPCDMNHL@disable?5SAX@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv492[ebp], ecx
$LL96@xmlSetFeat:
	mov	edx, DWORD PTR tv492[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv497[ebp], al
	mov	ecx, DWORD PTR tv494[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN97@xmlSetFeat
	cmp	BYTE PTR tv497[ebp], 0
	je	SHORT $LN98@xmlSetFeat
	mov	edx, DWORD PTR tv492[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv504[ebp], al
	mov	ecx, DWORD PTR tv494[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN97@xmlSetFeat
	add	DWORD PTR tv492[ebp], 2
	add	DWORD PTR tv494[ebp], 2
	cmp	BYTE PTR tv504[ebp], 0
	jne	SHORT $LL96@xmlSetFeat
$LN98@xmlSetFeat:
	mov	DWORD PTR tv509[ebp], 0
	jmp	SHORT $LN99@xmlSetFeat
$LN97@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv509[ebp], edx
$LN99@xmlSetFeat:
	mov	eax, DWORD PTR tv509[ebp]
	mov	DWORD PTR tv92[ebp], eax
	cmp	DWORD PTR tv92[ebp], 0
	jne	SHORT $LN11@xmlSetFeat

; 300  :         ctxt->disableSAX = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+212], eax
	jmp	$LN5@xmlSetFeat
$LN11@xmlSetFeat:

; 301  :     } else if (!strcmp(name, "fetch external entities")) {

	mov	DWORD PTR tv518[ebp], OFFSET ??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv516[ebp], ecx
$LL100@xmlSetFeat:
	mov	edx, DWORD PTR tv516[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv521[ebp], al
	mov	ecx, DWORD PTR tv518[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN101@xmlSetFeat
	cmp	BYTE PTR tv521[ebp], 0
	je	SHORT $LN102@xmlSetFeat
	mov	edx, DWORD PTR tv516[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv528[ebp], al
	mov	ecx, DWORD PTR tv518[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN101@xmlSetFeat
	add	DWORD PTR tv516[ebp], 2
	add	DWORD PTR tv518[ebp], 2
	cmp	BYTE PTR tv528[ebp], 0
	jne	SHORT $LL100@xmlSetFeat
$LN102@xmlSetFeat:
	mov	DWORD PTR tv533[ebp], 0
	jmp	SHORT $LN103@xmlSetFeat
$LN101@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv533[ebp], edx
$LN103@xmlSetFeat:
	mov	eax, DWORD PTR tv533[ebp]
	mov	DWORD PTR tv130[ebp], eax
	cmp	DWORD PTR tv130[ebp], 0
	jne	SHORT $LN13@xmlSetFeat

; 302  :         ctxt->loadsubset = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+276], eax
	jmp	$LN5@xmlSetFeat
$LN13@xmlSetFeat:

; 303  :     } else if (!strcmp(name, "substitute entities")) {

	mov	DWORD PTR tv542[ebp], OFFSET ??_C@_0BE@MFJOLEGC@substitute?5entities@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv540[ebp], ecx
$LL104@xmlSetFeat:
	mov	edx, DWORD PTR tv540[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv545[ebp], al
	mov	ecx, DWORD PTR tv542[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN105@xmlSetFeat
	cmp	BYTE PTR tv545[ebp], 0
	je	SHORT $LN106@xmlSetFeat
	mov	edx, DWORD PTR tv540[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv552[ebp], al
	mov	ecx, DWORD PTR tv542[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN105@xmlSetFeat
	add	DWORD PTR tv540[ebp], 2
	add	DWORD PTR tv542[ebp], 2
	cmp	BYTE PTR tv552[ebp], 0
	jne	SHORT $LL104@xmlSetFeat
$LN106@xmlSetFeat:
	mov	DWORD PTR tv557[ebp], 0
	jmp	SHORT $LN107@xmlSetFeat
$LN105@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv557[ebp], edx
$LN107@xmlSetFeat:
	mov	eax, DWORD PTR tv557[ebp]
	mov	DWORD PTR tv136[ebp], eax
	cmp	DWORD PTR tv136[ebp], 0
	jne	SHORT $LN15@xmlSetFeat

; 304  :         ctxt->replaceEntities = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+16], eax
	jmp	$LN5@xmlSetFeat
$LN15@xmlSetFeat:

; 305  :     } else if (!strcmp(name, "gather line info")) {

	mov	DWORD PTR tv566[ebp], OFFSET ??_C@_0BB@FNGHLMDK@gather?5line?5info@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv564[ebp], ecx
$LL108@xmlSetFeat:
	mov	edx, DWORD PTR tv564[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv569[ebp], al
	mov	ecx, DWORD PTR tv566[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN109@xmlSetFeat
	cmp	BYTE PTR tv569[ebp], 0
	je	SHORT $LN110@xmlSetFeat
	mov	edx, DWORD PTR tv564[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv576[ebp], al
	mov	ecx, DWORD PTR tv566[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN109@xmlSetFeat
	add	DWORD PTR tv564[ebp], 2
	add	DWORD PTR tv566[ebp], 2
	cmp	BYTE PTR tv576[ebp], 0
	jne	SHORT $LL108@xmlSetFeat
$LN110@xmlSetFeat:
	mov	DWORD PTR tv581[ebp], 0
	jmp	SHORT $LN111@xmlSetFeat
$LN109@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv581[ebp], edx
$LN111@xmlSetFeat:
	mov	eax, DWORD PTR tv581[ebp]
	mov	DWORD PTR tv142[ebp], eax
	cmp	DWORD PTR tv142[ebp], 0
	jne	SHORT $LN17@xmlSetFeat

; 306  :         ctxt->record_info = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+68], eax
	jmp	$LN5@xmlSetFeat
$LN17@xmlSetFeat:

; 307  :     } else if (!strcmp(name, "user data")) {

	mov	DWORD PTR tv590[ebp], OFFSET ??_C@_09OBFNJHCP@user?5data@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv588[ebp], ecx
$LL112@xmlSetFeat:
	mov	edx, DWORD PTR tv588[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv593[ebp], al
	mov	ecx, DWORD PTR tv590[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN113@xmlSetFeat
	cmp	BYTE PTR tv593[ebp], 0
	je	SHORT $LN114@xmlSetFeat
	mov	edx, DWORD PTR tv588[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv600[ebp], al
	mov	ecx, DWORD PTR tv590[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN113@xmlSetFeat
	add	DWORD PTR tv588[ebp], 2
	add	DWORD PTR tv590[ebp], 2
	cmp	BYTE PTR tv600[ebp], 0
	jne	SHORT $LL112@xmlSetFeat
$LN114@xmlSetFeat:
	mov	DWORD PTR tv605[ebp], 0
	jmp	SHORT $LN115@xmlSetFeat
$LN113@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv605[ebp], edx
$LN115@xmlSetFeat:
	mov	eax, DWORD PTR tv605[ebp]
	mov	DWORD PTR tv148[ebp], eax
	cmp	DWORD PTR tv148[ebp], 0
	jne	SHORT $LN19@xmlSetFeat

; 308  :         ctxt->userData = *((void **) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+4], eax
	jmp	$LN5@xmlSetFeat
$LN19@xmlSetFeat:

; 309  :     } else if (!strcmp(name, "is html")) {

	mov	DWORD PTR tv614[ebp], OFFSET ??_C@_07ELANCDBJ@is?5html@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv612[ebp], ecx
$LL116@xmlSetFeat:
	mov	edx, DWORD PTR tv612[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv617[ebp], al
	mov	ecx, DWORD PTR tv614[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN117@xmlSetFeat
	cmp	BYTE PTR tv617[ebp], 0
	je	SHORT $LN118@xmlSetFeat
	mov	edx, DWORD PTR tv612[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv624[ebp], al
	mov	ecx, DWORD PTR tv614[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN117@xmlSetFeat
	add	DWORD PTR tv612[ebp], 2
	add	DWORD PTR tv614[ebp], 2
	cmp	BYTE PTR tv624[ebp], 0
	jne	SHORT $LL116@xmlSetFeat
$LN118@xmlSetFeat:
	mov	DWORD PTR tv629[ebp], 0
	jmp	SHORT $LN119@xmlSetFeat
$LN117@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv629[ebp], edx
$LN119@xmlSetFeat:
	mov	eax, DWORD PTR tv629[ebp]
	mov	DWORD PTR tv154[ebp], eax
	cmp	DWORD PTR tv154[ebp], 0
	jne	SHORT $LN21@xmlSetFeat

; 310  :         ctxt->html = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+32], eax
	jmp	$LN5@xmlSetFeat
$LN21@xmlSetFeat:

; 311  :     } else if (!strcmp(name, "is standalone")) {

	mov	DWORD PTR tv638[ebp], OFFSET ??_C@_0O@NMMOLLEF@is?5standalone@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv636[ebp], ecx
$LL120@xmlSetFeat:
	mov	edx, DWORD PTR tv636[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv641[ebp], al
	mov	ecx, DWORD PTR tv638[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN121@xmlSetFeat
	cmp	BYTE PTR tv641[ebp], 0
	je	SHORT $LN122@xmlSetFeat
	mov	edx, DWORD PTR tv636[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv648[ebp], al
	mov	ecx, DWORD PTR tv638[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN121@xmlSetFeat
	add	DWORD PTR tv636[ebp], 2
	add	DWORD PTR tv638[ebp], 2
	cmp	BYTE PTR tv648[ebp], 0
	jne	SHORT $LL120@xmlSetFeat
$LN122@xmlSetFeat:
	mov	DWORD PTR tv653[ebp], 0
	jmp	SHORT $LN123@xmlSetFeat
$LN121@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv653[ebp], edx
$LN123@xmlSetFeat:
	mov	eax, DWORD PTR tv653[ebp]
	mov	DWORD PTR tv160[ebp], eax
	cmp	DWORD PTR tv160[ebp], 0
	jne	SHORT $LN23@xmlSetFeat

; 312  :         ctxt->standalone = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+28], eax
	jmp	$LN5@xmlSetFeat
$LN23@xmlSetFeat:

; 313  :     } else if (!strcmp(name, "document")) {

	mov	DWORD PTR tv662[ebp], OFFSET ??_C@_08JEEDKNPB@document@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv660[ebp], ecx
$LL124@xmlSetFeat:
	mov	edx, DWORD PTR tv660[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv665[ebp], al
	mov	ecx, DWORD PTR tv662[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN125@xmlSetFeat
	cmp	BYTE PTR tv665[ebp], 0
	je	SHORT $LN126@xmlSetFeat
	mov	edx, DWORD PTR tv660[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv672[ebp], al
	mov	ecx, DWORD PTR tv662[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN125@xmlSetFeat
	add	DWORD PTR tv660[ebp], 2
	add	DWORD PTR tv662[ebp], 2
	cmp	BYTE PTR tv672[ebp], 0
	jne	SHORT $LL124@xmlSetFeat
$LN126@xmlSetFeat:
	mov	DWORD PTR tv677[ebp], 0
	jmp	SHORT $LN127@xmlSetFeat
$LN125@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv677[ebp], edx
$LN127@xmlSetFeat:
	mov	eax, DWORD PTR tv677[ebp]
	mov	DWORD PTR tv166[ebp], eax
	cmp	DWORD PTR tv166[ebp], 0
	jne	SHORT $LN25@xmlSetFeat

; 314  :         ctxt->myDoc = *((xmlDocPtr *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	jmp	$LN5@xmlSetFeat
$LN25@xmlSetFeat:

; 315  :     } else if (!strcmp(name, "is well formed")) {

	mov	DWORD PTR tv686[ebp], OFFSET ??_C@_0P@NEKMCKKP@is?5well?5formed@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv684[ebp], ecx
$LL128@xmlSetFeat:
	mov	edx, DWORD PTR tv684[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv689[ebp], al
	mov	ecx, DWORD PTR tv686[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN129@xmlSetFeat
	cmp	BYTE PTR tv689[ebp], 0
	je	SHORT $LN130@xmlSetFeat
	mov	edx, DWORD PTR tv684[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv696[ebp], al
	mov	ecx, DWORD PTR tv686[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN129@xmlSetFeat
	add	DWORD PTR tv684[ebp], 2
	add	DWORD PTR tv686[ebp], 2
	cmp	BYTE PTR tv696[ebp], 0
	jne	SHORT $LL128@xmlSetFeat
$LN130@xmlSetFeat:
	mov	DWORD PTR tv701[ebp], 0
	jmp	SHORT $LN131@xmlSetFeat
$LN129@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv701[ebp], edx
$LN131@xmlSetFeat:
	mov	eax, DWORD PTR tv701[ebp]
	mov	DWORD PTR tv172[ebp], eax
	cmp	DWORD PTR tv172[ebp], 0
	jne	SHORT $LN27@xmlSetFeat

; 316  :         ctxt->wellFormed = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+12], eax
	jmp	$LN5@xmlSetFeat
$LN27@xmlSetFeat:

; 317  :     } else if (!strcmp(name, "is valid")) {

	mov	DWORD PTR tv710[ebp], OFFSET ??_C@_08EKBKNFNH@is?5valid@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv708[ebp], ecx
$LL132@xmlSetFeat:
	mov	edx, DWORD PTR tv708[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv713[ebp], al
	mov	ecx, DWORD PTR tv710[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN133@xmlSetFeat
	cmp	BYTE PTR tv713[ebp], 0
	je	SHORT $LN134@xmlSetFeat
	mov	edx, DWORD PTR tv708[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv720[ebp], al
	mov	ecx, DWORD PTR tv710[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN133@xmlSetFeat
	add	DWORD PTR tv708[ebp], 2
	add	DWORD PTR tv710[ebp], 2
	cmp	BYTE PTR tv720[ebp], 0
	jne	SHORT $LL132@xmlSetFeat
$LN134@xmlSetFeat:
	mov	DWORD PTR tv725[ebp], 0
	jmp	SHORT $LN135@xmlSetFeat
$LN133@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv725[ebp], edx
$LN135@xmlSetFeat:
	mov	eax, DWORD PTR tv725[ebp]
	mov	DWORD PTR tv178[ebp], eax
	cmp	DWORD PTR tv178[ebp], 0
	jne	SHORT $LN29@xmlSetFeat

; 318  :         ctxt->valid = *((int *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+100], eax
	jmp	$LN5@xmlSetFeat
$LN29@xmlSetFeat:

; 319  :     } else if (!strcmp(name, "SAX block")) {

	mov	DWORD PTR tv734[ebp], OFFSET ??_C@_09HIOCHIDE@SAX?5block@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv732[ebp], ecx
$LL136@xmlSetFeat:
	mov	edx, DWORD PTR tv732[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv737[ebp], al
	mov	ecx, DWORD PTR tv734[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN137@xmlSetFeat
	cmp	BYTE PTR tv737[ebp], 0
	je	SHORT $LN138@xmlSetFeat
	mov	edx, DWORD PTR tv732[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv744[ebp], al
	mov	ecx, DWORD PTR tv734[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN137@xmlSetFeat
	add	DWORD PTR tv732[ebp], 2
	add	DWORD PTR tv734[ebp], 2
	cmp	BYTE PTR tv744[ebp], 0
	jne	SHORT $LL136@xmlSetFeat
$LN138@xmlSetFeat:
	mov	DWORD PTR tv749[ebp], 0
	jmp	SHORT $LN139@xmlSetFeat
$LN137@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv749[ebp], edx
$LN139@xmlSetFeat:
	mov	eax, DWORD PTR tv749[ebp]
	mov	DWORD PTR tv184[ebp], eax
	cmp	DWORD PTR tv184[ebp], 0
	jne	SHORT $LN31@xmlSetFeat

; 320  :         ctxt->sax = *((xmlSAXHandlerPtr *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
	jmp	$LN5@xmlSetFeat
$LN31@xmlSetFeat:

; 321  :     } else if (!strcmp(name, "SAX function internalSubset")) {

	mov	DWORD PTR tv758[ebp], OFFSET ??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv756[ebp], ecx
$LL140@xmlSetFeat:
	mov	edx, DWORD PTR tv756[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv761[ebp], al
	mov	ecx, DWORD PTR tv758[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN141@xmlSetFeat
	cmp	BYTE PTR tv761[ebp], 0
	je	SHORT $LN142@xmlSetFeat
	mov	edx, DWORD PTR tv756[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv768[ebp], al
	mov	ecx, DWORD PTR tv758[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN141@xmlSetFeat
	add	DWORD PTR tv756[ebp], 2
	add	DWORD PTR tv758[ebp], 2
	cmp	BYTE PTR tv768[ebp], 0
	jne	SHORT $LL140@xmlSetFeat
$LN142@xmlSetFeat:
	mov	DWORD PTR tv773[ebp], 0
	jmp	SHORT $LN143@xmlSetFeat
$LN141@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv773[ebp], edx
$LN143@xmlSetFeat:
	mov	eax, DWORD PTR tv773[ebp]
	mov	DWORD PTR tv190[ebp], eax
	cmp	DWORD PTR tv190[ebp], 0
	jne	SHORT $LN33@xmlSetFeat

; 322  :         ctxt->sax->internalSubset = *((internalSubsetSAXFunc *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	jmp	$LN5@xmlSetFeat
$LN33@xmlSetFeat:

; 323  :     } else if (!strcmp(name, "SAX function isStandalone")) {

	mov	DWORD PTR tv782[ebp], OFFSET ??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv780[ebp], edx
$LL144@xmlSetFeat:
	mov	eax, DWORD PTR tv780[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv785[ebp], cl
	mov	edx, DWORD PTR tv782[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN145@xmlSetFeat
	cmp	BYTE PTR tv785[ebp], 0
	je	SHORT $LN146@xmlSetFeat
	mov	eax, DWORD PTR tv780[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv792[ebp], cl
	mov	edx, DWORD PTR tv782[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN145@xmlSetFeat
	add	DWORD PTR tv780[ebp], 2
	add	DWORD PTR tv782[ebp], 2
	cmp	BYTE PTR tv792[ebp], 0
	jne	SHORT $LL144@xmlSetFeat
$LN146@xmlSetFeat:
	mov	DWORD PTR tv797[ebp], 0
	jmp	SHORT $LN147@xmlSetFeat
$LN145@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv797[ebp], eax
$LN147@xmlSetFeat:
	mov	ecx, DWORD PTR tv797[ebp]
	mov	DWORD PTR tv197[ebp], ecx
	cmp	DWORD PTR tv197[ebp], 0
	jne	SHORT $LN35@xmlSetFeat

; 324  :         ctxt->sax->isStandalone = *((isStandaloneSAXFunc *) value);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+4], edx
	jmp	$LN5@xmlSetFeat
$LN35@xmlSetFeat:

; 325  :     } else if (!strcmp(name, "SAX function hasInternalSubset")) {

	mov	DWORD PTR tv806[ebp], OFFSET ??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv804[ebp], eax
$LL148@xmlSetFeat:
	mov	ecx, DWORD PTR tv804[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv809[ebp], dl
	mov	eax, DWORD PTR tv806[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN149@xmlSetFeat
	cmp	BYTE PTR tv809[ebp], 0
	je	SHORT $LN150@xmlSetFeat
	mov	ecx, DWORD PTR tv804[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv816[ebp], dl
	mov	eax, DWORD PTR tv806[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN149@xmlSetFeat
	add	DWORD PTR tv804[ebp], 2
	add	DWORD PTR tv806[ebp], 2
	cmp	BYTE PTR tv816[ebp], 0
	jne	SHORT $LL148@xmlSetFeat
$LN150@xmlSetFeat:
	mov	DWORD PTR tv821[ebp], 0
	jmp	SHORT $LN151@xmlSetFeat
$LN149@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv821[ebp], ecx
$LN151@xmlSetFeat:
	mov	edx, DWORD PTR tv821[ebp]
	mov	DWORD PTR tv204[ebp], edx
	cmp	DWORD PTR tv204[ebp], 0
	jne	SHORT $LN37@xmlSetFeat

; 326  :         ctxt->sax->hasInternalSubset =

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+8], eax
	jmp	$LN5@xmlSetFeat
$LN37@xmlSetFeat:

; 327  :             *((hasInternalSubsetSAXFunc *) value);
; 328  :     } else if (!strcmp(name, "SAX function hasExternalSubset")) {

	mov	DWORD PTR tv830[ebp], OFFSET ??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv828[ebp], ecx
$LL152@xmlSetFeat:
	mov	edx, DWORD PTR tv828[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv833[ebp], al
	mov	ecx, DWORD PTR tv830[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN153@xmlSetFeat
	cmp	BYTE PTR tv833[ebp], 0
	je	SHORT $LN154@xmlSetFeat
	mov	edx, DWORD PTR tv828[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv840[ebp], al
	mov	ecx, DWORD PTR tv830[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN153@xmlSetFeat
	add	DWORD PTR tv828[ebp], 2
	add	DWORD PTR tv830[ebp], 2
	cmp	BYTE PTR tv840[ebp], 0
	jne	SHORT $LL152@xmlSetFeat
$LN154@xmlSetFeat:
	mov	DWORD PTR tv845[ebp], 0
	jmp	SHORT $LN155@xmlSetFeat
$LN153@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv845[ebp], edx
$LN155@xmlSetFeat:
	mov	eax, DWORD PTR tv845[ebp]
	mov	DWORD PTR tv211[ebp], eax
	cmp	DWORD PTR tv211[ebp], 0
	jne	SHORT $LN39@xmlSetFeat

; 329  :         ctxt->sax->hasExternalSubset =

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+12], ecx
	jmp	$LN5@xmlSetFeat
$LN39@xmlSetFeat:

; 330  :             *((hasExternalSubsetSAXFunc *) value);
; 331  :     } else if (!strcmp(name, "SAX function resolveEntity")) {

	mov	DWORD PTR tv854[ebp], OFFSET ??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv852[ebp], edx
$LL156@xmlSetFeat:
	mov	eax, DWORD PTR tv852[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv857[ebp], cl
	mov	edx, DWORD PTR tv854[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN157@xmlSetFeat
	cmp	BYTE PTR tv857[ebp], 0
	je	SHORT $LN158@xmlSetFeat
	mov	eax, DWORD PTR tv852[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv864[ebp], cl
	mov	edx, DWORD PTR tv854[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN157@xmlSetFeat
	add	DWORD PTR tv852[ebp], 2
	add	DWORD PTR tv854[ebp], 2
	cmp	BYTE PTR tv864[ebp], 0
	jne	SHORT $LL156@xmlSetFeat
$LN158@xmlSetFeat:
	mov	DWORD PTR tv869[ebp], 0
	jmp	SHORT $LN159@xmlSetFeat
$LN157@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv869[ebp], eax
$LN159@xmlSetFeat:
	mov	ecx, DWORD PTR tv869[ebp]
	mov	DWORD PTR tv218[ebp], ecx
	cmp	DWORD PTR tv218[ebp], 0
	jne	SHORT $LN41@xmlSetFeat

; 332  :         ctxt->sax->resolveEntity = *((resolveEntitySAXFunc *) value);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+16], edx
	jmp	$LN5@xmlSetFeat
$LN41@xmlSetFeat:

; 333  :     } else if (!strcmp(name, "SAX function getEntity")) {

	mov	DWORD PTR tv878[ebp], OFFSET ??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv876[ebp], eax
$LL160@xmlSetFeat:
	mov	ecx, DWORD PTR tv876[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv881[ebp], dl
	mov	eax, DWORD PTR tv878[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN161@xmlSetFeat
	cmp	BYTE PTR tv881[ebp], 0
	je	SHORT $LN162@xmlSetFeat
	mov	ecx, DWORD PTR tv876[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv888[ebp], dl
	mov	eax, DWORD PTR tv878[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN161@xmlSetFeat
	add	DWORD PTR tv876[ebp], 2
	add	DWORD PTR tv878[ebp], 2
	cmp	BYTE PTR tv888[ebp], 0
	jne	SHORT $LL160@xmlSetFeat
$LN162@xmlSetFeat:
	mov	DWORD PTR tv893[ebp], 0
	jmp	SHORT $LN163@xmlSetFeat
$LN161@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv893[ebp], ecx
$LN163@xmlSetFeat:
	mov	edx, DWORD PTR tv893[ebp]
	mov	DWORD PTR tv225[ebp], edx
	cmp	DWORD PTR tv225[ebp], 0
	jne	SHORT $LN43@xmlSetFeat

; 334  :         ctxt->sax->getEntity = *((getEntitySAXFunc *) value);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+20], eax
	jmp	$LN5@xmlSetFeat
$LN43@xmlSetFeat:

; 335  :     } else if (!strcmp(name, "SAX function entityDecl")) {

	mov	DWORD PTR tv902[ebp], OFFSET ??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv900[ebp], ecx
$LL164@xmlSetFeat:
	mov	edx, DWORD PTR tv900[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv905[ebp], al
	mov	ecx, DWORD PTR tv902[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN165@xmlSetFeat
	cmp	BYTE PTR tv905[ebp], 0
	je	SHORT $LN166@xmlSetFeat
	mov	edx, DWORD PTR tv900[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv912[ebp], al
	mov	ecx, DWORD PTR tv902[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN165@xmlSetFeat
	add	DWORD PTR tv900[ebp], 2
	add	DWORD PTR tv902[ebp], 2
	cmp	BYTE PTR tv912[ebp], 0
	jne	SHORT $LL164@xmlSetFeat
$LN166@xmlSetFeat:
	mov	DWORD PTR tv917[ebp], 0
	jmp	SHORT $LN167@xmlSetFeat
$LN165@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv917[ebp], edx
$LN167@xmlSetFeat:
	mov	eax, DWORD PTR tv917[ebp]
	mov	DWORD PTR tv232[ebp], eax
	cmp	DWORD PTR tv232[ebp], 0
	jne	SHORT $LN45@xmlSetFeat

; 336  :         ctxt->sax->entityDecl = *((entityDeclSAXFunc *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+24], ecx
	jmp	$LN5@xmlSetFeat
$LN45@xmlSetFeat:

; 337  :     } else if (!strcmp(name, "SAX function notationDecl")) {

	mov	DWORD PTR tv926[ebp], OFFSET ??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv924[ebp], edx
$LL168@xmlSetFeat:
	mov	eax, DWORD PTR tv924[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv929[ebp], cl
	mov	edx, DWORD PTR tv926[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN169@xmlSetFeat
	cmp	BYTE PTR tv929[ebp], 0
	je	SHORT $LN170@xmlSetFeat
	mov	eax, DWORD PTR tv924[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv936[ebp], cl
	mov	edx, DWORD PTR tv926[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN169@xmlSetFeat
	add	DWORD PTR tv924[ebp], 2
	add	DWORD PTR tv926[ebp], 2
	cmp	BYTE PTR tv936[ebp], 0
	jne	SHORT $LL168@xmlSetFeat
$LN170@xmlSetFeat:
	mov	DWORD PTR tv941[ebp], 0
	jmp	SHORT $LN171@xmlSetFeat
$LN169@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv941[ebp], eax
$LN171@xmlSetFeat:
	mov	ecx, DWORD PTR tv941[ebp]
	mov	DWORD PTR tv239[ebp], ecx
	cmp	DWORD PTR tv239[ebp], 0
	jne	SHORT $LN47@xmlSetFeat

; 338  :         ctxt->sax->notationDecl = *((notationDeclSAXFunc *) value);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+28], edx
	jmp	$LN5@xmlSetFeat
$LN47@xmlSetFeat:

; 339  :     } else if (!strcmp(name, "SAX function attributeDecl")) {

	mov	DWORD PTR tv950[ebp], OFFSET ??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv948[ebp], eax
$LL172@xmlSetFeat:
	mov	ecx, DWORD PTR tv948[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv953[ebp], dl
	mov	eax, DWORD PTR tv950[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN173@xmlSetFeat
	cmp	BYTE PTR tv953[ebp], 0
	je	SHORT $LN174@xmlSetFeat
	mov	ecx, DWORD PTR tv948[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv960[ebp], dl
	mov	eax, DWORD PTR tv950[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN173@xmlSetFeat
	add	DWORD PTR tv948[ebp], 2
	add	DWORD PTR tv950[ebp], 2
	cmp	BYTE PTR tv960[ebp], 0
	jne	SHORT $LL172@xmlSetFeat
$LN174@xmlSetFeat:
	mov	DWORD PTR tv965[ebp], 0
	jmp	SHORT $LN175@xmlSetFeat
$LN173@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv965[ebp], ecx
$LN175@xmlSetFeat:
	mov	edx, DWORD PTR tv965[ebp]
	mov	DWORD PTR tv246[ebp], edx
	cmp	DWORD PTR tv246[ebp], 0
	jne	SHORT $LN49@xmlSetFeat

; 340  :         ctxt->sax->attributeDecl = *((attributeDeclSAXFunc *) value);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+32], eax
	jmp	$LN5@xmlSetFeat
$LN49@xmlSetFeat:

; 341  :     } else if (!strcmp(name, "SAX function elementDecl")) {

	mov	DWORD PTR tv974[ebp], OFFSET ??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv972[ebp], ecx
$LL176@xmlSetFeat:
	mov	edx, DWORD PTR tv972[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv977[ebp], al
	mov	ecx, DWORD PTR tv974[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN177@xmlSetFeat
	cmp	BYTE PTR tv977[ebp], 0
	je	SHORT $LN178@xmlSetFeat
	mov	edx, DWORD PTR tv972[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv984[ebp], al
	mov	ecx, DWORD PTR tv974[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN177@xmlSetFeat
	add	DWORD PTR tv972[ebp], 2
	add	DWORD PTR tv974[ebp], 2
	cmp	BYTE PTR tv984[ebp], 0
	jne	SHORT $LL176@xmlSetFeat
$LN178@xmlSetFeat:
	mov	DWORD PTR tv989[ebp], 0
	jmp	SHORT $LN179@xmlSetFeat
$LN177@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv989[ebp], edx
$LN179@xmlSetFeat:
	mov	eax, DWORD PTR tv989[ebp]
	mov	DWORD PTR tv253[ebp], eax
	cmp	DWORD PTR tv253[ebp], 0
	jne	SHORT $LN51@xmlSetFeat

; 342  :         ctxt->sax->elementDecl = *((elementDeclSAXFunc *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+36], ecx
	jmp	$LN5@xmlSetFeat
$LN51@xmlSetFeat:

; 343  :     } else if (!strcmp(name, "SAX function unparsedEntityDecl")) {

	mov	DWORD PTR tv998[ebp], OFFSET ??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv996[ebp], edx
$LL180@xmlSetFeat:
	mov	eax, DWORD PTR tv996[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1001[ebp], cl
	mov	edx, DWORD PTR tv998[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN181@xmlSetFeat
	cmp	BYTE PTR tv1001[ebp], 0
	je	SHORT $LN182@xmlSetFeat
	mov	eax, DWORD PTR tv996[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1008[ebp], cl
	mov	edx, DWORD PTR tv998[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN181@xmlSetFeat
	add	DWORD PTR tv996[ebp], 2
	add	DWORD PTR tv998[ebp], 2
	cmp	BYTE PTR tv1008[ebp], 0
	jne	SHORT $LL180@xmlSetFeat
$LN182@xmlSetFeat:
	mov	DWORD PTR tv1013[ebp], 0
	jmp	SHORT $LN183@xmlSetFeat
$LN181@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1013[ebp], eax
$LN183@xmlSetFeat:
	mov	ecx, DWORD PTR tv1013[ebp]
	mov	DWORD PTR tv260[ebp], ecx
	cmp	DWORD PTR tv260[ebp], 0
	jne	SHORT $LN53@xmlSetFeat

; 344  :         ctxt->sax->unparsedEntityDecl =

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+40], edx
	jmp	$LN5@xmlSetFeat
$LN53@xmlSetFeat:

; 345  :             *((unparsedEntityDeclSAXFunc *) value);
; 346  :     } else if (!strcmp(name, "SAX function setDocumentLocator")) {

	mov	DWORD PTR tv1022[ebp], OFFSET ??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1020[ebp], eax
$LL184@xmlSetFeat:
	mov	ecx, DWORD PTR tv1020[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1025[ebp], dl
	mov	eax, DWORD PTR tv1022[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN185@xmlSetFeat
	cmp	BYTE PTR tv1025[ebp], 0
	je	SHORT $LN186@xmlSetFeat
	mov	ecx, DWORD PTR tv1020[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1032[ebp], dl
	mov	eax, DWORD PTR tv1022[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN185@xmlSetFeat
	add	DWORD PTR tv1020[ebp], 2
	add	DWORD PTR tv1022[ebp], 2
	cmp	BYTE PTR tv1032[ebp], 0
	jne	SHORT $LL184@xmlSetFeat
$LN186@xmlSetFeat:
	mov	DWORD PTR tv1037[ebp], 0
	jmp	SHORT $LN187@xmlSetFeat
$LN185@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1037[ebp], ecx
$LN187@xmlSetFeat:
	mov	edx, DWORD PTR tv1037[ebp]
	mov	DWORD PTR tv267[ebp], edx
	cmp	DWORD PTR tv267[ebp], 0
	jne	SHORT $LN55@xmlSetFeat

; 347  :         ctxt->sax->setDocumentLocator =

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+44], eax
	jmp	$LN5@xmlSetFeat
$LN55@xmlSetFeat:

; 348  :             *((setDocumentLocatorSAXFunc *) value);
; 349  :     } else if (!strcmp(name, "SAX function startDocument")) {

	mov	DWORD PTR tv1046[ebp], OFFSET ??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1044[ebp], ecx
$LL188@xmlSetFeat:
	mov	edx, DWORD PTR tv1044[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1049[ebp], al
	mov	ecx, DWORD PTR tv1046[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN189@xmlSetFeat
	cmp	BYTE PTR tv1049[ebp], 0
	je	SHORT $LN190@xmlSetFeat
	mov	edx, DWORD PTR tv1044[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1056[ebp], al
	mov	ecx, DWORD PTR tv1046[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN189@xmlSetFeat
	add	DWORD PTR tv1044[ebp], 2
	add	DWORD PTR tv1046[ebp], 2
	cmp	BYTE PTR tv1056[ebp], 0
	jne	SHORT $LL188@xmlSetFeat
$LN190@xmlSetFeat:
	mov	DWORD PTR tv1061[ebp], 0
	jmp	SHORT $LN191@xmlSetFeat
$LN189@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1061[ebp], edx
$LN191@xmlSetFeat:
	mov	eax, DWORD PTR tv1061[ebp]
	mov	DWORD PTR tv274[ebp], eax
	cmp	DWORD PTR tv274[ebp], 0
	jne	SHORT $LN57@xmlSetFeat

; 350  :         ctxt->sax->startDocument = *((startDocumentSAXFunc *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+48], ecx
	jmp	$LN5@xmlSetFeat
$LN57@xmlSetFeat:

; 351  :     } else if (!strcmp(name, "SAX function endDocument")) {

	mov	DWORD PTR tv1070[ebp], OFFSET ??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1068[ebp], edx
$LL192@xmlSetFeat:
	mov	eax, DWORD PTR tv1068[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1073[ebp], cl
	mov	edx, DWORD PTR tv1070[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN193@xmlSetFeat
	cmp	BYTE PTR tv1073[ebp], 0
	je	SHORT $LN194@xmlSetFeat
	mov	eax, DWORD PTR tv1068[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1080[ebp], cl
	mov	edx, DWORD PTR tv1070[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN193@xmlSetFeat
	add	DWORD PTR tv1068[ebp], 2
	add	DWORD PTR tv1070[ebp], 2
	cmp	BYTE PTR tv1080[ebp], 0
	jne	SHORT $LL192@xmlSetFeat
$LN194@xmlSetFeat:
	mov	DWORD PTR tv1085[ebp], 0
	jmp	SHORT $LN195@xmlSetFeat
$LN193@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1085[ebp], eax
$LN195@xmlSetFeat:
	mov	ecx, DWORD PTR tv1085[ebp]
	mov	DWORD PTR tv281[ebp], ecx
	cmp	DWORD PTR tv281[ebp], 0
	jne	SHORT $LN59@xmlSetFeat

; 352  :         ctxt->sax->endDocument = *((endDocumentSAXFunc *) value);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+52], edx
	jmp	$LN5@xmlSetFeat
$LN59@xmlSetFeat:

; 353  :     } else if (!strcmp(name, "SAX function startElement")) {

	mov	DWORD PTR tv1094[ebp], OFFSET ??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1092[ebp], eax
$LL196@xmlSetFeat:
	mov	ecx, DWORD PTR tv1092[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1097[ebp], dl
	mov	eax, DWORD PTR tv1094[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN197@xmlSetFeat
	cmp	BYTE PTR tv1097[ebp], 0
	je	SHORT $LN198@xmlSetFeat
	mov	ecx, DWORD PTR tv1092[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1104[ebp], dl
	mov	eax, DWORD PTR tv1094[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN197@xmlSetFeat
	add	DWORD PTR tv1092[ebp], 2
	add	DWORD PTR tv1094[ebp], 2
	cmp	BYTE PTR tv1104[ebp], 0
	jne	SHORT $LL196@xmlSetFeat
$LN198@xmlSetFeat:
	mov	DWORD PTR tv1109[ebp], 0
	jmp	SHORT $LN199@xmlSetFeat
$LN197@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1109[ebp], ecx
$LN199@xmlSetFeat:
	mov	edx, DWORD PTR tv1109[ebp]
	mov	DWORD PTR tv288[ebp], edx
	cmp	DWORD PTR tv288[ebp], 0
	jne	SHORT $LN61@xmlSetFeat

; 354  :         ctxt->sax->startElement = *((startElementSAXFunc *) value);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+56], eax
	jmp	$LN5@xmlSetFeat
$LN61@xmlSetFeat:

; 355  :     } else if (!strcmp(name, "SAX function endElement")) {

	mov	DWORD PTR tv1118[ebp], OFFSET ??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1116[ebp], ecx
$LL200@xmlSetFeat:
	mov	edx, DWORD PTR tv1116[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1121[ebp], al
	mov	ecx, DWORD PTR tv1118[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN201@xmlSetFeat
	cmp	BYTE PTR tv1121[ebp], 0
	je	SHORT $LN202@xmlSetFeat
	mov	edx, DWORD PTR tv1116[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1128[ebp], al
	mov	ecx, DWORD PTR tv1118[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN201@xmlSetFeat
	add	DWORD PTR tv1116[ebp], 2
	add	DWORD PTR tv1118[ebp], 2
	cmp	BYTE PTR tv1128[ebp], 0
	jne	SHORT $LL200@xmlSetFeat
$LN202@xmlSetFeat:
	mov	DWORD PTR tv1133[ebp], 0
	jmp	SHORT $LN203@xmlSetFeat
$LN201@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1133[ebp], edx
$LN203@xmlSetFeat:
	mov	eax, DWORD PTR tv1133[ebp]
	mov	DWORD PTR tv295[ebp], eax
	cmp	DWORD PTR tv295[ebp], 0
	jne	SHORT $LN63@xmlSetFeat

; 356  :         ctxt->sax->endElement = *((endElementSAXFunc *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+60], ecx
	jmp	$LN5@xmlSetFeat
$LN63@xmlSetFeat:

; 357  :     } else if (!strcmp(name, "SAX function reference")) {

	mov	DWORD PTR tv1142[ebp], OFFSET ??_C@_0BH@COKKFLJA@SAX?5function?5reference@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1140[ebp], edx
$LL204@xmlSetFeat:
	mov	eax, DWORD PTR tv1140[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1145[ebp], cl
	mov	edx, DWORD PTR tv1142[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN205@xmlSetFeat
	cmp	BYTE PTR tv1145[ebp], 0
	je	SHORT $LN206@xmlSetFeat
	mov	eax, DWORD PTR tv1140[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1152[ebp], cl
	mov	edx, DWORD PTR tv1142[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN205@xmlSetFeat
	add	DWORD PTR tv1140[ebp], 2
	add	DWORD PTR tv1142[ebp], 2
	cmp	BYTE PTR tv1152[ebp], 0
	jne	SHORT $LL204@xmlSetFeat
$LN206@xmlSetFeat:
	mov	DWORD PTR tv1157[ebp], 0
	jmp	SHORT $LN207@xmlSetFeat
$LN205@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1157[ebp], eax
$LN207@xmlSetFeat:
	mov	ecx, DWORD PTR tv1157[ebp]
	mov	DWORD PTR tv302[ebp], ecx
	cmp	DWORD PTR tv302[ebp], 0
	jne	SHORT $LN65@xmlSetFeat

; 358  :         ctxt->sax->reference = *((referenceSAXFunc *) value);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+64], edx
	jmp	$LN5@xmlSetFeat
$LN65@xmlSetFeat:

; 359  :     } else if (!strcmp(name, "SAX function characters")) {

	mov	DWORD PTR tv1166[ebp], OFFSET ??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1164[ebp], eax
$LL208@xmlSetFeat:
	mov	ecx, DWORD PTR tv1164[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1169[ebp], dl
	mov	eax, DWORD PTR tv1166[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN209@xmlSetFeat
	cmp	BYTE PTR tv1169[ebp], 0
	je	SHORT $LN210@xmlSetFeat
	mov	ecx, DWORD PTR tv1164[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1176[ebp], dl
	mov	eax, DWORD PTR tv1166[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN209@xmlSetFeat
	add	DWORD PTR tv1164[ebp], 2
	add	DWORD PTR tv1166[ebp], 2
	cmp	BYTE PTR tv1176[ebp], 0
	jne	SHORT $LL208@xmlSetFeat
$LN210@xmlSetFeat:
	mov	DWORD PTR tv1181[ebp], 0
	jmp	SHORT $LN211@xmlSetFeat
$LN209@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1181[ebp], ecx
$LN211@xmlSetFeat:
	mov	edx, DWORD PTR tv1181[ebp]
	mov	DWORD PTR tv309[ebp], edx
	cmp	DWORD PTR tv309[ebp], 0
	jne	SHORT $LN67@xmlSetFeat

; 360  :         ctxt->sax->characters = *((charactersSAXFunc *) value);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+68], eax
	jmp	$LN5@xmlSetFeat
$LN67@xmlSetFeat:

; 361  :     } else if (!strcmp(name, "SAX function ignorableWhitespace")) {

	mov	DWORD PTR tv1190[ebp], OFFSET ??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1188[ebp], ecx
$LL212@xmlSetFeat:
	mov	edx, DWORD PTR tv1188[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1193[ebp], al
	mov	ecx, DWORD PTR tv1190[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN213@xmlSetFeat
	cmp	BYTE PTR tv1193[ebp], 0
	je	SHORT $LN214@xmlSetFeat
	mov	edx, DWORD PTR tv1188[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1200[ebp], al
	mov	ecx, DWORD PTR tv1190[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN213@xmlSetFeat
	add	DWORD PTR tv1188[ebp], 2
	add	DWORD PTR tv1190[ebp], 2
	cmp	BYTE PTR tv1200[ebp], 0
	jne	SHORT $LL212@xmlSetFeat
$LN214@xmlSetFeat:
	mov	DWORD PTR tv1205[ebp], 0
	jmp	SHORT $LN215@xmlSetFeat
$LN213@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1205[ebp], edx
$LN215@xmlSetFeat:
	mov	eax, DWORD PTR tv1205[ebp]
	mov	DWORD PTR tv316[ebp], eax
	cmp	DWORD PTR tv316[ebp], 0
	jne	SHORT $LN69@xmlSetFeat

; 362  :         ctxt->sax->ignorableWhitespace =

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+72], ecx
	jmp	$LN5@xmlSetFeat
$LN69@xmlSetFeat:

; 363  :             *((ignorableWhitespaceSAXFunc *) value);
; 364  :     } else if (!strcmp(name, "SAX function processingInstruction")) {

	mov	DWORD PTR tv1214[ebp], OFFSET ??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1212[ebp], edx
$LL216@xmlSetFeat:
	mov	eax, DWORD PTR tv1212[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1217[ebp], cl
	mov	edx, DWORD PTR tv1214[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN217@xmlSetFeat
	cmp	BYTE PTR tv1217[ebp], 0
	je	SHORT $LN218@xmlSetFeat
	mov	eax, DWORD PTR tv1212[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1224[ebp], cl
	mov	edx, DWORD PTR tv1214[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN217@xmlSetFeat
	add	DWORD PTR tv1212[ebp], 2
	add	DWORD PTR tv1214[ebp], 2
	cmp	BYTE PTR tv1224[ebp], 0
	jne	SHORT $LL216@xmlSetFeat
$LN218@xmlSetFeat:
	mov	DWORD PTR tv1229[ebp], 0
	jmp	SHORT $LN219@xmlSetFeat
$LN217@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1229[ebp], eax
$LN219@xmlSetFeat:
	mov	ecx, DWORD PTR tv1229[ebp]
	mov	DWORD PTR tv323[ebp], ecx
	cmp	DWORD PTR tv323[ebp], 0
	jne	SHORT $LN71@xmlSetFeat

; 365  :         ctxt->sax->processingInstruction =

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+76], edx
	jmp	$LN5@xmlSetFeat
$LN71@xmlSetFeat:

; 366  :             *((processingInstructionSAXFunc *) value);
; 367  :     } else if (!strcmp(name, "SAX function comment")) {

	mov	DWORD PTR tv1238[ebp], OFFSET ??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1236[ebp], eax
$LL220@xmlSetFeat:
	mov	ecx, DWORD PTR tv1236[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1241[ebp], dl
	mov	eax, DWORD PTR tv1238[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN221@xmlSetFeat
	cmp	BYTE PTR tv1241[ebp], 0
	je	SHORT $LN222@xmlSetFeat
	mov	ecx, DWORD PTR tv1236[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1248[ebp], dl
	mov	eax, DWORD PTR tv1238[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN221@xmlSetFeat
	add	DWORD PTR tv1236[ebp], 2
	add	DWORD PTR tv1238[ebp], 2
	cmp	BYTE PTR tv1248[ebp], 0
	jne	SHORT $LL220@xmlSetFeat
$LN222@xmlSetFeat:
	mov	DWORD PTR tv1253[ebp], 0
	jmp	SHORT $LN223@xmlSetFeat
$LN221@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1253[ebp], ecx
$LN223@xmlSetFeat:
	mov	edx, DWORD PTR tv1253[ebp]
	mov	DWORD PTR tv330[ebp], edx
	cmp	DWORD PTR tv330[ebp], 0
	jne	SHORT $LN73@xmlSetFeat

; 368  :         ctxt->sax->comment = *((commentSAXFunc *) value);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+80], eax
	jmp	$LN5@xmlSetFeat
$LN73@xmlSetFeat:

; 369  :     } else if (!strcmp(name, "SAX function warning")) {

	mov	DWORD PTR tv1262[ebp], OFFSET ??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1260[ebp], ecx
$LL224@xmlSetFeat:
	mov	edx, DWORD PTR tv1260[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1265[ebp], al
	mov	ecx, DWORD PTR tv1262[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN225@xmlSetFeat
	cmp	BYTE PTR tv1265[ebp], 0
	je	SHORT $LN226@xmlSetFeat
	mov	edx, DWORD PTR tv1260[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1272[ebp], al
	mov	ecx, DWORD PTR tv1262[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN225@xmlSetFeat
	add	DWORD PTR tv1260[ebp], 2
	add	DWORD PTR tv1262[ebp], 2
	cmp	BYTE PTR tv1272[ebp], 0
	jne	SHORT $LL224@xmlSetFeat
$LN226@xmlSetFeat:
	mov	DWORD PTR tv1277[ebp], 0
	jmp	SHORT $LN227@xmlSetFeat
$LN225@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1277[ebp], edx
$LN227@xmlSetFeat:
	mov	eax, DWORD PTR tv1277[ebp]
	mov	DWORD PTR tv337[ebp], eax
	cmp	DWORD PTR tv337[ebp], 0
	jne	SHORT $LN75@xmlSetFeat

; 370  :         ctxt->sax->warning = *((warningSAXFunc *) value);

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+84], ecx
	jmp	$LN5@xmlSetFeat
$LN75@xmlSetFeat:

; 371  :     } else if (!strcmp(name, "SAX function error")) {

	mov	DWORD PTR tv1286[ebp], OFFSET ??_C@_0BD@DNENFEEM@SAX?5function?5error@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1284[ebp], edx
$LL228@xmlSetFeat:
	mov	eax, DWORD PTR tv1284[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1289[ebp], cl
	mov	edx, DWORD PTR tv1286[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN229@xmlSetFeat
	cmp	BYTE PTR tv1289[ebp], 0
	je	SHORT $LN230@xmlSetFeat
	mov	eax, DWORD PTR tv1284[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1296[ebp], cl
	mov	edx, DWORD PTR tv1286[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN229@xmlSetFeat
	add	DWORD PTR tv1284[ebp], 2
	add	DWORD PTR tv1286[ebp], 2
	cmp	BYTE PTR tv1296[ebp], 0
	jne	SHORT $LL228@xmlSetFeat
$LN230@xmlSetFeat:
	mov	DWORD PTR tv1301[ebp], 0
	jmp	SHORT $LN231@xmlSetFeat
$LN229@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1301[ebp], eax
$LN231@xmlSetFeat:
	mov	ecx, DWORD PTR tv1301[ebp]
	mov	DWORD PTR tv344[ebp], ecx
	cmp	DWORD PTR tv344[ebp], 0
	jne	SHORT $LN77@xmlSetFeat

; 372  :         ctxt->sax->error = *((errorSAXFunc *) value);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+88], edx
	jmp	$LN5@xmlSetFeat
$LN77@xmlSetFeat:

; 373  :     } else if (!strcmp(name, "SAX function fatalError")) {

	mov	DWORD PTR tv1310[ebp], OFFSET ??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1308[ebp], eax
$LL232@xmlSetFeat:
	mov	ecx, DWORD PTR tv1308[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1313[ebp], dl
	mov	eax, DWORD PTR tv1310[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN233@xmlSetFeat
	cmp	BYTE PTR tv1313[ebp], 0
	je	SHORT $LN234@xmlSetFeat
	mov	ecx, DWORD PTR tv1308[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1320[ebp], dl
	mov	eax, DWORD PTR tv1310[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN233@xmlSetFeat
	add	DWORD PTR tv1308[ebp], 2
	add	DWORD PTR tv1310[ebp], 2
	cmp	BYTE PTR tv1320[ebp], 0
	jne	SHORT $LL232@xmlSetFeat
$LN234@xmlSetFeat:
	mov	DWORD PTR tv1325[ebp], 0
	jmp	SHORT $LN235@xmlSetFeat
$LN233@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1325[ebp], ecx
$LN235@xmlSetFeat:
	mov	edx, DWORD PTR tv1325[ebp]
	mov	DWORD PTR tv351[ebp], edx
	cmp	DWORD PTR tv351[ebp], 0
	jne	SHORT $LN79@xmlSetFeat

; 374  :         ctxt->sax->fatalError = *((fatalErrorSAXFunc *) value);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+92], eax
	jmp	$LN5@xmlSetFeat
$LN79@xmlSetFeat:

; 375  :     } else if (!strcmp(name, "SAX function getParameterEntity")) {

	mov	DWORD PTR tv1334[ebp], OFFSET ??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1332[ebp], ecx
$LL236@xmlSetFeat:
	mov	edx, DWORD PTR tv1332[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1337[ebp], al
	mov	ecx, DWORD PTR tv1334[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN237@xmlSetFeat
	cmp	BYTE PTR tv1337[ebp], 0
	je	SHORT $LN238@xmlSetFeat
	mov	edx, DWORD PTR tv1332[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1344[ebp], al
	mov	ecx, DWORD PTR tv1334[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN237@xmlSetFeat
	add	DWORD PTR tv1332[ebp], 2
	add	DWORD PTR tv1334[ebp], 2
	cmp	BYTE PTR tv1344[ebp], 0
	jne	SHORT $LL236@xmlSetFeat
$LN238@xmlSetFeat:
	mov	DWORD PTR tv1349[ebp], 0
	jmp	SHORT $LN239@xmlSetFeat
$LN237@xmlSetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1349[ebp], edx
$LN239@xmlSetFeat:
	mov	eax, DWORD PTR tv1349[ebp]
	mov	DWORD PTR tv390[ebp], eax
	cmp	DWORD PTR tv390[ebp], 0
	jne	SHORT $LN81@xmlSetFeat

; 376  :         ctxt->sax->getParameterEntity =

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _value$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx+96], ecx
	jmp	$LN5@xmlSetFeat
$LN81@xmlSetFeat:

; 377  :             *((getParameterEntitySAXFunc *) value);
; 378  :     } else if (!strcmp(name, "SAX function cdataBlock")) {

	mov	DWORD PTR tv1358[ebp], OFFSET ??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1356[ebp], edx
$LL240@xmlSetFeat:
	mov	eax, DWORD PTR tv1356[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1361[ebp], cl
	mov	edx, DWORD PTR tv1358[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN241@xmlSetFeat
	cmp	BYTE PTR tv1361[ebp], 0
	je	SHORT $LN242@xmlSetFeat
	mov	eax, DWORD PTR tv1356[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1368[ebp], cl
	mov	edx, DWORD PTR tv1358[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN241@xmlSetFeat
	add	DWORD PTR tv1356[ebp], 2
	add	DWORD PTR tv1358[ebp], 2
	cmp	BYTE PTR tv1368[ebp], 0
	jne	SHORT $LL240@xmlSetFeat
$LN242@xmlSetFeat:
	mov	DWORD PTR tv1373[ebp], 0
	jmp	SHORT $LN243@xmlSetFeat
$LN241@xmlSetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1373[ebp], eax
$LN243@xmlSetFeat:
	mov	ecx, DWORD PTR tv1373[ebp]
	mov	DWORD PTR tv397[ebp], ecx
	cmp	DWORD PTR tv397[ebp], 0
	jne	SHORT $LN83@xmlSetFeat

; 379  :         ctxt->sax->cdataBlock = *((cdataBlockSAXFunc *) value);

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _value$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+100], edx
	jmp	$LN5@xmlSetFeat
$LN83@xmlSetFeat:

; 380  :     } else if (!strcmp(name, "SAX function externalSubset")) {

	mov	DWORD PTR tv1382[ebp], OFFSET ??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1380[ebp], eax
$LL244@xmlSetFeat:
	mov	ecx, DWORD PTR tv1380[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1385[ebp], dl
	mov	eax, DWORD PTR tv1382[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN245@xmlSetFeat
	cmp	BYTE PTR tv1385[ebp], 0
	je	SHORT $LN246@xmlSetFeat
	mov	ecx, DWORD PTR tv1380[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1392[ebp], dl
	mov	eax, DWORD PTR tv1382[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN245@xmlSetFeat
	add	DWORD PTR tv1380[ebp], 2
	add	DWORD PTR tv1382[ebp], 2
	cmp	BYTE PTR tv1392[ebp], 0
	jne	SHORT $LL244@xmlSetFeat
$LN246@xmlSetFeat:
	mov	DWORD PTR tv1397[ebp], 0
	jmp	SHORT $LN247@xmlSetFeat
$LN245@xmlSetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1397[ebp], ecx
$LN247@xmlSetFeat:
	mov	edx, DWORD PTR tv1397[ebp]
	mov	DWORD PTR tv404[ebp], edx
	cmp	DWORD PTR tv404[ebp], 0
	jne	SHORT $LN85@xmlSetFeat

; 381  :         ctxt->sax->externalSubset = *((externalSubsetSAXFunc *) value);

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _value$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx+104], eax

; 382  :     } else {

	jmp	SHORT $LN5@xmlSetFeat
$LN85@xmlSetFeat:

; 383  :         return (-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlSetFeat
$LN5@xmlSetFeat:

; 384  :     }
; 385  :     return (0);

	xor	eax, eax
$LN1@xmlSetFeat:

; 386  : }

	pop	edi
	add	esp, 804				; 00000324H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlSetFeature ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlGetFeature
_TEXT	SEGMENT
tv394 = -800						; size = 4
tv1380 = -796						; size = 4
tv1375 = -790						; size = 1
tv1368 = -789						; size = 1
tv1363 = -788						; size = 4
tv1365 = -784						; size = 4
tv387 = -780						; size = 4
tv1356 = -776						; size = 4
tv1351 = -770						; size = 1
tv1344 = -769						; size = 1
tv1339 = -768						; size = 4
tv1341 = -764						; size = 4
tv380 = -760						; size = 4
tv1332 = -756						; size = 4
tv1327 = -750						; size = 1
tv1320 = -749						; size = 1
tv1315 = -748						; size = 4
tv1317 = -744						; size = 4
tv373 = -740						; size = 4
tv1308 = -736						; size = 4
tv1303 = -730						; size = 1
tv1296 = -729						; size = 1
tv1291 = -728						; size = 4
tv1293 = -724						; size = 4
tv366 = -720						; size = 4
tv1284 = -716						; size = 4
tv1279 = -710						; size = 1
tv1272 = -709						; size = 1
tv1267 = -708						; size = 4
tv1269 = -704						; size = 4
tv359 = -700						; size = 4
tv1260 = -696						; size = 4
tv1255 = -690						; size = 1
tv1248 = -689						; size = 1
tv1243 = -688						; size = 4
tv1245 = -684						; size = 4
tv352 = -680						; size = 4
tv1236 = -676						; size = 4
tv1231 = -670						; size = 1
tv1224 = -669						; size = 1
tv1219 = -668						; size = 4
tv1221 = -664						; size = 4
tv313 = -660						; size = 4
tv1212 = -656						; size = 4
tv1207 = -650						; size = 1
tv1200 = -649						; size = 1
tv1195 = -648						; size = 4
tv1197 = -644						; size = 4
tv306 = -640						; size = 4
tv1188 = -636						; size = 4
tv1183 = -630						; size = 1
tv1176 = -629						; size = 1
tv1171 = -628						; size = 4
tv1173 = -624						; size = 4
tv299 = -620						; size = 4
tv1164 = -616						; size = 4
tv1159 = -610						; size = 1
tv1152 = -609						; size = 1
tv1147 = -608						; size = 4
tv1149 = -604						; size = 4
tv292 = -600						; size = 4
tv1140 = -596						; size = 4
tv1135 = -590						; size = 1
tv1128 = -589						; size = 1
tv1123 = -588						; size = 4
tv1125 = -584						; size = 4
tv285 = -580						; size = 4
tv1116 = -576						; size = 4
tv1111 = -570						; size = 1
tv1104 = -569						; size = 1
tv1099 = -568						; size = 4
tv1101 = -564						; size = 4
tv278 = -560						; size = 4
tv1092 = -556						; size = 4
tv1087 = -550						; size = 1
tv1080 = -549						; size = 1
tv1075 = -548						; size = 4
tv1077 = -544						; size = 4
tv271 = -540						; size = 4
tv1068 = -536						; size = 4
tv1063 = -530						; size = 1
tv1056 = -529						; size = 1
tv1051 = -528						; size = 4
tv1053 = -524						; size = 4
tv264 = -520						; size = 4
tv1044 = -516						; size = 4
tv1039 = -510						; size = 1
tv1032 = -509						; size = 1
tv1027 = -508						; size = 4
tv1029 = -504						; size = 4
tv257 = -500						; size = 4
tv1020 = -496						; size = 4
tv1015 = -490						; size = 1
tv1008 = -489						; size = 1
tv1003 = -488						; size = 4
tv1005 = -484						; size = 4
tv250 = -480						; size = 4
tv996 = -476						; size = 4
tv991 = -470						; size = 1
tv984 = -469						; size = 1
tv979 = -468						; size = 4
tv981 = -464						; size = 4
tv243 = -460						; size = 4
tv972 = -456						; size = 4
tv967 = -450						; size = 1
tv960 = -449						; size = 1
tv955 = -448						; size = 4
tv957 = -444						; size = 4
tv236 = -440						; size = 4
tv948 = -436						; size = 4
tv943 = -430						; size = 1
tv936 = -429						; size = 1
tv931 = -428						; size = 4
tv933 = -424						; size = 4
tv229 = -420						; size = 4
tv924 = -416						; size = 4
tv919 = -410						; size = 1
tv912 = -409						; size = 1
tv907 = -408						; size = 4
tv909 = -404						; size = 4
tv222 = -400						; size = 4
tv900 = -396						; size = 4
tv895 = -390						; size = 1
tv888 = -389						; size = 1
tv883 = -388						; size = 4
tv885 = -384						; size = 4
tv215 = -380						; size = 4
tv876 = -376						; size = 4
tv871 = -370						; size = 1
tv864 = -369						; size = 1
tv859 = -368						; size = 4
tv861 = -364						; size = 4
tv208 = -360						; size = 4
tv852 = -356						; size = 4
tv847 = -350						; size = 1
tv840 = -349						; size = 1
tv835 = -348						; size = 4
tv837 = -344						; size = 4
tv201 = -340						; size = 4
tv828 = -336						; size = 4
tv823 = -330						; size = 1
tv816 = -329						; size = 1
tv811 = -328						; size = 4
tv813 = -324						; size = 4
tv194 = -320						; size = 4
tv804 = -316						; size = 4
tv799 = -310						; size = 1
tv792 = -309						; size = 1
tv787 = -308						; size = 4
tv789 = -304						; size = 4
tv187 = -300						; size = 4
tv780 = -296						; size = 4
tv775 = -290						; size = 1
tv768 = -289						; size = 1
tv763 = -288						; size = 4
tv765 = -284						; size = 4
tv180 = -280						; size = 4
tv756 = -276						; size = 4
tv751 = -270						; size = 1
tv744 = -269						; size = 1
tv739 = -268						; size = 4
tv741 = -264						; size = 4
tv174 = -260						; size = 4
tv732 = -256						; size = 4
tv727 = -250						; size = 1
tv720 = -249						; size = 1
tv715 = -248						; size = 4
tv717 = -244						; size = 4
tv168 = -240						; size = 4
tv708 = -236						; size = 4
tv703 = -230						; size = 1
tv696 = -229						; size = 1
tv691 = -228						; size = 4
tv693 = -224						; size = 4
tv162 = -220						; size = 4
tv684 = -216						; size = 4
tv679 = -210						; size = 1
tv672 = -209						; size = 1
tv667 = -208						; size = 4
tv669 = -204						; size = 4
tv156 = -200						; size = 4
tv660 = -196						; size = 4
tv655 = -190						; size = 1
tv648 = -189						; size = 1
tv643 = -188						; size = 4
tv645 = -184						; size = 4
tv150 = -180						; size = 4
tv636 = -176						; size = 4
tv631 = -170						; size = 1
tv624 = -169						; size = 1
tv619 = -168						; size = 4
tv621 = -164						; size = 4
tv144 = -160						; size = 4
tv612 = -156						; size = 4
tv607 = -150						; size = 1
tv600 = -149						; size = 1
tv595 = -148						; size = 4
tv597 = -144						; size = 4
tv138 = -140						; size = 4
tv588 = -136						; size = 4
tv583 = -130						; size = 1
tv576 = -129						; size = 1
tv571 = -128						; size = 4
tv573 = -124						; size = 4
tv132 = -120						; size = 4
tv564 = -116						; size = 4
tv559 = -110						; size = 1
tv552 = -109						; size = 1
tv547 = -108						; size = 4
tv549 = -104						; size = 4
tv94 = -100						; size = 4
tv540 = -96						; size = 4
tv535 = -90						; size = 1
tv528 = -89						; size = 1
tv523 = -88						; size = 4
tv525 = -84						; size = 4
tv88 = -80						; size = 4
tv516 = -76						; size = 4
tv511 = -70						; size = 1
tv504 = -69						; size = 1
tv499 = -68						; size = 4
tv501 = -64						; size = 4
tv82 = -60						; size = 4
tv492 = -56						; size = 4
tv487 = -50						; size = 1
tv480 = -49						; size = 1
tv475 = -48						; size = 4
tv477 = -44						; size = 4
tv76 = -40						; size = 4
tv468 = -36						; size = 4
tv463 = -30						; size = 1
tv456 = -29						; size = 1
tv451 = -28						; size = 4
tv453 = -24						; size = 4
tv70 = -20						; size = 4
tv444 = -16						; size = 4
tv439 = -10						; size = 1
tv432 = -9						; size = 1
tv427 = -8						; size = 4
tv429 = -4						; size = 4
_ctxt$ = 8						; size = 4
_name$ = 12						; size = 4
_result$ = 16						; size = 4
_xmlGetFeature PROC					; COMDAT

; 173  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 800				; 00000320H
	push	edi
	lea	edi, DWORD PTR [ebp-800]
	mov	ecx, 200				; 000000c8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 174  :     if ((ctxt == NULL) || (name == NULL) || (result == NULL))

	cmp	DWORD PTR _ctxt$[ebp], 0
	je	SHORT $LN3@xmlGetFeat
	cmp	DWORD PTR _name$[ebp], 0
	je	SHORT $LN3@xmlGetFeat
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN2@xmlGetFeat
$LN3@xmlGetFeat:

; 175  :         return (-1);

	or	eax, -1
	jmp	$LN1@xmlGetFeat
$LN2@xmlGetFeat:

; 176  : 
; 177  :     if (!strcmp(name, "validate")) {

	mov	DWORD PTR tv429[ebp], OFFSET ??_C@_08EBLJJHKN@validate@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv427[ebp], eax
$LL85@xmlGetFeat:
	mov	ecx, DWORD PTR tv427[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv432[ebp], dl
	mov	eax, DWORD PTR tv429[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN86@xmlGetFeat
	cmp	BYTE PTR tv432[ebp], 0
	je	SHORT $LN87@xmlGetFeat
	mov	ecx, DWORD PTR tv427[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv439[ebp], dl
	mov	eax, DWORD PTR tv429[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN86@xmlGetFeat
	add	DWORD PTR tv427[ebp], 2
	add	DWORD PTR tv429[ebp], 2
	cmp	BYTE PTR tv439[ebp], 0
	jne	SHORT $LL85@xmlGetFeat
$LN87@xmlGetFeat:
	mov	DWORD PTR tv444[ebp], 0
	jmp	SHORT $LN88@xmlGetFeat
$LN86@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv444[ebp], ecx
$LN88@xmlGetFeat:
	mov	edx, DWORD PTR tv444[ebp]
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 0
	jne	SHORT $LN4@xmlGetFeat

; 178  :         *((int *) result) = ctxt->validate;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN4@xmlGetFeat:

; 179  :     } else if (!strcmp(name, "keep blanks")) {

	mov	DWORD PTR tv453[ebp], OFFSET ??_C@_0M@JOFGOHIP@keep?5blanks@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv451[ebp], eax
$LL89@xmlGetFeat:
	mov	ecx, DWORD PTR tv451[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv456[ebp], dl
	mov	eax, DWORD PTR tv453[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN90@xmlGetFeat
	cmp	BYTE PTR tv456[ebp], 0
	je	SHORT $LN91@xmlGetFeat
	mov	ecx, DWORD PTR tv451[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv463[ebp], dl
	mov	eax, DWORD PTR tv453[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN90@xmlGetFeat
	add	DWORD PTR tv451[ebp], 2
	add	DWORD PTR tv453[ebp], 2
	cmp	BYTE PTR tv463[ebp], 0
	jne	SHORT $LL89@xmlGetFeat
$LN91@xmlGetFeat:
	mov	DWORD PTR tv468[ebp], 0
	jmp	SHORT $LN92@xmlGetFeat
$LN90@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv468[ebp], ecx
$LN92@xmlGetFeat:
	mov	edx, DWORD PTR tv468[ebp]
	mov	DWORD PTR tv76[ebp], edx
	cmp	DWORD PTR tv76[ebp], 0
	jne	SHORT $LN6@xmlGetFeat

; 180  :         *((int *) result) = ctxt->keepBlanks;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+208]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN6@xmlGetFeat:

; 181  :     } else if (!strcmp(name, "disable SAX")) {

	mov	DWORD PTR tv477[ebp], OFFSET ??_C@_0M@EPCDMNHL@disable?5SAX@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv475[ebp], eax
$LL93@xmlGetFeat:
	mov	ecx, DWORD PTR tv475[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv480[ebp], dl
	mov	eax, DWORD PTR tv477[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN94@xmlGetFeat
	cmp	BYTE PTR tv480[ebp], 0
	je	SHORT $LN95@xmlGetFeat
	mov	ecx, DWORD PTR tv475[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv487[ebp], dl
	mov	eax, DWORD PTR tv477[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN94@xmlGetFeat
	add	DWORD PTR tv475[ebp], 2
	add	DWORD PTR tv477[ebp], 2
	cmp	BYTE PTR tv487[ebp], 0
	jne	SHORT $LL93@xmlGetFeat
$LN95@xmlGetFeat:
	mov	DWORD PTR tv492[ebp], 0
	jmp	SHORT $LN96@xmlGetFeat
$LN94@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv492[ebp], ecx
$LN96@xmlGetFeat:
	mov	edx, DWORD PTR tv492[ebp]
	mov	DWORD PTR tv82[ebp], edx
	cmp	DWORD PTR tv82[ebp], 0
	jne	SHORT $LN8@xmlGetFeat

; 182  :         *((int *) result) = ctxt->disableSAX;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+212]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN8@xmlGetFeat:

; 183  :     } else if (!strcmp(name, "fetch external entities")) {

	mov	DWORD PTR tv501[ebp], OFFSET ??_C@_0BI@NFNCEEMJ@fetch?5external?5entities@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv499[ebp], eax
$LL97@xmlGetFeat:
	mov	ecx, DWORD PTR tv499[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv504[ebp], dl
	mov	eax, DWORD PTR tv501[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN98@xmlGetFeat
	cmp	BYTE PTR tv504[ebp], 0
	je	SHORT $LN99@xmlGetFeat
	mov	ecx, DWORD PTR tv499[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv511[ebp], dl
	mov	eax, DWORD PTR tv501[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN98@xmlGetFeat
	add	DWORD PTR tv499[ebp], 2
	add	DWORD PTR tv501[ebp], 2
	cmp	BYTE PTR tv511[ebp], 0
	jne	SHORT $LL97@xmlGetFeat
$LN99@xmlGetFeat:
	mov	DWORD PTR tv516[ebp], 0
	jmp	SHORT $LN100@xmlGetFeat
$LN98@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv516[ebp], ecx
$LN100@xmlGetFeat:
	mov	edx, DWORD PTR tv516[ebp]
	mov	DWORD PTR tv88[ebp], edx
	cmp	DWORD PTR tv88[ebp], 0
	jne	SHORT $LN10@xmlGetFeat

; 184  :         *((int *) result) = ctxt->loadsubset;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+276]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN10@xmlGetFeat:

; 185  :     } else if (!strcmp(name, "substitute entities")) {

	mov	DWORD PTR tv525[ebp], OFFSET ??_C@_0BE@MFJOLEGC@substitute?5entities@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv523[ebp], eax
$LL101@xmlGetFeat:
	mov	ecx, DWORD PTR tv523[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv528[ebp], dl
	mov	eax, DWORD PTR tv525[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN102@xmlGetFeat
	cmp	BYTE PTR tv528[ebp], 0
	je	SHORT $LN103@xmlGetFeat
	mov	ecx, DWORD PTR tv523[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv535[ebp], dl
	mov	eax, DWORD PTR tv525[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN102@xmlGetFeat
	add	DWORD PTR tv523[ebp], 2
	add	DWORD PTR tv525[ebp], 2
	cmp	BYTE PTR tv535[ebp], 0
	jne	SHORT $LL101@xmlGetFeat
$LN103@xmlGetFeat:
	mov	DWORD PTR tv540[ebp], 0
	jmp	SHORT $LN104@xmlGetFeat
$LN102@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv540[ebp], ecx
$LN104@xmlGetFeat:
	mov	edx, DWORD PTR tv540[ebp]
	mov	DWORD PTR tv94[ebp], edx
	cmp	DWORD PTR tv94[ebp], 0
	jne	SHORT $LN12@xmlGetFeat

; 186  :         *((int *) result) = ctxt->replaceEntities;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN12@xmlGetFeat:

; 187  :     } else if (!strcmp(name, "gather line info")) {

	mov	DWORD PTR tv549[ebp], OFFSET ??_C@_0BB@FNGHLMDK@gather?5line?5info@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv547[ebp], eax
$LL105@xmlGetFeat:
	mov	ecx, DWORD PTR tv547[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv552[ebp], dl
	mov	eax, DWORD PTR tv549[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN106@xmlGetFeat
	cmp	BYTE PTR tv552[ebp], 0
	je	SHORT $LN107@xmlGetFeat
	mov	ecx, DWORD PTR tv547[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv559[ebp], dl
	mov	eax, DWORD PTR tv549[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN106@xmlGetFeat
	add	DWORD PTR tv547[ebp], 2
	add	DWORD PTR tv549[ebp], 2
	cmp	BYTE PTR tv559[ebp], 0
	jne	SHORT $LL105@xmlGetFeat
$LN107@xmlGetFeat:
	mov	DWORD PTR tv564[ebp], 0
	jmp	SHORT $LN108@xmlGetFeat
$LN106@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv564[ebp], ecx
$LN108@xmlGetFeat:
	mov	edx, DWORD PTR tv564[ebp]
	mov	DWORD PTR tv132[ebp], edx
	cmp	DWORD PTR tv132[ebp], 0
	jne	SHORT $LN14@xmlGetFeat

; 188  :         *((int *) result) = ctxt->record_info;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN14@xmlGetFeat:

; 189  :     } else if (!strcmp(name, "user data")) {

	mov	DWORD PTR tv573[ebp], OFFSET ??_C@_09OBFNJHCP@user?5data@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv571[ebp], eax
$LL109@xmlGetFeat:
	mov	ecx, DWORD PTR tv571[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv576[ebp], dl
	mov	eax, DWORD PTR tv573[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN110@xmlGetFeat
	cmp	BYTE PTR tv576[ebp], 0
	je	SHORT $LN111@xmlGetFeat
	mov	ecx, DWORD PTR tv571[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv583[ebp], dl
	mov	eax, DWORD PTR tv573[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN110@xmlGetFeat
	add	DWORD PTR tv571[ebp], 2
	add	DWORD PTR tv573[ebp], 2
	cmp	BYTE PTR tv583[ebp], 0
	jne	SHORT $LL109@xmlGetFeat
$LN111@xmlGetFeat:
	mov	DWORD PTR tv588[ebp], 0
	jmp	SHORT $LN112@xmlGetFeat
$LN110@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv588[ebp], ecx
$LN112@xmlGetFeat:
	mov	edx, DWORD PTR tv588[ebp]
	mov	DWORD PTR tv138[ebp], edx
	cmp	DWORD PTR tv138[ebp], 0
	jne	SHORT $LN16@xmlGetFeat

; 190  :         *((void **) result) = ctxt->userData;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN16@xmlGetFeat:

; 191  :     } else if (!strcmp(name, "is html")) {

	mov	DWORD PTR tv597[ebp], OFFSET ??_C@_07ELANCDBJ@is?5html@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv595[ebp], eax
$LL113@xmlGetFeat:
	mov	ecx, DWORD PTR tv595[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv600[ebp], dl
	mov	eax, DWORD PTR tv597[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN114@xmlGetFeat
	cmp	BYTE PTR tv600[ebp], 0
	je	SHORT $LN115@xmlGetFeat
	mov	ecx, DWORD PTR tv595[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv607[ebp], dl
	mov	eax, DWORD PTR tv597[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN114@xmlGetFeat
	add	DWORD PTR tv595[ebp], 2
	add	DWORD PTR tv597[ebp], 2
	cmp	BYTE PTR tv607[ebp], 0
	jne	SHORT $LL113@xmlGetFeat
$LN115@xmlGetFeat:
	mov	DWORD PTR tv612[ebp], 0
	jmp	SHORT $LN116@xmlGetFeat
$LN114@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv612[ebp], ecx
$LN116@xmlGetFeat:
	mov	edx, DWORD PTR tv612[ebp]
	mov	DWORD PTR tv144[ebp], edx
	cmp	DWORD PTR tv144[ebp], 0
	jne	SHORT $LN18@xmlGetFeat

; 192  :         *((int *) result) = ctxt->html;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN18@xmlGetFeat:

; 193  :     } else if (!strcmp(name, "is standalone")) {

	mov	DWORD PTR tv621[ebp], OFFSET ??_C@_0O@NMMOLLEF@is?5standalone@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv619[ebp], eax
$LL117@xmlGetFeat:
	mov	ecx, DWORD PTR tv619[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv624[ebp], dl
	mov	eax, DWORD PTR tv621[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN118@xmlGetFeat
	cmp	BYTE PTR tv624[ebp], 0
	je	SHORT $LN119@xmlGetFeat
	mov	ecx, DWORD PTR tv619[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv631[ebp], dl
	mov	eax, DWORD PTR tv621[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN118@xmlGetFeat
	add	DWORD PTR tv619[ebp], 2
	add	DWORD PTR tv621[ebp], 2
	cmp	BYTE PTR tv631[ebp], 0
	jne	SHORT $LL117@xmlGetFeat
$LN119@xmlGetFeat:
	mov	DWORD PTR tv636[ebp], 0
	jmp	SHORT $LN120@xmlGetFeat
$LN118@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv636[ebp], ecx
$LN120@xmlGetFeat:
	mov	edx, DWORD PTR tv636[ebp]
	mov	DWORD PTR tv150[ebp], edx
	cmp	DWORD PTR tv150[ebp], 0
	jne	SHORT $LN20@xmlGetFeat

; 194  :         *((int *) result) = ctxt->standalone;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN20@xmlGetFeat:

; 195  :     } else if (!strcmp(name, "document")) {

	mov	DWORD PTR tv645[ebp], OFFSET ??_C@_08JEEDKNPB@document@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv643[ebp], eax
$LL121@xmlGetFeat:
	mov	ecx, DWORD PTR tv643[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv648[ebp], dl
	mov	eax, DWORD PTR tv645[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN122@xmlGetFeat
	cmp	BYTE PTR tv648[ebp], 0
	je	SHORT $LN123@xmlGetFeat
	mov	ecx, DWORD PTR tv643[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv655[ebp], dl
	mov	eax, DWORD PTR tv645[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN122@xmlGetFeat
	add	DWORD PTR tv643[ebp], 2
	add	DWORD PTR tv645[ebp], 2
	cmp	BYTE PTR tv655[ebp], 0
	jne	SHORT $LL121@xmlGetFeat
$LN123@xmlGetFeat:
	mov	DWORD PTR tv660[ebp], 0
	jmp	SHORT $LN124@xmlGetFeat
$LN122@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv660[ebp], ecx
$LN124@xmlGetFeat:
	mov	edx, DWORD PTR tv660[ebp]
	mov	DWORD PTR tv156[ebp], edx
	cmp	DWORD PTR tv156[ebp], 0
	jne	SHORT $LN22@xmlGetFeat

; 196  :         *((xmlDocPtr *) result) = ctxt->myDoc;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN22@xmlGetFeat:

; 197  :     } else if (!strcmp(name, "is well formed")) {

	mov	DWORD PTR tv669[ebp], OFFSET ??_C@_0P@NEKMCKKP@is?5well?5formed@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv667[ebp], eax
$LL125@xmlGetFeat:
	mov	ecx, DWORD PTR tv667[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv672[ebp], dl
	mov	eax, DWORD PTR tv669[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN126@xmlGetFeat
	cmp	BYTE PTR tv672[ebp], 0
	je	SHORT $LN127@xmlGetFeat
	mov	ecx, DWORD PTR tv667[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv679[ebp], dl
	mov	eax, DWORD PTR tv669[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN126@xmlGetFeat
	add	DWORD PTR tv667[ebp], 2
	add	DWORD PTR tv669[ebp], 2
	cmp	BYTE PTR tv679[ebp], 0
	jne	SHORT $LL125@xmlGetFeat
$LN127@xmlGetFeat:
	mov	DWORD PTR tv684[ebp], 0
	jmp	SHORT $LN128@xmlGetFeat
$LN126@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv684[ebp], ecx
$LN128@xmlGetFeat:
	mov	edx, DWORD PTR tv684[ebp]
	mov	DWORD PTR tv162[ebp], edx
	cmp	DWORD PTR tv162[ebp], 0
	jne	SHORT $LN24@xmlGetFeat

; 198  :         *((int *) result) = ctxt->wellFormed;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN24@xmlGetFeat:

; 199  :     } else if (!strcmp(name, "is valid")) {

	mov	DWORD PTR tv693[ebp], OFFSET ??_C@_08EKBKNFNH@is?5valid@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv691[ebp], eax
$LL129@xmlGetFeat:
	mov	ecx, DWORD PTR tv691[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv696[ebp], dl
	mov	eax, DWORD PTR tv693[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN130@xmlGetFeat
	cmp	BYTE PTR tv696[ebp], 0
	je	SHORT $LN131@xmlGetFeat
	mov	ecx, DWORD PTR tv691[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv703[ebp], dl
	mov	eax, DWORD PTR tv693[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN130@xmlGetFeat
	add	DWORD PTR tv691[ebp], 2
	add	DWORD PTR tv693[ebp], 2
	cmp	BYTE PTR tv703[ebp], 0
	jne	SHORT $LL129@xmlGetFeat
$LN131@xmlGetFeat:
	mov	DWORD PTR tv708[ebp], 0
	jmp	SHORT $LN132@xmlGetFeat
$LN130@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv708[ebp], ecx
$LN132@xmlGetFeat:
	mov	edx, DWORD PTR tv708[ebp]
	mov	DWORD PTR tv168[ebp], edx
	cmp	DWORD PTR tv168[ebp], 0
	jne	SHORT $LN26@xmlGetFeat

; 200  :         *((int *) result) = ctxt->valid;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN26@xmlGetFeat:

; 201  :     } else if (!strcmp(name, "SAX block")) {

	mov	DWORD PTR tv717[ebp], OFFSET ??_C@_09HIOCHIDE@SAX?5block@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv715[ebp], eax
$LL133@xmlGetFeat:
	mov	ecx, DWORD PTR tv715[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv720[ebp], dl
	mov	eax, DWORD PTR tv717[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN134@xmlGetFeat
	cmp	BYTE PTR tv720[ebp], 0
	je	SHORT $LN135@xmlGetFeat
	mov	ecx, DWORD PTR tv715[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv727[ebp], dl
	mov	eax, DWORD PTR tv717[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN134@xmlGetFeat
	add	DWORD PTR tv715[ebp], 2
	add	DWORD PTR tv717[ebp], 2
	cmp	BYTE PTR tv727[ebp], 0
	jne	SHORT $LL133@xmlGetFeat
$LN135@xmlGetFeat:
	mov	DWORD PTR tv732[ebp], 0
	jmp	SHORT $LN136@xmlGetFeat
$LN134@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv732[ebp], ecx
$LN136@xmlGetFeat:
	mov	edx, DWORD PTR tv732[ebp]
	mov	DWORD PTR tv174[ebp], edx
	cmp	DWORD PTR tv174[ebp], 0
	jne	SHORT $LN28@xmlGetFeat

; 202  :         *((xmlSAXHandlerPtr *) result) = ctxt->sax;

	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	jmp	$LN5@xmlGetFeat
$LN28@xmlGetFeat:

; 203  :     } else if (!strcmp(name, "SAX function internalSubset")) {

	mov	DWORD PTR tv741[ebp], OFFSET ??_C@_0BM@OCAFNLBC@SAX?5function?5internalSubset@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv739[ebp], eax
$LL137@xmlGetFeat:
	mov	ecx, DWORD PTR tv739[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv744[ebp], dl
	mov	eax, DWORD PTR tv741[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN138@xmlGetFeat
	cmp	BYTE PTR tv744[ebp], 0
	je	SHORT $LN139@xmlGetFeat
	mov	ecx, DWORD PTR tv739[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv751[ebp], dl
	mov	eax, DWORD PTR tv741[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN138@xmlGetFeat
	add	DWORD PTR tv739[ebp], 2
	add	DWORD PTR tv741[ebp], 2
	cmp	BYTE PTR tv751[ebp], 0
	jne	SHORT $LL137@xmlGetFeat
$LN139@xmlGetFeat:
	mov	DWORD PTR tv756[ebp], 0
	jmp	SHORT $LN140@xmlGetFeat
$LN138@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv756[ebp], ecx
$LN140@xmlGetFeat:
	mov	edx, DWORD PTR tv756[ebp]
	mov	DWORD PTR tv180[ebp], edx
	cmp	DWORD PTR tv180[ebp], 0
	jne	SHORT $LN30@xmlGetFeat

; 204  :         *((internalSubsetSAXFunc *) result) = ctxt->sax->internalSubset;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN30@xmlGetFeat:

; 205  :     } else if (!strcmp(name, "SAX function isStandalone")) {

	mov	DWORD PTR tv765[ebp], OFFSET ??_C@_0BK@KGOMEKBB@SAX?5function?5isStandalone@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv763[ebp], ecx
$LL141@xmlGetFeat:
	mov	edx, DWORD PTR tv763[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv768[ebp], al
	mov	ecx, DWORD PTR tv765[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN142@xmlGetFeat
	cmp	BYTE PTR tv768[ebp], 0
	je	SHORT $LN143@xmlGetFeat
	mov	edx, DWORD PTR tv763[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv775[ebp], al
	mov	ecx, DWORD PTR tv765[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN142@xmlGetFeat
	add	DWORD PTR tv763[ebp], 2
	add	DWORD PTR tv765[ebp], 2
	cmp	BYTE PTR tv775[ebp], 0
	jne	SHORT $LL141@xmlGetFeat
$LN143@xmlGetFeat:
	mov	DWORD PTR tv780[ebp], 0
	jmp	SHORT $LN144@xmlGetFeat
$LN142@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv780[ebp], edx
$LN144@xmlGetFeat:
	mov	eax, DWORD PTR tv780[ebp]
	mov	DWORD PTR tv187[ebp], eax
	cmp	DWORD PTR tv187[ebp], 0
	jne	SHORT $LN32@xmlGetFeat

; 206  :         *((isStandaloneSAXFunc *) result) = ctxt->sax->isStandalone;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+4]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN32@xmlGetFeat:

; 207  :     } else if (!strcmp(name, "SAX function hasInternalSubset")) {

	mov	DWORD PTR tv789[ebp], OFFSET ??_C@_0BP@PCBCHDK@SAX?5function?5hasInternalSubset@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv787[ebp], edx
$LL145@xmlGetFeat:
	mov	eax, DWORD PTR tv787[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv792[ebp], cl
	mov	edx, DWORD PTR tv789[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN146@xmlGetFeat
	cmp	BYTE PTR tv792[ebp], 0
	je	SHORT $LN147@xmlGetFeat
	mov	eax, DWORD PTR tv787[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv799[ebp], cl
	mov	edx, DWORD PTR tv789[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN146@xmlGetFeat
	add	DWORD PTR tv787[ebp], 2
	add	DWORD PTR tv789[ebp], 2
	cmp	BYTE PTR tv799[ebp], 0
	jne	SHORT $LL145@xmlGetFeat
$LN147@xmlGetFeat:
	mov	DWORD PTR tv804[ebp], 0
	jmp	SHORT $LN148@xmlGetFeat
$LN146@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv804[ebp], eax
$LN148@xmlGetFeat:
	mov	ecx, DWORD PTR tv804[ebp]
	mov	DWORD PTR tv194[ebp], ecx
	cmp	DWORD PTR tv194[ebp], 0
	jne	SHORT $LN34@xmlGetFeat

; 208  :         *((hasInternalSubsetSAXFunc *) result) =

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN34@xmlGetFeat:

; 209  :             ctxt->sax->hasInternalSubset;
; 210  :     } else if (!strcmp(name, "SAX function hasExternalSubset")) {

	mov	DWORD PTR tv813[ebp], OFFSET ??_C@_0BP@NEKEPJAE@SAX?5function?5hasExternalSubset@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv811[ebp], eax
$LL149@xmlGetFeat:
	mov	ecx, DWORD PTR tv811[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv816[ebp], dl
	mov	eax, DWORD PTR tv813[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN150@xmlGetFeat
	cmp	BYTE PTR tv816[ebp], 0
	je	SHORT $LN151@xmlGetFeat
	mov	ecx, DWORD PTR tv811[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv823[ebp], dl
	mov	eax, DWORD PTR tv813[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN150@xmlGetFeat
	add	DWORD PTR tv811[ebp], 2
	add	DWORD PTR tv813[ebp], 2
	cmp	BYTE PTR tv823[ebp], 0
	jne	SHORT $LL149@xmlGetFeat
$LN151@xmlGetFeat:
	mov	DWORD PTR tv828[ebp], 0
	jmp	SHORT $LN152@xmlGetFeat
$LN150@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv828[ebp], ecx
$LN152@xmlGetFeat:
	mov	edx, DWORD PTR tv828[ebp]
	mov	DWORD PTR tv201[ebp], edx
	cmp	DWORD PTR tv201[ebp], 0
	jne	SHORT $LN36@xmlGetFeat

; 211  :         *((hasExternalSubsetSAXFunc *) result) =

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+12]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN36@xmlGetFeat:

; 212  :             ctxt->sax->hasExternalSubset;
; 213  :     } else if (!strcmp(name, "SAX function resolveEntity")) {

	mov	DWORD PTR tv837[ebp], OFFSET ??_C@_0BL@PDBAGIFI@SAX?5function?5resolveEntity@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv835[ebp], ecx
$LL153@xmlGetFeat:
	mov	edx, DWORD PTR tv835[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv840[ebp], al
	mov	ecx, DWORD PTR tv837[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN154@xmlGetFeat
	cmp	BYTE PTR tv840[ebp], 0
	je	SHORT $LN155@xmlGetFeat
	mov	edx, DWORD PTR tv835[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv847[ebp], al
	mov	ecx, DWORD PTR tv837[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN154@xmlGetFeat
	add	DWORD PTR tv835[ebp], 2
	add	DWORD PTR tv837[ebp], 2
	cmp	BYTE PTR tv847[ebp], 0
	jne	SHORT $LL153@xmlGetFeat
$LN155@xmlGetFeat:
	mov	DWORD PTR tv852[ebp], 0
	jmp	SHORT $LN156@xmlGetFeat
$LN154@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv852[ebp], edx
$LN156@xmlGetFeat:
	mov	eax, DWORD PTR tv852[ebp]
	mov	DWORD PTR tv208[ebp], eax
	cmp	DWORD PTR tv208[ebp], 0
	jne	SHORT $LN38@xmlGetFeat

; 214  :         *((resolveEntitySAXFunc *) result) = ctxt->sax->resolveEntity;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN38@xmlGetFeat:

; 215  :     } else if (!strcmp(name, "SAX function getEntity")) {

	mov	DWORD PTR tv861[ebp], OFFSET ??_C@_0BH@FFFDLCDF@SAX?5function?5getEntity@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv859[ebp], edx
$LL157@xmlGetFeat:
	mov	eax, DWORD PTR tv859[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv864[ebp], cl
	mov	edx, DWORD PTR tv861[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN158@xmlGetFeat
	cmp	BYTE PTR tv864[ebp], 0
	je	SHORT $LN159@xmlGetFeat
	mov	eax, DWORD PTR tv859[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv871[ebp], cl
	mov	edx, DWORD PTR tv861[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN158@xmlGetFeat
	add	DWORD PTR tv859[ebp], 2
	add	DWORD PTR tv861[ebp], 2
	cmp	BYTE PTR tv871[ebp], 0
	jne	SHORT $LL157@xmlGetFeat
$LN159@xmlGetFeat:
	mov	DWORD PTR tv876[ebp], 0
	jmp	SHORT $LN160@xmlGetFeat
$LN158@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv876[ebp], eax
$LN160@xmlGetFeat:
	mov	ecx, DWORD PTR tv876[ebp]
	mov	DWORD PTR tv215[ebp], ecx
	cmp	DWORD PTR tv215[ebp], 0
	jne	SHORT $LN40@xmlGetFeat

; 216  :         *((getEntitySAXFunc *) result) = ctxt->sax->getEntity;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+20]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN40@xmlGetFeat:

; 217  :     } else if (!strcmp(name, "SAX function entityDecl")) {

	mov	DWORD PTR tv885[ebp], OFFSET ??_C@_0BI@COIOKLKC@SAX?5function?5entityDecl@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv883[ebp], eax
$LL161@xmlGetFeat:
	mov	ecx, DWORD PTR tv883[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv888[ebp], dl
	mov	eax, DWORD PTR tv885[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN162@xmlGetFeat
	cmp	BYTE PTR tv888[ebp], 0
	je	SHORT $LN163@xmlGetFeat
	mov	ecx, DWORD PTR tv883[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv895[ebp], dl
	mov	eax, DWORD PTR tv885[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN162@xmlGetFeat
	add	DWORD PTR tv883[ebp], 2
	add	DWORD PTR tv885[ebp], 2
	cmp	BYTE PTR tv895[ebp], 0
	jne	SHORT $LL161@xmlGetFeat
$LN163@xmlGetFeat:
	mov	DWORD PTR tv900[ebp], 0
	jmp	SHORT $LN164@xmlGetFeat
$LN162@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv900[ebp], ecx
$LN164@xmlGetFeat:
	mov	edx, DWORD PTR tv900[ebp]
	mov	DWORD PTR tv222[ebp], edx
	cmp	DWORD PTR tv222[ebp], 0
	jne	SHORT $LN42@xmlGetFeat

; 218  :         *((entityDeclSAXFunc *) result) = ctxt->sax->entityDecl;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN42@xmlGetFeat:

; 219  :     } else if (!strcmp(name, "SAX function notationDecl")) {

	mov	DWORD PTR tv909[ebp], OFFSET ??_C@_0BK@OEHIHIHP@SAX?5function?5notationDecl@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv907[ebp], ecx
$LL165@xmlGetFeat:
	mov	edx, DWORD PTR tv907[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv912[ebp], al
	mov	ecx, DWORD PTR tv909[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN166@xmlGetFeat
	cmp	BYTE PTR tv912[ebp], 0
	je	SHORT $LN167@xmlGetFeat
	mov	edx, DWORD PTR tv907[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv919[ebp], al
	mov	ecx, DWORD PTR tv909[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN166@xmlGetFeat
	add	DWORD PTR tv907[ebp], 2
	add	DWORD PTR tv909[ebp], 2
	cmp	BYTE PTR tv919[ebp], 0
	jne	SHORT $LL165@xmlGetFeat
$LN167@xmlGetFeat:
	mov	DWORD PTR tv924[ebp], 0
	jmp	SHORT $LN168@xmlGetFeat
$LN166@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv924[ebp], edx
$LN168@xmlGetFeat:
	mov	eax, DWORD PTR tv924[ebp]
	mov	DWORD PTR tv229[ebp], eax
	cmp	DWORD PTR tv229[ebp], 0
	jne	SHORT $LN44@xmlGetFeat

; 220  :         *((notationDeclSAXFunc *) result) = ctxt->sax->notationDecl;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+28]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN44@xmlGetFeat:

; 221  :     } else if (!strcmp(name, "SAX function attributeDecl")) {

	mov	DWORD PTR tv933[ebp], OFFSET ??_C@_0BL@FLOOINBL@SAX?5function?5attributeDecl@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv931[ebp], edx
$LL169@xmlGetFeat:
	mov	eax, DWORD PTR tv931[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv936[ebp], cl
	mov	edx, DWORD PTR tv933[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN170@xmlGetFeat
	cmp	BYTE PTR tv936[ebp], 0
	je	SHORT $LN171@xmlGetFeat
	mov	eax, DWORD PTR tv931[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv943[ebp], cl
	mov	edx, DWORD PTR tv933[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN170@xmlGetFeat
	add	DWORD PTR tv931[ebp], 2
	add	DWORD PTR tv933[ebp], 2
	cmp	BYTE PTR tv943[ebp], 0
	jne	SHORT $LL169@xmlGetFeat
$LN171@xmlGetFeat:
	mov	DWORD PTR tv948[ebp], 0
	jmp	SHORT $LN172@xmlGetFeat
$LN170@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv948[ebp], eax
$LN172@xmlGetFeat:
	mov	ecx, DWORD PTR tv948[ebp]
	mov	DWORD PTR tv236[ebp], ecx
	cmp	DWORD PTR tv236[ebp], 0
	jne	SHORT $LN46@xmlGetFeat

; 222  :         *((attributeDeclSAXFunc *) result) = ctxt->sax->attributeDecl;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+32]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN46@xmlGetFeat:

; 223  :     } else if (!strcmp(name, "SAX function elementDecl")) {

	mov	DWORD PTR tv957[ebp], OFFSET ??_C@_0BJ@PINGOANC@SAX?5function?5elementDecl@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv955[ebp], eax
$LL173@xmlGetFeat:
	mov	ecx, DWORD PTR tv955[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv960[ebp], dl
	mov	eax, DWORD PTR tv957[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN174@xmlGetFeat
	cmp	BYTE PTR tv960[ebp], 0
	je	SHORT $LN175@xmlGetFeat
	mov	ecx, DWORD PTR tv955[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv967[ebp], dl
	mov	eax, DWORD PTR tv957[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN174@xmlGetFeat
	add	DWORD PTR tv955[ebp], 2
	add	DWORD PTR tv957[ebp], 2
	cmp	BYTE PTR tv967[ebp], 0
	jne	SHORT $LL173@xmlGetFeat
$LN175@xmlGetFeat:
	mov	DWORD PTR tv972[ebp], 0
	jmp	SHORT $LN176@xmlGetFeat
$LN174@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv972[ebp], ecx
$LN176@xmlGetFeat:
	mov	edx, DWORD PTR tv972[ebp]
	mov	DWORD PTR tv243[ebp], edx
	cmp	DWORD PTR tv243[ebp], 0
	jne	SHORT $LN48@xmlGetFeat

; 224  :         *((elementDeclSAXFunc *) result) = ctxt->sax->elementDecl;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+36]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN48@xmlGetFeat:

; 225  :     } else if (!strcmp(name, "SAX function unparsedEntityDecl")) {

	mov	DWORD PTR tv981[ebp], OFFSET ??_C@_0CA@PPDJGMOP@SAX?5function?5unparsedEntityDecl@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv979[ebp], ecx
$LL177@xmlGetFeat:
	mov	edx, DWORD PTR tv979[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv984[ebp], al
	mov	ecx, DWORD PTR tv981[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN178@xmlGetFeat
	cmp	BYTE PTR tv984[ebp], 0
	je	SHORT $LN179@xmlGetFeat
	mov	edx, DWORD PTR tv979[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv991[ebp], al
	mov	ecx, DWORD PTR tv981[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN178@xmlGetFeat
	add	DWORD PTR tv979[ebp], 2
	add	DWORD PTR tv981[ebp], 2
	cmp	BYTE PTR tv991[ebp], 0
	jne	SHORT $LL177@xmlGetFeat
$LN179@xmlGetFeat:
	mov	DWORD PTR tv996[ebp], 0
	jmp	SHORT $LN180@xmlGetFeat
$LN178@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv996[ebp], edx
$LN180@xmlGetFeat:
	mov	eax, DWORD PTR tv996[ebp]
	mov	DWORD PTR tv250[ebp], eax
	cmp	DWORD PTR tv250[ebp], 0
	jne	SHORT $LN50@xmlGetFeat

; 226  :         *((unparsedEntityDeclSAXFunc *) result) =

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+40]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN50@xmlGetFeat:

; 227  :             ctxt->sax->unparsedEntityDecl;
; 228  :     } else if (!strcmp(name, "SAX function setDocumentLocator")) {

	mov	DWORD PTR tv1005[ebp], OFFSET ??_C@_0CA@LKGNIEEL@SAX?5function?5setDocumentLocator@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1003[ebp], edx
$LL181@xmlGetFeat:
	mov	eax, DWORD PTR tv1003[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1008[ebp], cl
	mov	edx, DWORD PTR tv1005[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN182@xmlGetFeat
	cmp	BYTE PTR tv1008[ebp], 0
	je	SHORT $LN183@xmlGetFeat
	mov	eax, DWORD PTR tv1003[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1015[ebp], cl
	mov	edx, DWORD PTR tv1005[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN182@xmlGetFeat
	add	DWORD PTR tv1003[ebp], 2
	add	DWORD PTR tv1005[ebp], 2
	cmp	BYTE PTR tv1015[ebp], 0
	jne	SHORT $LL181@xmlGetFeat
$LN183@xmlGetFeat:
	mov	DWORD PTR tv1020[ebp], 0
	jmp	SHORT $LN184@xmlGetFeat
$LN182@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1020[ebp], eax
$LN184@xmlGetFeat:
	mov	ecx, DWORD PTR tv1020[ebp]
	mov	DWORD PTR tv257[ebp], ecx
	cmp	DWORD PTR tv257[ebp], 0
	jne	SHORT $LN52@xmlGetFeat

; 229  :         *((setDocumentLocatorSAXFunc *) result) =

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+44]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN52@xmlGetFeat:

; 230  :             ctxt->sax->setDocumentLocator;
; 231  :     } else if (!strcmp(name, "SAX function startDocument")) {

	mov	DWORD PTR tv1029[ebp], OFFSET ??_C@_0BL@GBPENFAA@SAX?5function?5startDocument@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1027[ebp], eax
$LL185@xmlGetFeat:
	mov	ecx, DWORD PTR tv1027[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1032[ebp], dl
	mov	eax, DWORD PTR tv1029[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN186@xmlGetFeat
	cmp	BYTE PTR tv1032[ebp], 0
	je	SHORT $LN187@xmlGetFeat
	mov	ecx, DWORD PTR tv1027[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1039[ebp], dl
	mov	eax, DWORD PTR tv1029[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN186@xmlGetFeat
	add	DWORD PTR tv1027[ebp], 2
	add	DWORD PTR tv1029[ebp], 2
	cmp	BYTE PTR tv1039[ebp], 0
	jne	SHORT $LL185@xmlGetFeat
$LN187@xmlGetFeat:
	mov	DWORD PTR tv1044[ebp], 0
	jmp	SHORT $LN188@xmlGetFeat
$LN186@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1044[ebp], ecx
$LN188@xmlGetFeat:
	mov	edx, DWORD PTR tv1044[ebp]
	mov	DWORD PTR tv264[ebp], edx
	cmp	DWORD PTR tv264[ebp], 0
	jne	SHORT $LN54@xmlGetFeat

; 232  :         *((startDocumentSAXFunc *) result) = ctxt->sax->startDocument;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+48]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN54@xmlGetFeat:

; 233  :     } else if (!strcmp(name, "SAX function endDocument")) {

	mov	DWORD PTR tv1053[ebp], OFFSET ??_C@_0BJ@BMHDOOAH@SAX?5function?5endDocument@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1051[ebp], ecx
$LL189@xmlGetFeat:
	mov	edx, DWORD PTR tv1051[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1056[ebp], al
	mov	ecx, DWORD PTR tv1053[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN190@xmlGetFeat
	cmp	BYTE PTR tv1056[ebp], 0
	je	SHORT $LN191@xmlGetFeat
	mov	edx, DWORD PTR tv1051[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1063[ebp], al
	mov	ecx, DWORD PTR tv1053[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN190@xmlGetFeat
	add	DWORD PTR tv1051[ebp], 2
	add	DWORD PTR tv1053[ebp], 2
	cmp	BYTE PTR tv1063[ebp], 0
	jne	SHORT $LL189@xmlGetFeat
$LN191@xmlGetFeat:
	mov	DWORD PTR tv1068[ebp], 0
	jmp	SHORT $LN192@xmlGetFeat
$LN190@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1068[ebp], edx
$LN192@xmlGetFeat:
	mov	eax, DWORD PTR tv1068[ebp]
	mov	DWORD PTR tv271[ebp], eax
	cmp	DWORD PTR tv271[ebp], 0
	jne	SHORT $LN56@xmlGetFeat

; 234  :         *((endDocumentSAXFunc *) result) = ctxt->sax->endDocument;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+52]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN56@xmlGetFeat:

; 235  :     } else if (!strcmp(name, "SAX function startElement")) {

	mov	DWORD PTR tv1077[ebp], OFFSET ??_C@_0BK@MKAFHOHD@SAX?5function?5startElement@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1075[ebp], edx
$LL193@xmlGetFeat:
	mov	eax, DWORD PTR tv1075[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1080[ebp], cl
	mov	edx, DWORD PTR tv1077[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN194@xmlGetFeat
	cmp	BYTE PTR tv1080[ebp], 0
	je	SHORT $LN195@xmlGetFeat
	mov	eax, DWORD PTR tv1075[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1087[ebp], cl
	mov	edx, DWORD PTR tv1077[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN194@xmlGetFeat
	add	DWORD PTR tv1075[ebp], 2
	add	DWORD PTR tv1077[ebp], 2
	cmp	BYTE PTR tv1087[ebp], 0
	jne	SHORT $LL193@xmlGetFeat
$LN195@xmlGetFeat:
	mov	DWORD PTR tv1092[ebp], 0
	jmp	SHORT $LN196@xmlGetFeat
$LN194@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1092[ebp], eax
$LN196@xmlGetFeat:
	mov	ecx, DWORD PTR tv1092[ebp]
	mov	DWORD PTR tv278[ebp], ecx
	cmp	DWORD PTR tv278[ebp], 0
	jne	SHORT $LN58@xmlGetFeat

; 236  :         *((startElementSAXFunc *) result) = ctxt->sax->startElement;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+56]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN58@xmlGetFeat:

; 237  :     } else if (!strcmp(name, "SAX function endElement")) {

	mov	DWORD PTR tv1101[ebp], OFFSET ??_C@_0BI@EKKAMIPM@SAX?5function?5endElement@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1099[ebp], eax
$LL197@xmlGetFeat:
	mov	ecx, DWORD PTR tv1099[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1104[ebp], dl
	mov	eax, DWORD PTR tv1101[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN198@xmlGetFeat
	cmp	BYTE PTR tv1104[ebp], 0
	je	SHORT $LN199@xmlGetFeat
	mov	ecx, DWORD PTR tv1099[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1111[ebp], dl
	mov	eax, DWORD PTR tv1101[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN198@xmlGetFeat
	add	DWORD PTR tv1099[ebp], 2
	add	DWORD PTR tv1101[ebp], 2
	cmp	BYTE PTR tv1111[ebp], 0
	jne	SHORT $LL197@xmlGetFeat
$LN199@xmlGetFeat:
	mov	DWORD PTR tv1116[ebp], 0
	jmp	SHORT $LN200@xmlGetFeat
$LN198@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1116[ebp], ecx
$LN200@xmlGetFeat:
	mov	edx, DWORD PTR tv1116[ebp]
	mov	DWORD PTR tv285[ebp], edx
	cmp	DWORD PTR tv285[ebp], 0
	jne	SHORT $LN60@xmlGetFeat

; 238  :         *((endElementSAXFunc *) result) = ctxt->sax->endElement;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+60]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN60@xmlGetFeat:

; 239  :     } else if (!strcmp(name, "SAX function reference")) {

	mov	DWORD PTR tv1125[ebp], OFFSET ??_C@_0BH@COKKFLJA@SAX?5function?5reference@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1123[ebp], ecx
$LL201@xmlGetFeat:
	mov	edx, DWORD PTR tv1123[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1128[ebp], al
	mov	ecx, DWORD PTR tv1125[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN202@xmlGetFeat
	cmp	BYTE PTR tv1128[ebp], 0
	je	SHORT $LN203@xmlGetFeat
	mov	edx, DWORD PTR tv1123[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1135[ebp], al
	mov	ecx, DWORD PTR tv1125[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN202@xmlGetFeat
	add	DWORD PTR tv1123[ebp], 2
	add	DWORD PTR tv1125[ebp], 2
	cmp	BYTE PTR tv1135[ebp], 0
	jne	SHORT $LL201@xmlGetFeat
$LN203@xmlGetFeat:
	mov	DWORD PTR tv1140[ebp], 0
	jmp	SHORT $LN204@xmlGetFeat
$LN202@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1140[ebp], edx
$LN204@xmlGetFeat:
	mov	eax, DWORD PTR tv1140[ebp]
	mov	DWORD PTR tv292[ebp], eax
	cmp	DWORD PTR tv292[ebp], 0
	jne	SHORT $LN62@xmlGetFeat

; 240  :         *((referenceSAXFunc *) result) = ctxt->sax->reference;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+64]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN62@xmlGetFeat:

; 241  :     } else if (!strcmp(name, "SAX function characters")) {

	mov	DWORD PTR tv1149[ebp], OFFSET ??_C@_0BI@OKJHNGCO@SAX?5function?5characters@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1147[ebp], edx
$LL205@xmlGetFeat:
	mov	eax, DWORD PTR tv1147[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1152[ebp], cl
	mov	edx, DWORD PTR tv1149[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN206@xmlGetFeat
	cmp	BYTE PTR tv1152[ebp], 0
	je	SHORT $LN207@xmlGetFeat
	mov	eax, DWORD PTR tv1147[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1159[ebp], cl
	mov	edx, DWORD PTR tv1149[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN206@xmlGetFeat
	add	DWORD PTR tv1147[ebp], 2
	add	DWORD PTR tv1149[ebp], 2
	cmp	BYTE PTR tv1159[ebp], 0
	jne	SHORT $LL205@xmlGetFeat
$LN207@xmlGetFeat:
	mov	DWORD PTR tv1164[ebp], 0
	jmp	SHORT $LN208@xmlGetFeat
$LN206@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1164[ebp], eax
$LN208@xmlGetFeat:
	mov	ecx, DWORD PTR tv1164[ebp]
	mov	DWORD PTR tv299[ebp], ecx
	cmp	DWORD PTR tv299[ebp], 0
	jne	SHORT $LN64@xmlGetFeat

; 242  :         *((charactersSAXFunc *) result) = ctxt->sax->characters;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+68]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN64@xmlGetFeat:

; 243  :     } else if (!strcmp(name, "SAX function ignorableWhitespace")) {

	mov	DWORD PTR tv1173[ebp], OFFSET ??_C@_0CB@KGCDCKOM@SAX?5function?5ignorableWhitespac@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1171[ebp], eax
$LL209@xmlGetFeat:
	mov	ecx, DWORD PTR tv1171[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1176[ebp], dl
	mov	eax, DWORD PTR tv1173[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN210@xmlGetFeat
	cmp	BYTE PTR tv1176[ebp], 0
	je	SHORT $LN211@xmlGetFeat
	mov	ecx, DWORD PTR tv1171[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1183[ebp], dl
	mov	eax, DWORD PTR tv1173[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN210@xmlGetFeat
	add	DWORD PTR tv1171[ebp], 2
	add	DWORD PTR tv1173[ebp], 2
	cmp	BYTE PTR tv1183[ebp], 0
	jne	SHORT $LL209@xmlGetFeat
$LN211@xmlGetFeat:
	mov	DWORD PTR tv1188[ebp], 0
	jmp	SHORT $LN212@xmlGetFeat
$LN210@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1188[ebp], ecx
$LN212@xmlGetFeat:
	mov	edx, DWORD PTR tv1188[ebp]
	mov	DWORD PTR tv306[ebp], edx
	cmp	DWORD PTR tv306[ebp], 0
	jne	SHORT $LN66@xmlGetFeat

; 244  :         *((ignorableWhitespaceSAXFunc *) result) =

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+72]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN66@xmlGetFeat:

; 245  :             ctxt->sax->ignorableWhitespace;
; 246  :     } else if (!strcmp(name, "SAX function processingInstruction")) {

	mov	DWORD PTR tv1197[ebp], OFFSET ??_C@_0CD@FCJNICIP@SAX?5function?5processingInstruct@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1195[ebp], ecx
$LL213@xmlGetFeat:
	mov	edx, DWORD PTR tv1195[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1200[ebp], al
	mov	ecx, DWORD PTR tv1197[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN214@xmlGetFeat
	cmp	BYTE PTR tv1200[ebp], 0
	je	SHORT $LN215@xmlGetFeat
	mov	edx, DWORD PTR tv1195[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1207[ebp], al
	mov	ecx, DWORD PTR tv1197[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN214@xmlGetFeat
	add	DWORD PTR tv1195[ebp], 2
	add	DWORD PTR tv1197[ebp], 2
	cmp	BYTE PTR tv1207[ebp], 0
	jne	SHORT $LL213@xmlGetFeat
$LN215@xmlGetFeat:
	mov	DWORD PTR tv1212[ebp], 0
	jmp	SHORT $LN216@xmlGetFeat
$LN214@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1212[ebp], edx
$LN216@xmlGetFeat:
	mov	eax, DWORD PTR tv1212[ebp]
	mov	DWORD PTR tv313[ebp], eax
	cmp	DWORD PTR tv313[ebp], 0
	jne	SHORT $LN68@xmlGetFeat

; 247  :         *((processingInstructionSAXFunc *) result) =

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+76]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN68@xmlGetFeat:

; 248  :             ctxt->sax->processingInstruction;
; 249  :     } else if (!strcmp(name, "SAX function comment")) {

	mov	DWORD PTR tv1221[ebp], OFFSET ??_C@_0BF@LMDIIKPA@SAX?5function?5comment@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1219[ebp], edx
$LL217@xmlGetFeat:
	mov	eax, DWORD PTR tv1219[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1224[ebp], cl
	mov	edx, DWORD PTR tv1221[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN218@xmlGetFeat
	cmp	BYTE PTR tv1224[ebp], 0
	je	SHORT $LN219@xmlGetFeat
	mov	eax, DWORD PTR tv1219[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1231[ebp], cl
	mov	edx, DWORD PTR tv1221[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN218@xmlGetFeat
	add	DWORD PTR tv1219[ebp], 2
	add	DWORD PTR tv1221[ebp], 2
	cmp	BYTE PTR tv1231[ebp], 0
	jne	SHORT $LL217@xmlGetFeat
$LN219@xmlGetFeat:
	mov	DWORD PTR tv1236[ebp], 0
	jmp	SHORT $LN220@xmlGetFeat
$LN218@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1236[ebp], eax
$LN220@xmlGetFeat:
	mov	ecx, DWORD PTR tv1236[ebp]
	mov	DWORD PTR tv352[ebp], ecx
	cmp	DWORD PTR tv352[ebp], 0
	jne	SHORT $LN70@xmlGetFeat

; 250  :         *((commentSAXFunc *) result) = ctxt->sax->comment;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+80]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN70@xmlGetFeat:

; 251  :     } else if (!strcmp(name, "SAX function warning")) {

	mov	DWORD PTR tv1245[ebp], OFFSET ??_C@_0BF@IKOPPKMI@SAX?5function?5warning@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1243[ebp], eax
$LL221@xmlGetFeat:
	mov	ecx, DWORD PTR tv1243[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1248[ebp], dl
	mov	eax, DWORD PTR tv1245[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN222@xmlGetFeat
	cmp	BYTE PTR tv1248[ebp], 0
	je	SHORT $LN223@xmlGetFeat
	mov	ecx, DWORD PTR tv1243[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1255[ebp], dl
	mov	eax, DWORD PTR tv1245[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN222@xmlGetFeat
	add	DWORD PTR tv1243[ebp], 2
	add	DWORD PTR tv1245[ebp], 2
	cmp	BYTE PTR tv1255[ebp], 0
	jne	SHORT $LL221@xmlGetFeat
$LN223@xmlGetFeat:
	mov	DWORD PTR tv1260[ebp], 0
	jmp	SHORT $LN224@xmlGetFeat
$LN222@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1260[ebp], ecx
$LN224@xmlGetFeat:
	mov	edx, DWORD PTR tv1260[ebp]
	mov	DWORD PTR tv359[ebp], edx
	cmp	DWORD PTR tv359[ebp], 0
	jne	SHORT $LN72@xmlGetFeat

; 252  :         *((warningSAXFunc *) result) = ctxt->sax->warning;

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+84]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN72@xmlGetFeat:

; 253  :     } else if (!strcmp(name, "SAX function error")) {

	mov	DWORD PTR tv1269[ebp], OFFSET ??_C@_0BD@DNENFEEM@SAX?5function?5error@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1267[ebp], ecx
$LL225@xmlGetFeat:
	mov	edx, DWORD PTR tv1267[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1272[ebp], al
	mov	ecx, DWORD PTR tv1269[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN226@xmlGetFeat
	cmp	BYTE PTR tv1272[ebp], 0
	je	SHORT $LN227@xmlGetFeat
	mov	edx, DWORD PTR tv1267[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1279[ebp], al
	mov	ecx, DWORD PTR tv1269[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN226@xmlGetFeat
	add	DWORD PTR tv1267[ebp], 2
	add	DWORD PTR tv1269[ebp], 2
	cmp	BYTE PTR tv1279[ebp], 0
	jne	SHORT $LL225@xmlGetFeat
$LN227@xmlGetFeat:
	mov	DWORD PTR tv1284[ebp], 0
	jmp	SHORT $LN228@xmlGetFeat
$LN226@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1284[ebp], edx
$LN228@xmlGetFeat:
	mov	eax, DWORD PTR tv1284[ebp]
	mov	DWORD PTR tv366[ebp], eax
	cmp	DWORD PTR tv366[ebp], 0
	jne	SHORT $LN74@xmlGetFeat

; 254  :         *((errorSAXFunc *) result) = ctxt->sax->error;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+88]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN74@xmlGetFeat:

; 255  :     } else if (!strcmp(name, "SAX function fatalError")) {

	mov	DWORD PTR tv1293[ebp], OFFSET ??_C@_0BI@IMPPHMFP@SAX?5function?5fatalError@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1291[ebp], edx
$LL229@xmlGetFeat:
	mov	eax, DWORD PTR tv1291[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1296[ebp], cl
	mov	edx, DWORD PTR tv1293[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN230@xmlGetFeat
	cmp	BYTE PTR tv1296[ebp], 0
	je	SHORT $LN231@xmlGetFeat
	mov	eax, DWORD PTR tv1291[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1303[ebp], cl
	mov	edx, DWORD PTR tv1293[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN230@xmlGetFeat
	add	DWORD PTR tv1291[ebp], 2
	add	DWORD PTR tv1293[ebp], 2
	cmp	BYTE PTR tv1303[ebp], 0
	jne	SHORT $LL229@xmlGetFeat
$LN231@xmlGetFeat:
	mov	DWORD PTR tv1308[ebp], 0
	jmp	SHORT $LN232@xmlGetFeat
$LN230@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1308[ebp], eax
$LN232@xmlGetFeat:
	mov	ecx, DWORD PTR tv1308[ebp]
	mov	DWORD PTR tv373[ebp], ecx
	cmp	DWORD PTR tv373[ebp], 0
	jne	SHORT $LN76@xmlGetFeat

; 256  :         *((fatalErrorSAXFunc *) result) = ctxt->sax->fatalError;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+92]
	mov	DWORD PTR [ecx], edx
	jmp	$LN5@xmlGetFeat
$LN76@xmlGetFeat:

; 257  :     } else if (!strcmp(name, "SAX function getParameterEntity")) {

	mov	DWORD PTR tv1317[ebp], OFFSET ??_C@_0CA@CFPGLICD@SAX?5function?5getParameterEntity@
	mov	eax, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1315[ebp], eax
$LL233@xmlGetFeat:
	mov	ecx, DWORD PTR tv1315[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR tv1320[ebp], dl
	mov	eax, DWORD PTR tv1317[ebp]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN234@xmlGetFeat
	cmp	BYTE PTR tv1320[ebp], 0
	je	SHORT $LN235@xmlGetFeat
	mov	ecx, DWORD PTR tv1315[ebp]
	mov	dl, BYTE PTR [ecx+1]
	mov	BYTE PTR tv1327[ebp], dl
	mov	eax, DWORD PTR tv1317[ebp]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN234@xmlGetFeat
	add	DWORD PTR tv1315[ebp], 2
	add	DWORD PTR tv1317[ebp], 2
	cmp	BYTE PTR tv1327[ebp], 0
	jne	SHORT $LL233@xmlGetFeat
$LN235@xmlGetFeat:
	mov	DWORD PTR tv1332[ebp], 0
	jmp	SHORT $LN236@xmlGetFeat
$LN234@xmlGetFeat:
	sbb	ecx, ecx
	or	ecx, 1
	mov	DWORD PTR tv1332[ebp], ecx
$LN236@xmlGetFeat:
	mov	edx, DWORD PTR tv1332[ebp]
	mov	DWORD PTR tv380[ebp], edx
	cmp	DWORD PTR tv380[ebp], 0
	jne	SHORT $LN78@xmlGetFeat

; 258  :         *((getParameterEntitySAXFunc *) result) =

	mov	eax, DWORD PTR _ctxt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _result$[ebp]
	mov	eax, DWORD PTR [ecx+96]
	mov	DWORD PTR [edx], eax
	jmp	$LN5@xmlGetFeat
$LN78@xmlGetFeat:

; 259  :             ctxt->sax->getParameterEntity;
; 260  :     } else if (!strcmp(name, "SAX function cdataBlock")) {

	mov	DWORD PTR tv1341[ebp], OFFSET ??_C@_0BI@FKOGIEIN@SAX?5function?5cdataBlock@
	mov	ecx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1339[ebp], ecx
$LL237@xmlGetFeat:
	mov	edx, DWORD PTR tv1339[ebp]
	mov	al, BYTE PTR [edx]
	mov	BYTE PTR tv1344[ebp], al
	mov	ecx, DWORD PTR tv1341[ebp]
	cmp	al, BYTE PTR [ecx]
	jne	SHORT $LN238@xmlGetFeat
	cmp	BYTE PTR tv1344[ebp], 0
	je	SHORT $LN239@xmlGetFeat
	mov	edx, DWORD PTR tv1339[ebp]
	mov	al, BYTE PTR [edx+1]
	mov	BYTE PTR tv1351[ebp], al
	mov	ecx, DWORD PTR tv1341[ebp]
	cmp	al, BYTE PTR [ecx+1]
	jne	SHORT $LN238@xmlGetFeat
	add	DWORD PTR tv1339[ebp], 2
	add	DWORD PTR tv1341[ebp], 2
	cmp	BYTE PTR tv1351[ebp], 0
	jne	SHORT $LL237@xmlGetFeat
$LN239@xmlGetFeat:
	mov	DWORD PTR tv1356[ebp], 0
	jmp	SHORT $LN240@xmlGetFeat
$LN238@xmlGetFeat:
	sbb	edx, edx
	or	edx, 1
	mov	DWORD PTR tv1356[ebp], edx
$LN240@xmlGetFeat:
	mov	eax, DWORD PTR tv1356[ebp]
	mov	DWORD PTR tv387[ebp], eax
	cmp	DWORD PTR tv387[ebp], 0
	jne	SHORT $LN80@xmlGetFeat

; 261  :         *((cdataBlockSAXFunc *) result) = ctxt->sax->cdataBlock;

	mov	ecx, DWORD PTR _ctxt$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _result$[ebp]
	mov	ecx, DWORD PTR [edx+100]
	mov	DWORD PTR [eax], ecx
	jmp	$LN5@xmlGetFeat
$LN80@xmlGetFeat:

; 262  :     } else if (!strcmp(name, "SAX function externalSubset")) {

	mov	DWORD PTR tv1365[ebp], OFFSET ??_C@_0BM@DJIAAFCM@SAX?5function?5externalSubset@
	mov	edx, DWORD PTR _name$[ebp]
	mov	DWORD PTR tv1363[ebp], edx
$LL241@xmlGetFeat:
	mov	eax, DWORD PTR tv1363[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR tv1368[ebp], cl
	mov	edx, DWORD PTR tv1365[ebp]
	cmp	cl, BYTE PTR [edx]
	jne	SHORT $LN242@xmlGetFeat
	cmp	BYTE PTR tv1368[ebp], 0
	je	SHORT $LN243@xmlGetFeat
	mov	eax, DWORD PTR tv1363[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR tv1375[ebp], cl
	mov	edx, DWORD PTR tv1365[ebp]
	cmp	cl, BYTE PTR [edx+1]
	jne	SHORT $LN242@xmlGetFeat
	add	DWORD PTR tv1363[ebp], 2
	add	DWORD PTR tv1365[ebp], 2
	cmp	BYTE PTR tv1375[ebp], 0
	jne	SHORT $LL241@xmlGetFeat
$LN243@xmlGetFeat:
	mov	DWORD PTR tv1380[ebp], 0
	jmp	SHORT $LN244@xmlGetFeat
$LN242@xmlGetFeat:
	sbb	eax, eax
	or	eax, 1
	mov	DWORD PTR tv1380[ebp], eax
$LN244@xmlGetFeat:
	mov	ecx, DWORD PTR tv1380[ebp]
	mov	DWORD PTR tv394[ebp], ecx
	cmp	DWORD PTR tv394[ebp], 0
	jne	SHORT $LN82@xmlGetFeat

; 263  :         *((externalSubsetSAXFunc *) result) = ctxt->sax->externalSubset;

	mov	edx, DWORD PTR _ctxt$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR [eax+104]
	mov	DWORD PTR [ecx], edx

; 264  :     } else {

	jmp	SHORT $LN5@xmlGetFeat
$LN82@xmlGetFeat:

; 265  :         return (-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlGetFeat
$LN5@xmlGetFeat:

; 266  :     }
; 267  :     return (0);

	xor	eax, eax
$LN1@xmlGetFeat:

; 268  : }

	pop	edi
	add	esp, 800				; 00000320H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlGetFeature ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlGetFeaturesList
_TEXT	SEGMENT
_i$ = -8						; size = 4
_ret$ = -4						; size = 4
_len$ = 8						; size = 4
_result$ = 12						; size = 4
_xmlGetFeaturesList PROC				; COMDAT

; 146  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 147  :     int ret, i;
; 148  : 
; 149  :     ret = sizeof(xmlFeaturesList) / sizeof(xmlFeaturesList[0]);

	mov	DWORD PTR _ret$[ebp], 42		; 0000002aH

; 150  :     if ((len == NULL) || (result == NULL))

	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN6@xmlGetFeat
	cmp	DWORD PTR _result$[ebp], 0
	jne	SHORT $LN5@xmlGetFeat
$LN6@xmlGetFeat:

; 151  :         return (ret);

	mov	eax, DWORD PTR _ret$[ebp]
	jmp	SHORT $LN1@xmlGetFeat
$LN5@xmlGetFeat:

; 152  :     if ((*len < 0) || (*len >= 1000))

	mov	eax, DWORD PTR _len$[ebp]
	cmp	DWORD PTR [eax], 0
	jl	SHORT $LN8@xmlGetFeat
	mov	ecx, DWORD PTR _len$[ebp]
	cmp	DWORD PTR [ecx], 1000			; 000003e8H
	jl	SHORT $LN7@xmlGetFeat
$LN8@xmlGetFeat:

; 153  :         return (-1);

	or	eax, -1
	jmp	SHORT $LN1@xmlGetFeat
$LN7@xmlGetFeat:

; 154  :     if (*len > ret)

	mov	edx, DWORD PTR _len$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR _ret$[ebp]
	jle	SHORT $LN9@xmlGetFeat

; 155  :         *len = ret;

	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _ret$[ebp]
	mov	DWORD PTR [ecx], edx
$LN9@xmlGetFeat:

; 156  :     for (i = 0; i < *len; i++)

	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@xmlGetFeat
$LN2@xmlGetFeat:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@xmlGetFeat:
	mov	ecx, DWORD PTR _len$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	cmp	edx, DWORD PTR [ecx]
	jge	SHORT $LN3@xmlGetFeat

; 157  :         result[i] = xmlFeaturesList[i];

	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _result$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _xmlFeaturesList[edx*4]
	mov	DWORD PTR [ecx+eax*4], edx
	jmp	SHORT $LN2@xmlGetFeat
$LN3@xmlGetFeat:

; 158  :     return (ret);

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xmlGetFeat:

; 159  : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_xmlGetFeaturesList ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlCleanupPredefinedEntities
_TEXT	SEGMENT
_xmlCleanupPredefinedEntities PROC			; COMDAT

; 85   : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 86   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlCleanupPredefinedEntities ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlEncodeEntities
_TEXT	SEGMENT
_doc$ = 8						; size = 4
_input$ = 12						; size = 4
_xmlEncodeEntities PROC					; COMDAT

; 728  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 729  :     static int warning = 1;
; 730  : 
; 731  :     if (warning) {

	cmp	DWORD PTR ?warning@?1??xmlEncodeEntities@@9@9, 0
	je	SHORT $LN2@xmlEncodeE

; 732  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0CJ@KEKEIBCJ@Deprecated?5API?5xmlEncodeEntitie@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 733  :                         "Deprecated API xmlEncodeEntities() used\n");
; 734  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0DE@BODOCGDI@?5?5?5change?5code?5to?5use?5xmlEncode@
	call	___xmlGenericErrorContext
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___xmlGenericError
	mov	eax, DWORD PTR [eax]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 735  :                         "   change code to use xmlEncodeEntitiesReentrant()\n");
; 736  :         warning = 0;

	mov	DWORD PTR ?warning@?1??xmlEncodeEntities@@9@9, 0
$LN2@xmlEncodeE:

; 737  :     }
; 738  :     return (NULL);

	xor	eax, eax

; 739  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlEncodeEntities ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlInitializePredefinedEntities
_TEXT	SEGMENT
_xmlInitializePredefinedEntities PROC			; COMDAT

; 74   : {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 75   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlInitializePredefinedEntities ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\legacy.c
;	COMDAT _xmlNewGlobalNs
_TEXT	SEGMENT
_doc$ = 8						; size = 4
_href$ = 12						; size = 4
_prefix$ = 16						; size = 4
_xmlNewGlobalNs PROC					; COMDAT

; 682  : {

	push	ebp
	mov	ebp, esp
	push	esi
	mov	ecx, OFFSET __06F2C055_legacy@c
	call	@__CheckForDebuggerJustMyCode@4

; 683  :     static int deprecated = 0;
; 684  : 
; 685  :     if (!deprecated) {

	cmp	DWORD PTR ?deprecated@?1??xmlNewGlobalNs@@9@9, 0
	jne	SHORT $LN2@xmlNewGlob

; 686  :         xmlGenericError(xmlGenericErrorContext,

	mov	esi, esp
	push	OFFSET ??_C@_0CO@DFBKILL@xmlNewGlobalNs?$CI?$CJ?5deprecated?5fun@
	call	___xmlGenericErrorContext
	mov	eax, DWORD PTR [eax]
	push	eax
	call	___xmlGenericError
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 687  :                         "xmlNewGlobalNs() deprecated function reached\n");
; 688  :         deprecated = 1;

	mov	DWORD PTR ?deprecated@?1??xmlNewGlobalNs@@9@9, 1
$LN2@xmlNewGlob:

; 689  :     }
; 690  :     return (NULL);

	xor	eax, eax

; 691  : }

	pop	esi
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xmlNewGlobalNs ENDP
_TEXT	ENDS
END
