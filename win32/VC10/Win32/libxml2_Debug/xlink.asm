; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27027.1 

	TITLE	C:\Users\DAG\Documents\_Clients\CodeProject Authors Group\Windows on ARM\libxml2\libxml2-2.9.9\xlink.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_forbiddenExp:DWORD
COMM	_emptyExp:DWORD
COMM	_xmlMalloc:DWORD
COMM	_xmlMallocAtomic:DWORD
COMM	_xmlRealloc:DWORD
COMM	_xmlFree:DWORD
COMM	_xmlMemStrdup:DWORD
_DATA	ENDS
msvcjmc	SEGMENT
__188180DA_corecrt_math@h DB 01H
__2CC6E67D_corecrt_stdio_config@h DB 01H
__05476D76_corecrt_wstdio@h DB 01H
__A452D4A0_stdio@h DB 01H
__4384A2D9_corecrt_memcpy_s@h DB 01H
__4E51A221_corecrt_wstring@h DB 01H
__2140C079_string@h DB 01H
__7B7A869E_ctype@h DB 01H
__A40A425D_stat@h DB 01H
__457DD326_basetsd@h DB 01H
__1887E595_winnt@h DB 01H
__9FC7C64B_processthreadsapi@h DB 01H
__FA470AEC_memoryapi@h DB 01H
__F37DAFF1_winerror@h DB 01H
__7A450CCC_winbase@h DB 01H
__B4B40122_winioctl@h DB 01H
__86261D59_stralign@h DB 01H
__E43CAA02_xlink@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	_snprintf
PUBLIC	_xlinkGetDefaultDetect
PUBLIC	_xlinkSetDefaultDetect
PUBLIC	_xlinkGetDefaultHandler
PUBLIC	_xlinkSetDefaultHandler
PUBLIC	_xlinkIsLink
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0BO@DIGPEIDG@http?3?1?1www?4w3?4org?11999?1xhtml?1@ ; `string'
PUBLIC	??_C@_0CI@PBGMGCJI@http?3?1?1www?4w3?4org?11999?1xlink?1na@ ; `string'
PUBLIC	??_C@_04GPMDFGEJ@type@				; `string'
PUBLIC	??_C@_06MDDCAKGD@simple@			; `string'
PUBLIC	??_C@_08ONGCMBFO@extended@			; `string'
PUBLIC	??_C@_04IAMNPBLO@role@				; `string'
PUBLIC	??_C@_0BH@MHEJCPPK@xlink?3external?9linkset@	; `string'
PUBLIC	??_C@_0BE@NPIDLLNF@?$CFs?3external?9linkset@	; `string'
EXTRN	_xmlStrEqual:PROC
EXTRN	__imp____stdio_common_vsprintf:PROC
EXTRN	_xmlSearchNs:PROC
EXTRN	_xmlGetNsProp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_xlinkDefaultHandler DD 01H DUP (?)
_xlinkDefaultDetect DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BE@NPIDLLNF@?$CFs?3external?9linkset@
CONST	SEGMENT
??_C@_0BE@NPIDLLNF@?$CFs?3external?9linkset@ DB '%s:external-linkset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@MHEJCPPK@xlink?3external?9linkset@
CONST	SEGMENT
??_C@_0BH@MHEJCPPK@xlink?3external?9linkset@ DB 'xlink:external-linkset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04IAMNPBLO@role@
CONST	SEGMENT
??_C@_04IAMNPBLO@role@ DB 'role', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08ONGCMBFO@extended@
CONST	SEGMENT
??_C@_08ONGCMBFO@extended@ DB 'extended', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06MDDCAKGD@simple@
CONST	SEGMENT
??_C@_06MDDCAKGD@simple@ DB 'simple', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04GPMDFGEJ@type@
CONST	SEGMENT
??_C@_04GPMDFGEJ@type@ DB 'type', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CI@PBGMGCJI@http?3?1?1www?4w3?4org?11999?1xlink?1na@
CONST	SEGMENT
??_C@_0CI@PBGMGCJI@http?3?1?1www?4w3?4org?11999?1xlink?1na@ DB 'http://ww'
	DB	'w.w3.org/1999/xlink/namespace/', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@DIGPEIDG@http?3?1?1www?4w3?4org?11999?1xhtml?1@
CONST	SEGMENT
??_C@_0BO@DIGPEIDG@http?3?1?1www?4w3?4org?11999?1xhtml?1@ DB 'http://www.'
	DB	'w3.org/1999/xhtml/', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xlink.c
;	COMDAT _xlinkIsLink
_TEXT	SEGMENT
_buf$1 = -220						; size = 200
_xlink$2 = -16						; size = 4
_ret$ = -12						; size = 4
_role$ = -8						; size = 4
_type$ = -4						; size = 4
_doc$ = 8						; size = 4
_node$ = 12						; size = 4
_xlinkIsLink PROC					; COMDAT

; 123  : xlinkIsLink	(xmlDocPtr doc, xmlNodePtr node) {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E43CAA02_xlink@c
	call	@__CheckForDebuggerJustMyCode@4

; 124  :     xmlChar *type = NULL, *role = NULL;

	mov	DWORD PTR _type$[ebp], 0
	mov	DWORD PTR _role$[ebp], 0

; 125  :     xlinkType ret = XLINK_TYPE_NONE;

	mov	DWORD PTR _ret$[ebp], 0

; 126  : 
; 127  :     if (node == NULL) return(XLINK_TYPE_NONE);

	cmp	DWORD PTR _node$[ebp], 0
	jne	SHORT $LN2@xlinkIsLin
	xor	eax, eax
	jmp	$LN1@xlinkIsLin
$LN2@xlinkIsLin:

; 128  :     if (doc == NULL) doc = node->doc;

	cmp	DWORD PTR _doc$[ebp], 0
	jne	SHORT $LN3@xlinkIsLin
	mov	eax, DWORD PTR _node$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _doc$[ebp], ecx
$LN3@xlinkIsLin:

; 129  :     if ((doc != NULL) && (doc->type == XML_HTML_DOCUMENT_NODE)) {

	cmp	DWORD PTR _doc$[ebp], 0
	je	SHORT $LN4@xlinkIsLin
	mov	edx, DWORD PTR _doc$[ebp]
	cmp	DWORD PTR [edx+4], 13			; 0000000dH
	jne	SHORT $LN4@xlinkIsLin
	jmp	SHORT $LN5@xlinkIsLin
$LN4@xlinkIsLin:

; 130  :         /*
; 131  : 	 * This is an HTML document.
; 132  : 	 */
; 133  :     } else if ((node->ns != NULL) &&

	mov	eax, DWORD PTR _node$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN5@xlinkIsLin
	push	OFFSET ??_C@_0BO@DIGPEIDG@http?3?1?1www?4w3?4org?11999?1xhtml?1@
	mov	ecx, DWORD PTR _node$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	call	_xmlStrEqual
	add	esp, 8
$LN5@xlinkIsLin:

; 134  :                (xmlStrEqual(node->ns->href, XHTML_NAMESPACE))) {
; 135  : 	/*
; 136  : 	 * !!!! We really need an IS_XHTML_ELEMENT function from HTMLtree.h @@@
; 137  : 	 */
; 138  :         /*
; 139  : 	 * This is an XHTML element within an XML document
; 140  : 	 * Check whether it's one of the element able to carry links
; 141  : 	 * and in that case if it holds the attributes.
; 142  : 	 */
; 143  :     }
; 144  : 
; 145  :     /*
; 146  :      * We don't prevent a-priori having XML Linking constructs on
; 147  :      * XHTML elements
; 148  :      */
; 149  :     type = xmlGetNsProp(node, BAD_CAST"type", XLINK_NAMESPACE);

	push	OFFSET ??_C@_0CI@PBGMGCJI@http?3?1?1www?4w3?4org?11999?1xlink?1na@
	push	OFFSET ??_C@_04GPMDFGEJ@type@
	mov	ecx, DWORD PTR _node$[ebp]
	push	ecx
	call	_xmlGetNsProp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _type$[ebp], eax

; 150  :     if (type != NULL) {

	cmp	DWORD PTR _type$[ebp], 0
	je	$LN7@xlinkIsLin

; 151  : 	if (xmlStrEqual(type, BAD_CAST "simple")) {

	push	OFFSET ??_C@_06MDDCAKGD@simple@
	mov	edx, DWORD PTR _type$[ebp]
	push	edx
	call	_xmlStrEqual
	add	esp, 8
	test	eax, eax
	je	SHORT $LN8@xlinkIsLin

; 152  :             ret = XLINK_TYPE_SIMPLE;

	mov	DWORD PTR _ret$[ebp], 1
	jmp	$LN7@xlinkIsLin
$LN8@xlinkIsLin:

; 153  : 	} else if (xmlStrEqual(type, BAD_CAST "extended")) {

	push	OFFSET ??_C@_08ONGCMBFO@extended@
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_xmlStrEqual
	add	esp, 8
	test	eax, eax
	je	$LN7@xlinkIsLin

; 154  : 	    role = xmlGetNsProp(node, BAD_CAST "role", XLINK_NAMESPACE);

	push	OFFSET ??_C@_0CI@PBGMGCJI@http?3?1?1www?4w3?4org?11999?1xlink?1na@
	push	OFFSET ??_C@_04IAMNPBLO@role@
	mov	ecx, DWORD PTR _node$[ebp]
	push	ecx
	call	_xmlGetNsProp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _role$[ebp], eax

; 155  : 	    if (role != NULL) {

	cmp	DWORD PTR _role$[ebp], 0
	je	$LN11@xlinkIsLin

; 156  : 		xmlNsPtr xlink;
; 157  : 		xlink = xmlSearchNs(doc, node, XLINK_NAMESPACE);

	push	OFFSET ??_C@_0CI@PBGMGCJI@http?3?1?1www?4w3?4org?11999?1xlink?1na@
	mov	edx, DWORD PTR _node$[ebp]
	push	edx
	mov	eax, DWORD PTR _doc$[ebp]
	push	eax
	call	_xmlSearchNs
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _xlink$2[ebp], eax

; 158  : 		if (xlink == NULL) {

	cmp	DWORD PTR _xlink$2[ebp], 0
	jne	SHORT $LN12@xlinkIsLin

; 159  : 		    /* Humm, fallback method */
; 160  : 		    if (xmlStrEqual(role, BAD_CAST"xlink:external-linkset"))

	push	OFFSET ??_C@_0BH@MHEJCPPK@xlink?3external?9linkset@
	mov	ecx, DWORD PTR _role$[ebp]
	push	ecx
	call	_xmlStrEqual
	add	esp, 8
	test	eax, eax
	je	SHORT $LN14@xlinkIsLin

; 161  : 			ret = XLINK_TYPE_EXTENDED_SET;

	mov	DWORD PTR _ret$[ebp], 3
$LN14@xlinkIsLin:

; 162  : 		} else {

	jmp	SHORT $LN11@xlinkIsLin
$LN12@xlinkIsLin:

; 163  : 		    xmlChar buf[200];
; 164  : 		    snprintf((char *) buf, sizeof(buf), "%s:external-linkset",

	mov	edx, DWORD PTR _xlink$2[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	push	OFFSET ??_C@_0BE@NPIDLLNF@?$CFs?3external?9linkset@
	push	200					; 000000c8H
	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	call	_snprintf
	add	esp, 16					; 00000010H

; 165  : 			     (char *) xlink->prefix);
; 166  :                     buf[sizeof(buf) - 1] = 0;

	mov	edx, 1
	imul	eax, edx, 199
	mov	BYTE PTR _buf$1[ebp+eax], 0

; 167  : 		    if (xmlStrEqual(role, buf))

	lea	ecx, DWORD PTR _buf$1[ebp]
	push	ecx
	mov	edx, DWORD PTR _role$[ebp]
	push	edx
	call	_xmlStrEqual
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@xlinkIsLin

; 168  : 			ret = XLINK_TYPE_EXTENDED_SET;

	mov	DWORD PTR _ret$[ebp], 3
$LN11@xlinkIsLin:

; 169  : 
; 170  : 		}
; 171  : 
; 172  : 	    }
; 173  : 	    ret = XLINK_TYPE_EXTENDED;

	mov	DWORD PTR _ret$[ebp], 2
$LN7@xlinkIsLin:

; 174  : 	}
; 175  :     }
; 176  : 
; 177  :     if (type != NULL) xmlFree(type);

	cmp	DWORD PTR _type$[ebp], 0
	je	SHORT $LN16@xlinkIsLin
	mov	esi, esp
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@xlinkIsLin:

; 178  :     if (role != NULL) xmlFree(role);

	cmp	DWORD PTR _role$[ebp], 0
	je	SHORT $LN17@xlinkIsLin
	mov	esi, esp
	mov	ecx, DWORD PTR _role$[ebp]
	push	ecx
	call	DWORD PTR _xmlFree
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@xlinkIsLin:

; 179  :     return(ret);

	mov	eax, DWORD PTR _ret$[ebp]
$LN1@xlinkIsLin:

; 180  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@xlinkIsLin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@xlinkIsLin:
	DD	1
	DD	$LN20@xlinkIsLin
$LN20@xlinkIsLin:
	DD	-220					; ffffff24H
	DD	200					; 000000c8H
	DD	$LN19@xlinkIsLin
$LN19@xlinkIsLin:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_xlinkIsLink ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xlink.c
;	COMDAT _xlinkSetDefaultHandler
_TEXT	SEGMENT
_handler$ = 8						; size = 4
_xlinkSetDefaultHandler PROC				; COMDAT

; 74   : xlinkSetDefaultHandler(xlinkHandlerPtr handler) {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __E43CAA02_xlink@c
	call	@__CheckForDebuggerJustMyCode@4

; 75   :     xlinkDefaultHandler = handler;

	mov	eax, DWORD PTR _handler$[ebp]
	mov	DWORD PTR _xlinkDefaultHandler, eax

; 76   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xlinkSetDefaultHandler ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xlink.c
;	COMDAT _xlinkGetDefaultHandler
_TEXT	SEGMENT
_xlinkGetDefaultHandler PROC				; COMDAT

; 62   : xlinkGetDefaultHandler(void) {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __E43CAA02_xlink@c
	call	@__CheckForDebuggerJustMyCode@4

; 63   :     return(xlinkDefaultHandler);

	mov	eax, DWORD PTR _xlinkDefaultHandler

; 64   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xlinkGetDefaultHandler ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xlink.c
;	COMDAT _xlinkSetDefaultDetect
_TEXT	SEGMENT
_func$ = 8						; size = 4
_xlinkSetDefaultDetect PROC				; COMDAT

; 97   : xlinkSetDefaultDetect	(xlinkNodeDetectFunc func) {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __E43CAA02_xlink@c
	call	@__CheckForDebuggerJustMyCode@4

; 98   :     xlinkDefaultDetect = func;

	mov	eax, DWORD PTR _func$[ebp]
	mov	DWORD PTR _xlinkDefaultDetect, eax

; 99   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xlinkSetDefaultDetect ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\users\dag\documents\_clients\codeproject authors group\windows on arm\libxml2\libxml2-2.9.9\xlink.c
;	COMDAT _xlinkGetDefaultDetect
_TEXT	SEGMENT
_xlinkGetDefaultDetect PROC				; COMDAT

; 86   : xlinkGetDefaultDetect	(void) {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __E43CAA02_xlink@c
	call	@__CheckForDebuggerJustMyCode@4

; 87   :     return(xlinkDefaultDetect);

	mov	eax, DWORD PTR _xlinkDefaultDetect

; 88   : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
_xlinkGetDefaultDetect ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\stdio.h
;	COMDAT _snprintf
_TEXT	SEGMENT
tv81 = -20						; size = 4
__Result$1 = -16					; size = 4
__Format$ = -12						; size = 4
__ArgList$ = -8						; size = 4
__Result$ = -4						; size = 4
__Buffer$ = 8						; size = 4
__BufferCount$ = 12					; size = 4
__Format$ = 16						; size = 4
_snprintf PROC						; COMDAT

; 1948 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	ecx, OFFSET __A452D4A0_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 1949 :         int _Result;
; 1950 :         va_list _ArgList;
; 1951 :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 1952 :     #pragma warning(suppress:28719)    // 28719
; 1953 :         _Result = vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

	mov	ecx, DWORD PTR __Format$[ebp]
	mov	DWORD PTR __Format$[ebp], ecx

; 1440 :         int const _Result = __stdio_common_vsprintf(

	mov	esi, esp
	mov	edx, DWORD PTR __ArgList$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR __Format$[ebp]
	push	eax
	mov	ecx, DWORD PTR __BufferCount$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Buffer$[ebp]
	push	edx
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax]
	or	ecx, 2
	mov	edx, DWORD PTR [eax+4]
	push	edx
	push	ecx
	call	DWORD PTR __imp____stdio_common_vsprintf
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR __Result$1[ebp], eax

; 1441 :             _CRT_INTERNAL_LOCAL_PRINTF_OPTIONS | _CRT_INTERNAL_PRINTF_STANDARD_SNPRINTF_BEHAVIOR,
; 1442 :             _Buffer, _BufferCount, _Format, NULL, _ArgList);
; 1443 : 
; 1444 :         return _Result < 0 ? -1 : _Result;

	cmp	DWORD PTR __Result$1[ebp], 0
	jge	SHORT $LN5@snprintf
	mov	DWORD PTR tv81[ebp], -1
	jmp	SHORT $LN3@snprintf
$LN5@snprintf:
	mov	eax, DWORD PTR __Result$1[ebp]
	mov	DWORD PTR tv81[ebp], eax
$LN3@snprintf:

; 1952 :     #pragma warning(suppress:28719)    // 28719
; 1953 :         _Result = vsnprintf(_Buffer, _BufferCount, _Format, _ArgList);

	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR __Result$[ebp], ecx

; 1954 :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 1955 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 1956 :     }

	pop	esi
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_snprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File c:\program files (x86)\windows kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp
	mov	ecx, OFFSET __2CC6E67D_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
